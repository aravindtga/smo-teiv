--
-- ============LICENSE_START=======================================================
-- Copyright (C) 2024 Ericsson
-- Modifications Copyright (C) 2024 OpenInfra Foundation Europe
-- ================================================================================
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--       http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--
-- SPDX-License-Identifier: Apache-2.0
-- ============LICENSE_END=========================================================
--

BEGIN;

DROP SCHEMA IF EXISTS ties_model cascade;
CREATE SCHEMA IF NOT EXISTS ties_model;
ALTER SCHEMA ties_model OWNER TO topology_exposure_user;
SET default_tablespace = '';
SET default_table_access_method = heap;

SET ROLE 'topology_exposure_user';

CREATE TABLE IF NOT EXISTS ties_model.execution_status (
    "schema" VARCHAR(127) PRIMARY KEY,
    "status" VARCHAR(127)
);

CREATE TABLE IF NOT EXISTS ties_model.hash_info (
    "name"        TEXT PRIMARY KEY,
    "hashedValue" VARCHAR(63) NOT NULL,
    "type"        VARCHAR(511)
);

CREATE TABLE IF NOT EXISTS ties_model.module_reference (
    "name"            TEXT PRIMARY KEY,
    "namespace"       TEXT,
    "domain"          TEXT,
    "includedModules" jsonb DEFAULT '[]'::jsonb,
    "revision"        TEXT NOT NULL,
    "content"         TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS ties_model.entity_info (
    "storedAt"            TEXT PRIMARY KEY,
    "name"                TEXT NOT NULL,
    "moduleReferenceName" TEXT NOT NULL,
    FOREIGN KEY ("moduleReferenceName") REFERENCES ties_model.module_reference ("name") ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ties_model.relationship_info (
    "name"                     TEXT NOT NULL,
    "aSideAssociationName"     TEXT NOT NULL,
    "aSideMOType"              TEXT NOT NULL,
    "aSideModule"              TEXT NOT NULL,
    "aSideMinCardinality"      BIGINT NOT NULL,
    "aSideMaxCardinality"      BIGINT NOT NULL,
    "bSideAssociationName"     TEXT NOT NULL,
    "bSideMOType"              TEXT NOT NULL,
    "bSideModule"              TEXT NOT NULL,
    "bSideMinCardinality"      BIGINT NOT NULL,
    "bSideMaxCardinality"      BIGINT NOT NULL,
    "associationKind"          TEXT NOT NULL,
    "relationshipDataLocation" TEXT NOT NULL,
    "storedAt"                 TEXT NOT NULL,
    "connectSameEntity"        BOOLEAN NOT NULL,
    "moduleReferenceName"      TEXT NOT NULL,
    PRIMARY KEY ("name", "moduleReferenceName"),
    FOREIGN KEY ("aSideModule") REFERENCES ties_model.module_reference ("name") ON DELETE CASCADE,
    FOREIGN KEY ("bSideModule") REFERENCES ties_model.module_reference ("name") ON DELETE CASCADE,
    FOREIGN KEY ("moduleReferenceName") REFERENCES ties_model.module_reference ("name") ON DELETE CASCADE
);

-- Update model schema exec status
INSERT INTO ties_model.execution_status("schema", "status") VALUES ('ties_model', 'success');

COPY ties_model.hash_info("name", "hashedValue", "type") FROM stdin;
CD_classifiers	CD_classifiers	COLUMN
CD_decorators	CD_decorators	COLUMN
CD_sourceIds	CD_sourceIds	COLUMN
FK_o-ran-smo-teiv-cloud_CloudNamespace_REL_FK_deployed-on-nodeCluster	FK_578C2E899F50A133E194733D63BBEE81D9E0D8F4	CONSTRAINT
FK_o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE_aSide_NFDeployment	FK_B747BD330BCD18563818EEBBED49D5CD29D2787B	CONSTRAINT
FK_o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE_bSide_CloudNamespace	FK_C94E3F3ACD4ADCB4153521A6D8EC9D38CCAF7AAA	CONSTRAINT
FK_o-ran-smo-teiv-cloud_NFDeployment_REL_FK_comprised-by-cloudifiedNF	FK_127C21CB9B8871C3BCACA05A5400BE6B8E7FCAC0	CONSTRAINT
FK_o-ran-smo-teiv-cloud_NFDeployment_REL_FK_serviced-managedElement	FK_AC1348E208C2E64F2EB1DECE2CCA5DB10B89CBD9	CONSTRAINT
FK_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_aSide_NodeCluster	FK_6BFD8A633C553F178F2730403371E590D669A4E4	CONSTRAINT
FK_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_bSide_CloudSite	FK_A80C81E7F1C8CBF32326F589E7582BF533474CB8	CONSTRAINT
FK_o-ran-smo-teiv-equipment_AntennaModule_REL_FK_grouped-by-sector	FK_078764B2F3D613D44CC6E3586F564C83164D2481	CONSTRAINT
FK_o-ran-smo-teiv-equipment_AntennaModule_REL_FK_installed-at-site	FK_E3BAEF04443354C0FC1837CF7964E05BEF9FD6CC	CONSTRAINT
FK_o-ran-smo-teiv-oam_ManagedElement_REL_FK_deployed-as-cloudifiedNF	FK_899B8130A861D1450FC49D3159D8B29C0628A717	CONSTRAINT
FK_o-ran-smo-teiv-ran_ENodeBFunction_REL_FK_managed-by-managedElement	FK_6C99B14BF3C9BC6DE2D69AD55DF323ADCB174167	CONSTRAINT
FK_o-ran-smo-teiv-ran_EUtranCell_REL_FK_grouped-by-sector	FK_o-ran-smo-teiv-ran_EUtranCell_REL_FK_grouped-by-sector	CONSTRAINT
FK_o-ran-smo-teiv-ran_EUtranCell_REL_FK_provided-by-enodebFunction	FK_2D1FA89480BF856AB865D58FAFB6AC0B476015EB	CONSTRAINT
FK_o-ran-smo-teiv-ran_GNBCUCPFunction_REL_FK_managed-by-managedElement	FK_F1FB8F88851067901B66D53EE1420D2ECCEC98A3	CONSTRAINT
FK_o-ran-smo-teiv-ran_GNBCUUPFunction_REL_FK_managed-by-managedElement	FK_34D6E2537E8EE1D395CAF5BF9B2182A4696A1EAA	CONSTRAINT
FK_o-ran-smo-teiv-ran_GNBDUFunction_REL_FK_managed-by-managedElement	FK_F67FAF9D3E82B97104E2392DA0AC8A86DF2407CC	CONSTRAINT
FK_o-ran-smo-teiv-ran_LTESectorCarrier_REL_FK_provided-by-enodebFunction	FK_D0868FBC0BBE2754F4B765C4898C1A1700E2BEFD	CONSTRAINT
FK_o-ran-smo-teiv-ran_LTESectorCarrier_REL_FK_used-antennaCapability	FK_3D8DF3FBD9C042A888CEB382688C1E8F39D85AFE	CONSTRAINT
FK_o-ran-smo-teiv-ran_LTESectorCarrier_REL_FK_used-by-euTranCell	FK_96E6D4983CFFDF30FCA20423B5913DEE486E42D0	CONSTRAINT
FK_o-ran-smo-teiv-ran_NRCellCU_REL_FK_provided-by-gnbcucpFunction	FK_F2CDD1E84C7F07BF8065F99A5F3488E91E3BB7B2	CONSTRAINT
FK_o-ran-smo-teiv-ran_NRCellDU_REL_FK_grouped-by-sector	FK_o-ran-smo-teiv-ran_NRCellDU_REL_FK_grouped-by-sector	CONSTRAINT
FK_o-ran-smo-teiv-ran_NRCellDU_REL_FK_provided-by-gnbduFunction	FK_o-ran-smo-teiv-ran_NRCellDU_REL_FK_provided-by-gnbduFunction	CONSTRAINT
FK_o-ran-smo-teiv-ran_NRSectorCarrier_REL_FK_provided-by-gnbduFunction	FK_F7978366174C82E41F0A6ABF29005FF01603858F	CONSTRAINT
FK_o-ran-smo-teiv-ran_NRSectorCarrier_REL_FK_used-antennaCapability	FK_65D538D54EB33081C808540235FEB28823428E64	CONSTRAINT
FK_o-ran-smo-teiv-ran_NRSectorCarrier_REL_FK_used-by-nrCellDu	FK_o-ran-smo-teiv-ran_NRSectorCarrier_REL_FK_used-by-nrCellDu	CONSTRAINT
FK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION_aSide_NFDeployment	FK_6D0E3426A51B665F58683CD51B16309A4906C069	CONSTRAINT
FK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION_bSide_GNBCUCPFunction	FK_D3F50F479BFE3C0EA46395541E5A8319D4C93C28	CONSTRAINT
FK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION_aSide_NFDeployment	FK_C73A4A2E6E78F60F4ACE8EE81F4DCA7C3E2B91DD	CONSTRAINT
FK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION_bSide_GNBCUUPFunction	FK_AB8702C7CF7B3B39F3946271F1808220ABC71461	CONSTRAINT
FK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION_aSide_NFDeployment	FK_E6A6C36D4FF5FCFF75D64D84CD124FD88252F735	CONSTRAINT
FK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION_bSide_GNBDUFunction	FK_AC409CAE557306A752577462405473B8CD3D93F0	CONSTRAINT
FK_o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY_aSide_AntennaModule	FK_D80D1E6B26DF620B4DE659C600A3B7F709A41960	CONSTRAINT
FK_o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY_bSide_AntennaCapability	FK_7148BEED02C0617DE1DEEB6639F34A9FA9251B06	CONSTRAINT
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudNamespace_CD_classifiers	IDX_BAB9B6E93250360ADF354D2A478A9AE0F0CDBA74	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudNamespace_CD_sourceIds	IDX_68E2CF0D41D96AFA209F4FB807E873F942E06160	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudNamespace_REL_CD_classifiers_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	IDX_0955C27501E74E6433BB2E0CA6C31CE919A96474	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudNamespace_REL_CD_sourceIds_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	IDX_6391A575D92408DA8CBC24C7E1D57B45A1F680AA	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudSite_CD_classifiers	IDX_AB2EA49D463C5A3F9D9AD3FBCBCBF44416031BED	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudSite_CD_sourceIds	IDX_0A6F89256B698212512EF3AC971B4FFAD26C4598	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudifiedNF_CD_classifiers	IDX_BD96130868B69147B2F87B0D15F5829690DEF454	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_CloudifiedNF_CD_sourceIds	IDX_9EDB5C47201FC82A4565BFED9EF369D6C6529B19	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE_CD_classifiers	IDX_947619E28616D6BC26387291E47CC65C010CE9A4	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE_CD_sourceIds	IDX_CA2F2186104EA61BD13152A7BC3B56DB2903483B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDeployment_CD_classifiers	IDX_BED5B5FAA75FEE133E27581EAA611B89D20F24E1	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDeployment_CD_sourceIds	IDX_6433B9B7D69E51E828BDCFCAF59729EDCD10DA60	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDeployment_REL_CD_classifiers_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	IDX_31F185F0F700C0AE11C5A9B8D28DBF6E37538635	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDeployment_REL_CD_classifiers_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	IDX_1EE98ACCAE5537752BD51A3D5F6429585CC543F6	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDeployment_REL_CD_sourceIds_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	IDX_072EB0C094138AB2D90F9CFBDA765B3B464EE86F	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NFDeployment_REL_CD_sourceIds_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	IDX_4DD95BAED8503502101FEB9ECA25DDA8F371816C	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_CD_classifiers	IDX_B32012D9ED6683AA0AEDF8C0894A5CD8C44B950B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_CD_sourceIds	IDX_5040461E772F4F4E71BB2BE590930AC2971C16D1	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NodeCluster_CD_classifiers	IDX_CB29E8DDA990051B2A3DF193D8E4912F25D5FA0D	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-cloud_NodeCluster_CD_sourceIds	IDX_DC1829E4241BA7C9B3E5281AC0DF00A766F9452E	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_CD_classifiers	IDX_1C0CAFD80FDD6444044E3F76C7C0A7BDC35F9BC8	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_CD_sourceIds	IDX_905011128A2C218B5352C19ED1FE9851F43EB911	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_REL_CD_classifiers_ANTENNAMODULE_INSTALLED_AT_SITE	IDX_17E417F7EF56809674BE1D5F5154DCCE01E00A96	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_REL_CD_classifiers_SECTOR_GROUPS_ANTENNAMODULE	IDX_83B6347C0C0A005D5E3D856D973D3322DFEDEA35	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_REL_CD_sourceIds_ANTENNAMODULE_INSTALLED_AT_SITE	IDX_F497DEC01DA066CB09DA2AA7EDE3F4410078491B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_REL_CD_sourceIds_SECTOR_GROUPS_ANTENNAMODULE	IDX_5ABDB19E55A6BDEF33855F14CB1B3B8CF457912C	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_AntennaModule_antennaBeamWidth	IDX_21B0F1FE632B6CB185C49BA6F00224068F443215	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_Site_CD_classifiers	IDX_EEBF1BC3344E97988232825777AB13FAB6C4F3F0	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-equipment_Site_CD_sourceIds	IDX_102A50584376DE25B6BBD7157594C607A5C957F2	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-oam_ManagedElement_CD_classifiers	IDX_98AC4232BC02323E03416954215889CEE874A1E9	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-oam_ManagedElement_CD_sourceIds	IDX_DDD73D6F4004BF3A96AA118281EE3E565A922B47	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-oam_ManagedElement_REL_CD_classifiers_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	IDX_634619CF7333EBC0AFDE990900B79220FC626EBA	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-oam_ManagedElement_REL_CD_sourceIds_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	IDX_8065626F3F48D4E5A4285654739D3B26499E4C4E	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_AntennaCapability_CD_classifiers	IDX_E7FFE8F4A166AA9A382A0659762FFEC313A9EB5C	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_AntennaCapability_CD_sourceIds	IDX_CC3E208A4EE51D3B505416A599F36F3C99F466C8	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_AntennaCapability_eUtranFqBands	IDX_5FB80647AE3E5C0443A792618D65B9090EE2A3FC	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_AntennaCapability_geranFqBands	IDX_A94722FF7B95D8974B494793908B57B4E1A9743B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_AntennaCapability_nRFqBands	IDX_441B5C05448D63552C6414BD59C13641D8A4408D	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_ENodeBFunction_CD_classifiers	IDX_B598B74193845587BA03553CEDBA058D33956847	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_ENodeBFunction_CD_sourceIds	IDX_3F7D14B4CF2CA74F28BA1600606E82C6E8C447C0	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_ENodeBFunction_REL_CD_classifiers_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	IDX_61CDCD3F69CF67EE740358D2C76FA796CFDA19BF	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_ENodeBFunction_REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	IDX_252AF4814C67384A7B05EA116316E83AFF9EB6AE	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_EUtranCell_CD_classifiers	IDX_C9C19F8F83F50C130F2EB6502ABB7B2833F1F783	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_EUtranCell_CD_sourceIds	IDX_84E36DC53519D3E334C60B5B02C1AB27130CFA24	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_EUtranCell_REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_EUTRANCELL	IDX_4C77E3A51BFAB2FCD30425E4EB21CC7636438299	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_EUtranCell_REL_CD_classifiers_SECTOR_GROUPS_EUTRANCELL	IDX_8A15E61498725DA9D8C78FC4B99053C06E88DCEC	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_EUtranCell_REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_EUTRANCELL	IDX_976F6A0F8991F64592B6F9E716EFEECBD5400FDA	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_EUtranCell_REL_CD_sourceIds_SECTOR_GROUPS_EUTRANCELL	IDX_173887418DD4FD6FD592F6404EA784150B1822C0	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUCPFunction_CD_classifiers	IDX_588840BAE32C7FF8CF0553F631DAAF8BB6E8E7C1	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUCPFunction_CD_sourceIds	IDX_BE4B476041D559760931630000D3F4A6DFF42707	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUCPFunction_REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	IDX_1324070754C1EBF8EA78EF40743AFC1713733BA8	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUCPFunction_REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	IDX_E01081465B87F46E1CC7A22FE406C7B41C817E8C	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUUPFunction_CD_classifiers	IDX_4C2B68358221A7FF0E68012DEDD3CBA2C4ED669F	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUUPFunction_CD_sourceIds	IDX_C6D2419F8DC299FBC98342AA00BE92308C7566A7	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUUPFunction_REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	IDX_EB07ADD66F6CF51B9330403DE4500D05CA067647	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBCUUPFunction_REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	IDX_883506CAA3E742D82EEFCEE8C8F29927983B73B1	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBDUFunction_CD_classifiers	IDX_601A4514FFACA8985471531013AFC8F760361F09	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBDUFunction_CD_sourceIds	IDX_2BEF269CED354C2454AC2B2EABB134AC267A0C62	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBDUFunction_REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	IDX_04C614FDE6A4AE2AA106A1233D1DF95803FC122D	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_GNBDUFunction_REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	IDX_3065F7FB78C5AA9FF17972F825F89AED127A6324	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_CD_classifiers	IDX_E754EB8AD825DB3111B07B9E5DA3B30C38DB406B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_CD_sourceIds	IDX_6EC539C61EA7078DBA264C9877B87FC263605D42	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	IDX_846B7740E8AA756B8C1409CD909D2DF73A47ED4C	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_classifiers_EUTRANCELL_USES_LTESECTORCARRIER	IDX_B291D7EFCAD3BF06A2C11F8C0429ABABEEF8308B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_classifiers_LTESECTORCARRIER_USES_ANTENNACAPABILITY	IDX_3D3EFECFB917DAC074F56334224B19F8FD6BF8A5	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	IDX_1EBC7271CEA658156DE25286404CBC4593340F8E	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_sourceIds_EUTRANCELL_USES_LTESECTORCARRIER	IDX_F2D46817C2D618D8C33945F282299BF9EB49465E	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_sourceIds_LTESECTORCARRIER_USES_ANTENNACAPABILITY	IDX_7D01A5D21C990ACCBE65035C062C7D881A05F1EE	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellCU_CD_classifiers	IDX_E5930226819982DC0CFC1FA64FB3600647222435	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellCU_CD_sourceIds	IDX_0C443A16285D233F16966C2F0314CDC9D0F6D0B8	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellCU_REL_CD_classifiers_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	IDX_04BE1EB39848069422B97C28EE3C8ED18BCC6D33	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellCU_REL_CD_sourceIds_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	IDX_36A671754CD510FFBDC2713FD142303DCA75DD65	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellDU_CD_classifiers	IDX_C437D39632DC79BAB6AC4F0880826A05425F9C32	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellDU_CD_sourceIds	IDX_FFD60DD99D80C276F402E66546F5DACB2D81EE26	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellDU_REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRCELLDU	IDX_2F4C43ED084968FDAF9943DB96741885C145FE1D	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellDU_REL_CD_classifiers_SECTOR_GROUPS_NRCELLDU	IDX_7CB4A7724F68D1CB2D12E8DE779BA9103F7DBE0A	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellDU_REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRCELLDU	IDX_1F6708B1E34FC908473DD7A7E5641E650B359BEF	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRCellDU_REL_CD_sourceIds_SECTOR_GROUPS_NRCELLDU	IDX_6325926B4D2FDD1FBBB34250DABEA5E7229FF9F5	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_CD_classifiers	IDX_050A80BEEF775E4D3CE216F282F23DB99DA2D798	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_CD_sourceIds	IDX_8E34EC0B1DE7DDCE3B32ADD85B11E15F95C5644E	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	IDX_273D43FDDD1C4643ECF8BBE51B6B369C657F0861	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_classifiers_NRCELLDU_USES_NRSECTORCARRIER	IDX_ED50A5139F1449DBAD8DA10D45F5A5BF819EACBA	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_classifiers_NRSECTORCARRIER_USES_ANTENNACAPABILITY	IDX_B975D24291849007D4AA6686C5D3983885D5C884	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	IDX_CD293AD1111E344D150340A13BD299924D29A9DA	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_sourceIds_NRCELLDU_USES_NRSECTORCARRIER	IDX_7BFD17A71AB1B7765FE6431DA4E66C2EDE88AC3B	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_sourceIds_NRSECTORCARRIER_USES_ANTENNACAPABILITY	IDX_1F27C515A028616FAC422A02ABBEC402D5DBB2E5	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_Sector_CD_classifiers	IDX_19C19556F9714850389595E0A16218FA229205FE	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-ran_Sector_CD_sourceIds	IDX_E234B43A7CD7843672F08F2197AB46A2A50BECB0	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION_CD_classifiers	IDX_1D6BFC1696A588F59F12697E08471B9EB8A4073D	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION_CD_sourceIds	IDX_85054B275ED4BE6CD5B21D0DF728D39CD8F975C2	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION_CD_classifiers	IDX_C82B7EDB24DB63FB28B03A886E88225F345FE3D8	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION_CD_sourceIds	IDX_34B07874400148A5C6BEF92D4507DFD69BE31186	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION_CD_classifiers	IDX_0129685EC2D748D2AD9EC0AF4FA2AB6242CD3CBF	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION_CD_sourceIds	IDX_5A45CC516788E441D6D4C5CCC6A1EB50C36F0C5C	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY_CD_classifiers	IDX_DD0D676834B12CA2F7E8219310998376A08D7F5F	INDEX
IDX_GIN_TRGM_OPS_ON_LIST_AS_JSONB_o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY_CD_sourceIds	IDX_E896A9EB22A3F9F96CE75A271475316A98B629C8	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_CloudNamespace_CD_decorators	IDX_GIN_o-ran-smo-teiv-cloud_CloudNamespace_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_CloudNamespace_REL_CD_decorators_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	IDX_2DD943E7AA20F192D80193C9A05807EA227E4AF5	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_CloudSite_CD_decorators	IDX_GIN_o-ran-smo-teiv-cloud_CloudSite_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_CloudifiedNF_CD_decorators	IDX_GIN_o-ran-smo-teiv-cloud_CloudifiedNF_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE_CD_decorators	IDX_A82FEF2ABF913EB8696131AFE99C0267C5DC3CA6	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_NFDeployment_CD_decorators	IDX_GIN_o-ran-smo-teiv-cloud_NFDeployment_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_NFDeployment_REL_CD_decorators_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	IDX_46CDB369134F042EC021F7496DF721B49A9D43C0	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_NFDeployment_REL_CD_decorators_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	IDX_39A292C3C42B34C2AD7C2A0FD087739C253B06FC	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_CD_decorators	IDX_7310FAE21221EDCDCC254C5CD1BE0D74F6FD9A1F	INDEX
IDX_GIN_o-ran-smo-teiv-cloud_NodeCluster_CD_decorators	IDX_GIN_o-ran-smo-teiv-cloud_NodeCluster_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-equipment_AntennaModule_CD_decorators	IDX_GIN_o-ran-smo-teiv-equipment_AntennaModule_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-equipment_AntennaModule_REL_CD_decorators_ANTENNAMODULE_INSTALLED_AT_SITE	IDX_2321BFA482AD2700F41E2BA359F6EB00F47601B9	INDEX
IDX_GIN_o-ran-smo-teiv-equipment_AntennaModule_REL_CD_decorators_SECTOR_GROUPS_ANTENNAMODULE	IDX_6C6FBD69F47F41970595A8775DC99CA0F5E894A1	INDEX
IDX_GIN_o-ran-smo-teiv-equipment_Site_CD_decorators	IDX_GIN_o-ran-smo-teiv-equipment_Site_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-oam_ManagedElement_CD_decorators	IDX_GIN_o-ran-smo-teiv-oam_ManagedElement_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-oam_ManagedElement_REL_CD_decorators_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	IDX_F15A070FC83B2E49223B4232E0BEB8931C2B7A4C	INDEX
IDX_GIN_o-ran-smo-teiv-ran_AntennaCapability_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_AntennaCapability_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_ENodeBFunction_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_ENodeBFunction_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_ENodeBFunction_REL_CD_decorators_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	IDX_35C17C8A9BA3EF3AEADA72C21F8090C38F575BAF	INDEX
IDX_GIN_o-ran-smo-teiv-ran_ENodeBFunction_eNodeBPlmnId	IDX_GIN_o-ran-smo-teiv-ran_ENodeBFunction_eNodeBPlmnId	INDEX
IDX_GIN_o-ran-smo-teiv-ran_EUtranCell_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_EUtranCell_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_EUtranCell_REL_CD_decorators_ENODEBFUNCTION_PROVIDES_EUTRANCELL	IDX_FC7D79187227E0BFA69149048CC10E39AE540B8A	INDEX
IDX_GIN_o-ran-smo-teiv-ran_EUtranCell_REL_CD_decorators_SECTOR_GROUPS_EUTRANCELL	IDX_E4EF3C904939ED4C0996EAB7CDFE1895CDF34BFB	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBCUCPFunction_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_GNBCUCPFunction_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBCUCPFunction_REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	IDX_13E734DE57346378DA4F21FC4EA030290A7E532F	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBCUCPFunction_pLMNId	IDX_GIN_o-ran-smo-teiv-ran_GNBCUCPFunction_pLMNId	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBCUUPFunction_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_GNBCUUPFunction_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBCUUPFunction_REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	IDX_C3141DD7D2695EF74B13981AB378A58390D203D6	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBDUFunction_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_GNBDUFunction_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBDUFunction_REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	IDX_298FCD184347DEC995B06FED2B1AE61F12BF766A	INDEX
IDX_GIN_o-ran-smo-teiv-ran_GNBDUFunction_dUpLMNId	IDX_GIN_o-ran-smo-teiv-ran_GNBDUFunction_dUpLMNId	INDEX
IDX_GIN_o-ran-smo-teiv-ran_LTESectorCarrier_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_LTESectorCarrier_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_decorators_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	IDX_44075E1D464599B61924196C20F2B88332520CD8	INDEX
IDX_GIN_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_decorators_EUTRANCELL_USES_LTESECTORCARRIER	IDX_EAE482189F45D63CD1A88B0DD5F76EEE163D9E53	INDEX
IDX_GIN_o-ran-smo-teiv-ran_LTESectorCarrier_REL_CD_decorators_LTESECTORCARRIER_USES_ANTENNACAPABILITY	IDX_4EE2AA643311DFCC13B6ED832EBE2FAB4CFDF494	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRCellCU_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_NRCellCU_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRCellCU_REL_CD_decorators_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	IDX_229957181BBC9D7B4535807BB397E8AA1378ED85	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRCellCU_plmnId	IDX_GIN_o-ran-smo-teiv-ran_NRCellCU_plmnId	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRCellDU_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_NRCellDU_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRCellDU_REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRCELLDU	IDX_0E63D6B76B229961CD45D998C63175B569DDECD1	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRCellDU_REL_CD_decorators_SECTOR_GROUPS_NRCELLDU	IDX_0A03C47C13AD3B5C84D3D8081493D670E9CBDCD1	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRSectorCarrier_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_NRSectorCarrier_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	IDX_EDE8B88F488F9380DB49CB2C141318FB33C2CCEC	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_decorators_NRCELLDU_USES_NRSECTORCARRIER	IDX_2ADB5C6DCAEE8811FB1CA8FD9EB53381F35FCB70	INDEX
IDX_GIN_o-ran-smo-teiv-ran_NRSectorCarrier_REL_CD_decorators_NRSECTORCARRIER_USES_ANTENNACAPABILITY	IDX_902B73F741160B9D4FBF62406D3D9ABBECAD8BE7	INDEX
IDX_GIN_o-ran-smo-teiv-ran_Sector_CD_decorators	IDX_GIN_o-ran-smo-teiv-ran_Sector_CD_decorators	INDEX
IDX_GIN_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION_CD_decorators	IDX_CACDA1786832798355FA450C79FB90001A9DE725	INDEX
IDX_GIN_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION_CD_decorators	IDX_253071B9FA8525A8B2B2D3DBA1A74EBAEF27CE4A	INDEX
IDX_GIN_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION_CD_decorators	IDX_5741692EDE13E86FD8BFFAD47847257CC0925F6C	INDEX
IDX_GIN_o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY_CD_decorators	IDX_7BF09D0227840279556AD27ACECB068705893D28	INDEX
PK_o-ran-smo-teiv-cloud_CloudNamespace_id	PK_o-ran-smo-teiv-cloud_CloudNamespace_id	CONSTRAINT
PK_o-ran-smo-teiv-cloud_CloudSite_id	PK_o-ran-smo-teiv-cloud_CloudSite_id	CONSTRAINT
PK_o-ran-smo-teiv-cloud_CloudifiedNF_id	PK_o-ran-smo-teiv-cloud_CloudifiedNF_id	CONSTRAINT
PK_o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE_id	PK_7D474DCD64679ECB0278511BA40418F4A8809986	CONSTRAINT
PK_o-ran-smo-teiv-cloud_NFDeployment_id	PK_o-ran-smo-teiv-cloud_NFDeployment_id	CONSTRAINT
PK_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_id	PK_o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE_id	CONSTRAINT
PK_o-ran-smo-teiv-cloud_NodeCluster_id	PK_o-ran-smo-teiv-cloud_NodeCluster_id	CONSTRAINT
PK_o-ran-smo-teiv-equipment_AntennaModule_id	PK_o-ran-smo-teiv-equipment_AntennaModule_id	CONSTRAINT
PK_o-ran-smo-teiv-equipment_Site_id	PK_o-ran-smo-teiv-equipment_Site_id	CONSTRAINT
PK_o-ran-smo-teiv-oam_ManagedElement_id	PK_o-ran-smo-teiv-oam_ManagedElement_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_AntennaCapability_id	PK_o-ran-smo-teiv-ran_AntennaCapability_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_ENodeBFunction_id	PK_o-ran-smo-teiv-ran_ENodeBFunction_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_EUtranCell_id	PK_o-ran-smo-teiv-ran_EUtranCell_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_GNBCUCPFunction_id	PK_o-ran-smo-teiv-ran_GNBCUCPFunction_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_GNBCUUPFunction_id	PK_o-ran-smo-teiv-ran_GNBCUUPFunction_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_GNBDUFunction_id	PK_o-ran-smo-teiv-ran_GNBDUFunction_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_LTESectorCarrier_id	PK_o-ran-smo-teiv-ran_LTESectorCarrier_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_NRCellCU_id	PK_o-ran-smo-teiv-ran_NRCellCU_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_NRCellDU_id	PK_o-ran-smo-teiv-ran_NRCellDU_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_NRSectorCarrier_id	PK_o-ran-smo-teiv-ran_NRSectorCarrier_id	CONSTRAINT
PK_o-ran-smo-teiv-ran_Sector_id	PK_o-ran-smo-teiv-ran_Sector_id	CONSTRAINT
PK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION_id	PK_C2321B22B1E252C3EBABC1EBF29DEEFF787BE934	CONSTRAINT
PK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION_id	PK_05C01244A393BDC3392EDBDB231586E6E98CB7E2	CONSTRAINT
PK_o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION_id	PK_D659DD37E438F4710181BCC2756AB31D0C21CE54	CONSTRAINT
PK_o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY_id	PK_63E61CB6802F21FE7A04A80A095F6AF8ABF067CE	CONSTRAINT
REL_CD_classifiers_ANTENNAMODULE_INSTALLED_AT_SITE	REL_CD_classifiers_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_CD_classifiers_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	REL_CD_classifiers_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	COLUMN
REL_CD_classifiers_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_CD_classifiers_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_CD_classifiers_EUTRANCELL_USES_LTESECTORCARRIER	REL_CD_classifiers_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_CD_classifiers_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_CD_classifiers_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_CD_classifiers_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_classifiers_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	REL_CD_classifiers_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_CD_classifiers_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	REL_CD_classifiers_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	COLUMN
REL_CD_classifiers_NRCELLDU_USES_NRSECTORCARRIER	REL_CD_classifiers_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_CD_classifiers_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_classifiers_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_classifiers_SECTOR_GROUPS_ANTENNAMODULE	REL_CD_classifiers_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_CD_classifiers_SECTOR_GROUPS_EUTRANCELL	REL_CD_classifiers_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_CD_classifiers_SECTOR_GROUPS_NRCELLDU	REL_CD_classifiers_SECTOR_GROUPS_NRCELLDU	COLUMN
REL_CD_decorators_ANTENNAMODULE_INSTALLED_AT_SITE	REL_CD_decorators_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_CD_decorators_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	REL_CD_decorators_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	COLUMN
REL_CD_decorators_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_CD_decorators_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_CD_decorators_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_CD_decorators_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_CD_decorators_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_CD_decorators_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_CD_decorators_EUTRANCELL_USES_LTESECTORCARRIER	REL_CD_decorators_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_CD_decorators_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_CD_decorators_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_CD_decorators_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_decorators_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_decorators_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	REL_CD_decorators_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_CD_decorators_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	REL_CD_decorators_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	COLUMN
REL_CD_decorators_NRCELLDU_USES_NRSECTORCARRIER	REL_CD_decorators_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_CD_decorators_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_decorators_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_decorators_SECTOR_GROUPS_ANTENNAMODULE	REL_CD_decorators_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_CD_decorators_SECTOR_GROUPS_EUTRANCELL	REL_CD_decorators_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_CD_decorators_SECTOR_GROUPS_NRCELLDU	REL_CD_decorators_SECTOR_GROUPS_NRCELLDU	COLUMN
REL_CD_sourceIds_ANTENNAMODULE_INSTALLED_AT_SITE	REL_CD_sourceIds_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_CD_sourceIds_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	REL_CD_sourceIds_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	COLUMN
REL_CD_sourceIds_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_CD_sourceIds_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_CD_sourceIds_EUTRANCELL_USES_LTESECTORCARRIER	REL_CD_sourceIds_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_CD_sourceIds_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_CD_sourceIds_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_CD_sourceIds_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_sourceIds_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	REL_CD_sourceIds_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_CD_sourceIds_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	REL_CD_sourceIds_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	COLUMN
REL_CD_sourceIds_NRCELLDU_USES_NRSECTORCARRIER	REL_CD_sourceIds_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_CD_sourceIds_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_sourceIds_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_sourceIds_SECTOR_GROUPS_ANTENNAMODULE	REL_CD_sourceIds_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_CD_sourceIds_SECTOR_GROUPS_EUTRANCELL	REL_CD_sourceIds_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_CD_sourceIds_SECTOR_GROUPS_NRCELLDU	REL_CD_sourceIds_SECTOR_GROUPS_NRCELLDU	COLUMN
REL_FK_comprised-by-cloudifiedNF	REL_FK_comprised-by-cloudifiedNF	COLUMN
REL_FK_deployed-as-cloudifiedNF	REL_FK_deployed-as-cloudifiedNF	COLUMN
REL_FK_deployed-on-nodeCluster	REL_FK_deployed-on-nodeCluster	COLUMN
REL_FK_grouped-by-sector	REL_FK_grouped-by-sector	COLUMN
REL_FK_installed-at-site	REL_FK_installed-at-site	COLUMN
REL_FK_managed-by-managedElement	REL_FK_managed-by-managedElement	COLUMN
REL_FK_provided-by-enodebFunction	REL_FK_provided-by-enodebFunction	COLUMN
REL_FK_provided-by-gnbcucpFunction	REL_FK_provided-by-gnbcucpFunction	COLUMN
REL_FK_provided-by-gnbduFunction	REL_FK_provided-by-gnbduFunction	COLUMN
REL_FK_serviced-managedElement	REL_FK_serviced-managedElement	COLUMN
REL_FK_used-antennaCapability	REL_FK_used-antennaCapability	COLUMN
REL_FK_used-by-euTranCell	REL_FK_used-by-euTranCell	COLUMN
REL_FK_used-by-nrCellDu	REL_FK_used-by-nrCellDu	COLUMN
REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_ID_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	REL_ID_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	COLUMN
REL_ID_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_ID_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_ID_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_ID_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_ID_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_ID_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_ID_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_ID_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_ID_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	REL_ID_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_ID_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	REL_ID_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	COLUMN
REL_ID_NRCELLDU_USES_NRSECTORCARRIER	REL_ID_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_ID_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_ID_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_ID_SECTOR_GROUPS_ANTENNAMODULE	REL_ID_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_ID_SECTOR_GROUPS_EUTRANCELL	REL_ID_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_ID_SECTOR_GROUPS_NRCELLDU	REL_ID_SECTOR_GROUPS_NRCELLDU	COLUMN
UNIQUE_o-ran-smo-teiv-cloud_CloudNamespace_REL_ID_CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	UNIQUE_1DB2EA3AF6DE7BEEABF5F500FFC397AFD7C74C1C	CONSTRAINT
UNIQUE_o-ran-smo-teiv-cloud_NFDeployment_REL_ID_CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	UNIQUE_A5A8418B6BE911F281E6E2AA640D7D9F777471DC	CONSTRAINT
UNIQUE_o-ran-smo-teiv-cloud_NFDeployment_REL_ID_NFDEPLOYMENT_SERVES_MANAGEDELEMENT	UNIQUE_8AD46969905BEEB89F63D3F37FD82B14F34FDCBC	CONSTRAINT
UNIQUE_o-ran-smo-teiv-equipment_AntennaModule_REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	UNIQUE_9DF414C2F0CD7FA8BFCB3E9BF851784AC4BC49B1	CONSTRAINT
UNIQUE_o-ran-smo-teiv-equipment_AntennaModule_REL_ID_SECTOR_GROUPS_ANTENNAMODULE	UNIQUE_78B1D3DCD903AFFB1965D440D87B2D194CA028A0	CONSTRAINT
UNIQUE_o-ran-smo-teiv-oam_ManagedElement_REL_ID_MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	UNIQUE_EC9B35192A31C6491E6566602720D1C26E3CB708	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_ENodeBFunction_REL_ID_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	UNIQUE_A30444B7D036FA579730F0D2853E52FD08DEDCF0	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_EUtranCell_REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	UNIQUE_CA88C7E60C1A332FA7561FC965ED41DD4125CDED	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_EUtranCell_REL_ID_SECTOR_GROUPS_EUTRANCELL	UNIQUE_0513FE4A675A02C31E5EDD6BCB3728911FBDA2FA	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_GNBCUCPFunction_REL_ID_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	UNIQUE_50E9E4A87D93AC833B1D1AC05E3B58805909E20E	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_GNBCUUPFunction_REL_ID_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	UNIQUE_0CA05800AC7D277BDCB5CF0097DC35978E9311F4	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_GNBDUFunction_REL_ID_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	UNIQUE_5BD09ED226520A0BE27904AEAF0557416808E7E2	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_LTESectorCarrier_REL_ID_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	UNIQUE_FD943EE596337B11E0C640E1176CADF9CD69E19A	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_LTESectorCarrier_REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	UNIQUE_0A76398FBBC8E01A2D3BA602AB47835794E997E5	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_LTESectorCarrier_REL_ID_LTESECTORCARRIER_USES_ANTENNACAPABILITY	UNIQUE_EA18F1D278EAFE834B8A80BCF8A7D8355CD013DF	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_NRCellCU_REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	UNIQUE_EA2A6F5BA36ABB0DA357542E05AA2D07415E127A	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_NRCellDU_REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	UNIQUE_C3D8E5331EC71D46D4B8CED29FE5F6CEB1D8E67A	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_NRCellDU_REL_ID_SECTOR_GROUPS_NRCELLDU	UNIQUE_AC1C114ABED77D6DEC3F3AE3F9EBE8231924AEF4	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_NRSectorCarrier_REL_ID_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	UNIQUE_0AC16A840F6ACDC50136E71EC6D4F3D4E04B8198	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_NRSectorCarrier_REL_ID_NRCELLDU_USES_NRSECTORCARRIER	UNIQUE_1AB577E5AC207ED4C99A9A96BA1C9C35544AFD25	CONSTRAINT
UNIQUE_o-ran-smo-teiv-ran_NRSectorCarrier_REL_ID_NRSECTORCARRIER_USES_ANTENNACAPABILITY	UNIQUE_A799EC9DA6624651081E1DA21B5F0C2D38F6A192	CONSTRAINT
aSide_AntennaModule	aSide_AntennaModule	COLUMN
aSide_NFDeployment	aSide_NFDeployment	COLUMN
aSide_NodeCluster	aSide_NodeCluster	COLUMN
antennaBeamWidth	antennaBeamWidth	COLUMN
antennaModelNumber	antennaModelNumber	COLUMN
arfcnDL	arfcnDL	COLUMN
arfcnUL	arfcnUL	COLUMN
azimuth	azimuth	COLUMN
bSChannelBwDL	bSChannelBwDL	COLUMN
bSide_AntennaCapability	bSide_AntennaCapability	COLUMN
bSide_CloudNamespace	bSide_CloudNamespace	COLUMN
bSide_CloudSite	bSide_CloudSite	COLUMN
bSide_GNBCUCPFunction	bSide_GNBCUCPFunction	COLUMN
bSide_GNBCUUPFunction	bSide_GNBCUUPFunction	COLUMN
bSide_GNBDUFunction	bSide_GNBDUFunction	COLUMN
cellId	cellId	COLUMN
cellLocalId	cellLocalId	COLUMN
channelBandwidth	channelBandwidth	COLUMN
dUpLMNId	dUpLMNId	COLUMN
dlChannelBandwidth	dlChannelBandwidth	COLUMN
duplexType	duplexType	COLUMN
eNBId	eNBId	COLUMN
eNodeBPlmnId	eNodeBPlmnId	COLUMN
eUtranFqBands	eUtranFqBands	COLUMN
earfcn	earfcn	COLUMN
earfcndl	earfcndl	COLUMN
earfcnul	earfcnul	COLUMN
electricalAntennaTilt	electricalAntennaTilt	COLUMN
frequencyDL	frequencyDL	COLUMN
frequencyUL	frequencyUL	COLUMN
gNBCUName	gNBCUName	COLUMN
gNBDUId	gNBDUId	COLUMN
gNBId	gNBId	COLUMN
gNBIdLength	gNBIdLength	COLUMN
geo-location	geo-location	COLUMN
geranFqBands	geranFqBands	COLUMN
id	id	COLUMN
mechanicalAntennaBearing	mechanicalAntennaBearing	COLUMN
mechanicalAntennaTilt	mechanicalAntennaTilt	COLUMN
nCI	nCI	COLUMN
nRFqBands	nRFqBands	COLUMN
nRPCI	nRPCI	COLUMN
nRTAC	nRTAC	COLUMN
name	name	COLUMN
o-ran-smo-teiv-cloud_CloudNamespace	o-ran-smo-teiv-cloud_CloudNamespace	TABLE
o-ran-smo-teiv-cloud_CloudSite	o-ran-smo-teiv-cloud_CloudSite	TABLE
o-ran-smo-teiv-cloud_CloudifiedNF	o-ran-smo-teiv-cloud_CloudifiedNF	TABLE
o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE	o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE	TABLE
o-ran-smo-teiv-cloud_NFDeployment	o-ran-smo-teiv-cloud_NFDeployment	TABLE
o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE	o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE	TABLE
o-ran-smo-teiv-cloud_NodeCluster	o-ran-smo-teiv-cloud_NodeCluster	TABLE
o-ran-smo-teiv-equipment_AntennaModule	o-ran-smo-teiv-equipment_AntennaModule	TABLE
o-ran-smo-teiv-equipment_Site	o-ran-smo-teiv-equipment_Site	TABLE
o-ran-smo-teiv-oam_ManagedElement	o-ran-smo-teiv-oam_ManagedElement	TABLE
o-ran-smo-teiv-ran_AntennaCapability	o-ran-smo-teiv-ran_AntennaCapability	TABLE
o-ran-smo-teiv-ran_ENodeBFunction	o-ran-smo-teiv-ran_ENodeBFunction	TABLE
o-ran-smo-teiv-ran_EUtranCell	o-ran-smo-teiv-ran_EUtranCell	TABLE
o-ran-smo-teiv-ran_GNBCUCPFunction	o-ran-smo-teiv-ran_GNBCUCPFunction	TABLE
o-ran-smo-teiv-ran_GNBCUUPFunction	o-ran-smo-teiv-ran_GNBCUUPFunction	TABLE
o-ran-smo-teiv-ran_GNBDUFunction	o-ran-smo-teiv-ran_GNBDUFunction	TABLE
o-ran-smo-teiv-ran_LTESectorCarrier	o-ran-smo-teiv-ran_LTESectorCarrier	TABLE
o-ran-smo-teiv-ran_NRCellCU	o-ran-smo-teiv-ran_NRCellCU	TABLE
o-ran-smo-teiv-ran_NRCellDU	o-ran-smo-teiv-ran_NRCellDU	TABLE
o-ran-smo-teiv-ran_NRSectorCarrier	o-ran-smo-teiv-ran_NRSectorCarrier	TABLE
o-ran-smo-teiv-ran_Sector	o-ran-smo-teiv-ran_Sector	TABLE
o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION	93A133BC1B3BA1FA430DFB98A4AB1141328425FD	TABLE
o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION	53983B8B2DDA2A5B8CA9EDBDA547333872024418	TABLE
o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION	o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION	TABLE
o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY	CFC235E0404703D1E4454647DF8AAE2C193DB402	TABLE
pLMNId	pLMNId	COLUMN
plmnId	plmnId	COLUMN
positionWithinSector	positionWithinSector	COLUMN
sectorCarrierType	sectorCarrierType	COLUMN
sectorId	sectorId	COLUMN
tac	tac	COLUMN
totalTilt	totalTilt	COLUMN
\.

COPY ties_model.module_reference("name", "namespace", "domain", "includedModules", "revision", "content") FROM stdin;
_3gpp-common-yang-extensions	urn:3gpp:sa5:_3gpp-common-yang-extensions	\N	[]	2019-06-23	bW9kdWxlIF8zZ3BwLWNvbW1vbi15YW5nLWV4dGVuc2lvbnMgewogIHlhbmctdmVyc2lvbiAxLjE7CiAgbmFtZXNwYWNlIHVybjozZ3BwOnNhNTpfM2dwcC1jb21tb24teWFuZy1leHRlbnNpb25zIDsKICBwcmVmaXggeWV4dDNncHAgOwoKICBvcmdhbml6YXRpb24gIjNHUFAgU0E1IjsKICBkZXNjcmlwdGlvbiAiVGhlIG1vZHVsZSBkZWZpbmVzIFlBTkcgZXh0ZW5zaW9ucyBuZWVkZWQgCiAgICAzR1BQIFlBTkcgbW9kZWxpbmcuCgogICAgQ29weXJpZ2h0IChjKSAyMDE5IDNHUFAuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogICAgRXh0ZW5zaW9ucyBNVVNUIGJlIGRlZmluZWQgd2l0aCB0aGUgZm9sbG93aW5nIHN0cnVjdHVyZSBpbiB0aGUKICAgIGRlc2NyaXB0aW9uIHN0YXRlbWVudDoKICAgICAgICAtIFdoYXQgaXMgdGhpcyBzdGF0ZW1lbnQuCiAgICAgICAgLSBOZXdsaW5lLAogICAgICAgIC0gVGhpcyBzdGF0ZW1lbnQgY2FuIGJlIGEgc3Vic3RhdGVtZW50IG9mIHRoZSB4eHggc3RhdGVtZW50cyB3aXRoCiAgICAgICAgY2FyZGluYWxpdHkgeC4ueS4KICAgICAgICAtIFRoaXMgc3RhdGVtZW50IGNhbiBoYXZlIHRoZSBmb2xsb3dpbmcgc3Vic3RhdGVtZW50cyB3aXRoCiAgICAgICAgY2FyZGluYWxpdHkgeC4ueS4KICAgICAgICAtIE5ld2xpbmUKICAgICAgICAtIElzIGNoYW5naW5nIHRoaXMgc3RhdGVtZW50IGFuIGVkaXRvcmlhbCwgQkMoYmFja3dhcmRzIGNvbXBhdGlibGUpIAogICAgICAgIG9yIE5CQyhub24tQkMpIGNoYW5nZT8KICAgICAgICAtIE5ld2xpbmUuCiAgICAgICAgLSBUaGUgYXJndW1lbnQgaXRzIG1lYW5pbmcgYW5kIHR5cGUuIFByZWZlcmFibHkgdXNlIFlBTkcgdHlwZXMgYW5kCiAgICAgICAgICBjb25zdHJhaW50cyB0byBkZWZpbmUgdGhlIGFyZ3VtZW50J3MgdHlwZS4KCiAgICBBbnkgZXh0ZW5zaW9uIHN0YXRlbWVudCBjYW4gYmUgYWRkZWQgd2l0aCBhCiAgICBkZXZpYXRpb24vZGV2aWF0ZSBhZGQgc3RhdGVtZW50LiBJbiB0aGlzIGNhc2UgdGhlIHJlc3RyaWN0aW9uIGFib3V0CiAgICB0aGUgcGFyZW50IHN0YXRlbWVudCBvZiB0aGUgZXh0ZW5zaW9uIFNIQUxMIGJlIGV2YWx1YXRlZCBiYXNlZCBvbiB0aGUKICAgIHRhcmdldCBvZiB0aGUgZGV2aWF0aW9uIHN0YXRlbWVudC4KCiAgICBTdXBwb3J0IGZvciB0aGlzIG1vZHVsZSBkb2VzIG5vdCBtZWFuIHRoYXQgYSBZQU5HIHNlcnZlciBpbXBsZW1lbnRzCiAgICBzdXBwb3J0IGZvciBlYWNoIG9mIHRoZXNlIGV4dGVuc2lvbnMuCiAgICBJbXBsZW1lbnRlcnMgb2YgZWFjaCBzcGVjaWZpYyBtb2R1bGUgdXNpbmcgYW4gZXh0ZW5zaW9ucyBNVVNUIGNoZWNrCiAgICBpZiB0aGUgc2VydmVyIGltcGxlbWVudHMgc3VwcG9ydCBmb3IgdGhlIHVzZWQgZXh0ZW5zaW9uLgogICAgTm90ZTogbW9kdWxlcyB1c2UgbWFueSBleHRlbnNpb25zIHdoaWNoIGluZGl2aWR1YWwKICAgIGltcGxlbWVudGF0aW9ucyBNQVkgb3IgTUFZIE5PVCBzdXBwb3J0LgogICAgSWYgc3VwcG9ydCBmb3IgYW4gZXh0ZW5zaW9uIGlzIG1pc3NpbmcgdGhlIGV4dGVuc2lvbiBzdGF0ZW1lbnQgbmVlZHMKICAgIGluZGl2aWR1YWwgaGFuZGxpbmcgb3IgaXQgU0hPVUxEIGJlIHJlbW92ZWQgZnJvbSB0aGUgbW9kdWxlIHVzaW5nCiAgICB0aGUgZXh0ZW5zaW9uIGUuZy4gd2l0aCBhIGRldmlhdGlvbi4KICAgICAgICAgICI7CgogIHJldmlzaW9uICIyMDE5LTA2LTIzIiB7CiAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCB2ZXJzaW9uIjsKICB9CgogIGV4dGVuc2lvbiBpblZhcmlhbnQgewogICAgZGVzY3JpcHRpb24KICAgICAgIkluZGljYXRlcyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlIGRhdGEgbm9kZSBjYW4gb25seSBiZSBzZXQgd2hlbiBpdHMKICAgICAgcGFyZW50IGRhdGEgbm9kZSBpcyBiZWluZyBjcmVhdGVkLiBUbyBjaGFuZ2UgdGhlIHZhbHVlIGFmdGVyIHRoYXQsIHRoZQogICAgICBwYXJlbnQgZGF0YSBub2RlIG11c3QgYmUgZGVsZXRlZCBhbmQgcmVjcmVhdGVkIHdpdGggdGhlIGRhdGEgbm9kZQogICAgICBoYXZpbmcgdGhlIG5ldyB2YWx1ZS4KCiAgICAgIEl0IGlzIHVubmVjZXNzYXJ5IHRvIHVzZSBhbmQgTVVTVCBOT1QgYmUgdXNlZCBmb3Iga2V5IGxlYWZzLgoKICAgICAgVGhlIHN0YXRlbWVudCBNVVNUIG9ubHkgYmUgYSBzdWJzdGF0ZW1lbnQgb2YgYSBsZWFmLCBsZWFmLWxpc3QsIGxpc3QgCiAgICAgIHN0YXRlbWVudHMgdGhhdCBpcyBjb25maWc9dHJ1ZS4KICAgICAgWmVybyBvciBvbmUgaW5WYXJpYW50IHN0YXRlbWVudCBpcyBhbGxvd2VkIHBlciBwYXJlbnQgc3RhdGVtZW50LgogICAgICBOTyBzdWJzdGF0ZW1lbnRzIGFyZSBhbGxvd2VkLgogICAgICAgICAgICAKICAgICAgQWRkaW5nIHRoaXMgc3RhdGVtZW50IGlzIGFuIE5CQyBjaGFuZ2UsIHJlbW92aW5nIGl0IGlzIEJDLiI7CiAgfQoKICBleHRlbnNpb24gaW5pdGlhbC12YWx1ZSB7CiAgICBkZXNjcmlwdGlvbiAiU3BlY2lmaWVzIGEgdmFsdWUgdGhhdCB0aGUgc3lzdGVtIHdpbGwgc2V0IGZvciBhIGxlYWYKICAgICAgbGVhZi1saXN0IGlmIGEgdmFsdWUgaXMgbm90IHNwZWNpZmllZCBmb3IgaXQgd2hlbiBpdHMgcGFyZW50IGxpc3QKICAgICAgb3IgY29udGFpbmVyIGlzIGNyZWF0ZWQuIFRoZSB2YWx1ZSBoYXMgbm8gZWZmZWN0IGluIGFueSBvdGhlcgogICAgICBtb2RpZmljYXRpb24gZS5nLiBjaGFuZ2luZyBvciByZW1vdmluZyB0aGUgdmFsdWUuCgogICAgICBUaGUgZGVzY3JpcHRpb24gc3RhdGVtZW50IG9mIHRoZSBwYXJlbnQgc3RhdGVtZW50IFNIT1VMRCBjb250YWluCiAgICAgIHRoZSBsYWJlbCAnSW5pdGlhbC12YWx1ZTogJyBmb2xsb3dlZCBieSB0aGUgdGV4dCBmcm9tIHRoZSBhcmd1bWVudC4KCiAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBvbmx5IGJlIGEgc3Vic3RhdGVtZW50IG9mIGEgbGVhZiBvciBsZWFmLWxpc3QuCiAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBOT1QgYmUgcHJlc2VudCBpZiB0aGUgbGVhZiBvciB0aGUgbGVhZi1saXN0IAogICAgICBoYXMgYSBkZWZhdWx0IHN0YXRlbWVudCBvciB0aGUgdHlwZSB1c2VkIGZvciB0aGUgZGF0YSBub2RlIAogICAgICBoYXMgYSBkZWZhdWx0IHZhbHVlLgogICAgICBUaGUgc3RhdGVtZW50IE1VU1QgTk9UIGJlIHVzZWQgZm9yIGNvbmZpZz1mYWxzZSBkYXRhIG9yIGluIGFuIAogICAgICBhY3Rpb24sIHJwYyBvciBub3RpZmljYXRpb24uCiAgICAgIFplcm8gb3Igb25lIGluaXRpYWwtdmFsdWUgc3RhdGVtZW50cyBhcmUgYWxsb3dlZCBmb3IgYSBsZWFmIHBhcmVudAogICAgICBzdGF0ZW1lbnQuIFplcm8gb3IgbW9yZSBpbml0aWFsLXZhbHVlIHN0YXRlbWVudHMgYXJlIGFsbG93ZWQgZm9yIGEKICAgICAgbGVhZi1saXN0IHBhcmVudCBzdGF0ZW1lbnQuIElmIHRoZSBsZWFmLWxpc3QgaXMgb3JkZXJlZC1ieSB1c2VyLCB0aGUKICAgICAgaW5pdGlhbCB2YWx1ZXMgYXJlIHN0b3JlZCBpbiB0aGUgb3JkZXIgdGhleSBhcHBlYXIgaW4gdGhlIFlBTkcgZGVmaW5pdGlvbi4KICAgICAgTk8gc3Vic3RhdGVtZW50cyBhcmUgYWxsb3dlZC4KCiAgICAgIEFsd2F5cyBjb25zaWRlciB1c2luZyBhIFlBTkctZGVmYXVsdCBzdGF0ZW1lbnQgaW5zdGVhZC4KCiAgICAgIE1vZGlmaWNhdGlvbiBvZiB0aGUgaW5pdGlhbC12YWx1ZSBpcyBhIG5vbi1iYWNrd2FyZHMtY29tcGF0aWJsZSBjaGFuZ2UuCgogICAgICBUaGUgYXJndW1lbnQgc3BlY2lmaWVzIGEgc2luZ2xlIGluaXRpYWwgdmFsdWUgZm9yIGEgbGVhZiBvciBsZWFmLWxpc3QuCiAgICAgIFRoZSB2YWx1ZSBNVVNUIGJlIHBhcnQgb2YgdGhlIHZhbHVlc3BhY2Ugb2YgdGhlIGxlYWYvbGVhZi1saXN0LgogICAgICBJdCBmb2xsb3dzIHRoZSBzYW1lIHJ1bGVzIGFzIHRoZSBhcmd1bWVudCBvZiB0aGUgZGVmYXVsdCBzdGF0ZW1lbnQuIjsKCiAgICBhcmd1bWVudCAiaW5pdGlhbC12YWx1ZSI7CiAgfQp9
_3gpp-common-yang-types	urn:3gpp:sa5:_3gpp-common-yang-types	\N	[]	2022-07-26	
ietf-geo-location	urn:ietf:params:xml:ns:yang:ietf-geo-location	\N	[]	2022-02-11	
ietf-inet-types	urn:ietf:params:xml:ns:yang:ietf-inet-types	\N	[]	2013-07-15	
ietf-yang-types	urn:ietf:params:xml:ns:yang:ietf-yang-types	\N	[]	2013-07-15	
o-ran-smo-teiv-cloud	urn:o-ran:smo-teiv-cloud	CLOUD	[]	2024-05-02	bW9kdWxlIG8tcmFuLXNtby10ZWl2LWNsb3VkIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1jbG91ZCI7CiAgICBwcmVmaXggb3ItdGVpdi1jbG91ZDsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctdHlwZXMge3ByZWZpeCBvci10ZWl2LXR5cGVzOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgaWV0Zi1nZW8tbG9jYXRpb24gewogICAgICAgIHByZWZpeCBnZW87CiAgICAgICAgcmVmZXJlbmNlICJSRkMgOTE3OTogQSBZQU5HIEdyb3VwaW5nIGZvciBHZW9ncmFwaGljIExvY2F0aW9ucyI7CiAgICB9CgogICAgb3JnYW5pemF0aW9uICJPUkFOIjsKICAgIGNvbnRhY3QgIlRoZSBBdXRob3JzIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiUkFOIENsb3VkIHRvcG9sb2d5IG1vZGVsLgoKICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIHRvcG9sb2d5IGVudGl0aWVzIGFuZCByZWxhdGlvbnMgaW4gdGhlCiAgICBSQU4gQ0xPVUQgZG9tYWluLCB3aGljaCBjb21wcmlzZXMgY2xvdWQgaW5mcmFzdHJ1Y3R1cmUgYW5kCiAgICBkZXBsb3ltZW50IGFzcGVjdHMgdGhhdCBjYW4gYmUgdXNlZCBpbiB0aGUgdG9wb2xvZ3kgbW9kZWwuCgogICAgQ29weXJpZ2h0IChDKSAyMDI0IEVyaWNzc29uCiAgICBNb2RpZmljYXRpb25zIENvcHlyaWdodCAoQykgMjAyNCBPcGVuSW5mcmEgRm91bmRhdGlvbiBFdXJvcGUKCiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOwogICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CgogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCgogICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLAogICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCiAgICBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMCI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMDIiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBvci10ZWl2LXlleHQ6ZG9tYWluIENMT1VEOwoKICAgIGxpc3QgQ2xvdWRpZmllZE5GIHsKICAgICAgICBkZXNjcmlwdGlvbiAiQSBSQU4gTmV0d29yayBGdW5jdGlvbiBzb2Z0d2FyZSB0aGF0IGlzIGRlcGxveWVkIGluIHRoZSBPLUNsb3VkIHZpYSBvbmUgb3IgbW9yZSBORiBEZXBsb3ltZW50cy4iOwoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgY29udGFpbmVyIGF0dHJpYnV0ZXMgewogICAgICAgICAgICBsZWFmIG5hbWUgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5hbWUgb2YgQ2xvdWRpZmllZCBORiI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBsaXN0IE5GRGVwbG95bWVudCB7CiAgICAgICAgZGVzY3JpcHRpb24gIkEgc29mdHdhcmUgZGVwbG95bWVudCBvbiBPLUNsb3VkIHJlc291cmNlcyB0aGF0IHJlYWxpemVzLCBhbGwgb3IgcGFydCBvZiwgYSBDbG91ZGlmaWVkIE5GLiI7CgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBjb250YWluZXIgYXR0cmlidXRlcyB7CiAgICAgICAgICAgIGxlYWYgbmFtZSB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiTmFtZSBvZiBORiBEZXBsb3ltZW50IjsKICAgICAgICAgICAgICAgIHR5cGUgc3RyaW5nOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGxpc3QgQ2xvdWROYW1lc3BhY2UgewogICAgICAgIGRlc2NyaXB0aW9uICJDbG91ZE5hbWVzcGFjZSBwcm92aWRlIGEgbWVjaGFuaXNtIGZvciBpc29sYXRpbmcKICAgICAgICAgICAgICAgICAgICBncm91cHMgb2YgcmVzb3VyY2VzIHdpdGhpbiBhIHNpbmdsZSBjbHVzdGVyLiI7CgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBjb250YWluZXIgYXR0cmlidXRlcyB7CiAgICAgICAgICAgIGxlYWYgbmFtZSB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiTmFtZSBvZiBDbG91ZCBOYW1lc3BhY2UiOwogICAgICAgICAgICAgICAgdHlwZSBzdHJpbmc7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgbGlzdCBOb2RlQ2x1c3RlciB7CiAgICAgICAgZGVzY3JpcHRpb24gIkEgTm9kZUNsdXN0ZXIgbWFuYWdlcyBhIGNvbGxlY3Rpb24gb2YgTm9kZXMuIjsKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGNvbnRhaW5lciBhdHRyaWJ1dGVzIHsKICAgICAgICAgICAgbGVhZiBuYW1lIHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJOYW1lIG9mIE5vZGUgQ2x1c3RlciI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBsaXN0IENsb3VkU2l0ZSB7CiAgICAgICAgZGVzY3JpcHRpb24gIlJlcHJlc2VudHMgdGhlIGluZnJhc3RydWN0dXJlIHRoYXQKICAgICAgICAgICAgICAgICAgICBob3N0cyB0aGUgTkYgRGVwbG95bWVudC4iOwoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgY29udGFpbmVyIGF0dHJpYnV0ZXMgewogICAgICAgICAgICBsZWFmIG5hbWUgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5hbWUgb2YgQ2xvdWQgU2l0ZSI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdXNlcyBnZW86Z2VvLWxvY2F0aW9uOwogICAgICAgIH0KICAgIH0KCgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBDTE9VRElGSUVETkZfQ09NUFJJU0VTX05GREVQTE9ZTUVOVCB7IC8vIDEgdG8gMS4ubgoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IGNvbXByaXNlZC1uRkRlcGxveW1lbnQgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQ2xvdWRpZmllZCBORiBjb21wcmlzZXMgb2YgdGhlc2UgTkYgRGVwbG95bWVudC4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgQ2xvdWRpZmllZE5GOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgICAgIG1pbi1lbGVtZW50cyAxOwogICAgICAgIH0KCiAgICAgICAgbGVhZiBjb21wcmlzZWQtYnktY2xvdWRpZmllZE5GIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5GIERlcGxveW1lbnQgcGFydCBvZiBDbG91ZGlmaWVkIE5GLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBORkRlcGxveW1lbnQ7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTkZERVBMT1lNRU5UX0RFUExPWUVEX09OX0NMT1VETkFNRVNQQUNFIHsgLy8gMS4ubiB0byAxLi5uCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmLWxpc3QgZGVwbG95ZWQtb24tY2xvdWROYW1lc3BhY2UgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTkYgRGVwbG95bWVudCBkZXBsb3llZCBvbiBDbG91ZCBOYW1lc3BhY2UuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIE5GRGVwbG95bWVudDsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgICAgICBtaW4tZWxlbWVudHMgMTsKICAgICAgICB9CgogICAgICAgIGxlYWYtbGlzdCBkZXBsb3llZC1uRkRlcGxveW1lbnQgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQ2xvdWQgTmFtZXNwYWNlIGRlcGxveXMgTkYgRGVwbG95bWVudC4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YlNpZGUgQ2xvdWROYW1lc3BhY2U7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWluLWVsZW1lbnRzIDE7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgQ0xPVUROQU1FU1BBQ0VfREVQTE9ZRURfT05fTk9ERUNMVVNURVIgeyAvLyAxLi5uIHRvIDEKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYgZGVwbG95ZWQtb24tbm9kZUNsdXN0ZXIgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQ2xvdWQgTmFtZXNwYWNlIGRlcGxveWVkIG9uIE5vZGUgQ2x1c3Rlci4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgQ2xvdWROYW1lc3BhY2U7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQoKICAgICAgICBsZWFmLWxpc3QgZGVwbG95ZWQtY2xvdWROYW1lc3BhY2UgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTm9kZSBDbHVzdGVyIGRlcGxveXMgQ2xvdWQgTmFtZXNwYWNlLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBOb2RlQ2x1c3RlcjsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgICAgICBtaW4tZWxlbWVudHMgMTsKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBOT0RFQ0xVU1RFUl9MT0NBVEVEX0FUX0NMT1VEU0lURSB7IC8vIDEuLm4gdG8gMS4ubgoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IGxvY2F0ZWQtYXQtY2xvdWRTaXRlIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5vZGUgQ2x1c3RlciBsb2NhdGVkIGF0IENsb3VkIFNpdGUuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIE5vZGVDbHVzdGVyOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgICAgIG1pbi1lbGVtZW50cyAxOwogICAgICAgIH0KCiAgICAgICAgbGVhZi1saXN0IGxvY2F0aW9uLW9mLW5vZGVDbHVzdGVyIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIkNsb3VkIFNpdGUgaXMgbG9jYXRpb24gb2YgTm9kZSBDbHVzdGVyLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBDbG91ZFNpdGU7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWluLWVsZW1lbnRzIDE7CiAgICAgICAgfQogICAgfQp9
o-ran-smo-teiv-common-yang-extensions	urn:o-ran:smo-teiv-common-yang-extensions	\N	[]	2024-05-24	
o-ran-smo-teiv-common-yang-types	urn:o-ran:smo-teiv-common-yang-types	\N	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLXR5cGVzIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1jb21tb24teWFuZy10eXBlcyI7CiAgICBwcmVmaXggb3ItdGVpdi10eXBlczsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7IHByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgXzNncHAtY29tbW9uLXlhbmctdHlwZXMgeyBwcmVmaXggdHlwZXMzZ3BwOyB9CgogIG9yZ2FuaXphdGlvbiAiT1JBTiI7CiAgY29udGFjdCAiVGhlIEF1dGhvcnMiOwogIGRlc2NyaXB0aW9uCiAgIlRvcG9sb2d5IGFuZCBJbnZlbnRvcnkgY29tbW9uIHR5cGVzIG1vZGVsCgogIFRoaXMgbW9kZWwgY29udGFpbnMgcmUtdXNhYmxlIGRhdGEgdHlwZXMgdGhhdCB0b3BvbG9neSBhbmQgaW52ZW50b3J5IG1vZGVscwogIHdpbGwgZnJlcXVlbnRseSB1c2UgYXMgcGFydCBvZiB0eXBlcyBhbmQgcmVsYXRpb25zaGlwcy4KCiAgQ29weXJpZ2h0IChDKSAyMDI0IEVyaWNzc29uCiAgTW9kaWZpY2F0aW9ucyBDb3B5cmlnaHQgKEMpIDIwMjQgT3BlbkluZnJhIEZvdW5kYXRpb24gRXVyb3BlCgogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7CiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKCiAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywKICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCgogIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wIjsKCiAgICByZXZpc2lvbiAiMjAyNC0wNS0yNCIgewogICAgICAgIGRlc2NyaXB0aW9uICJJbml0aWFsIHJldmlzaW9uLiI7CiAgICAgICAgb3ItdGVpdi15ZXh0OmxhYmVsIDAuMy4wOwogICAgfQoKICAgIGdyb3VwaW5nIFRvcF9HcnBfVHlwZSB7CiAgICAgICAgZGVzY3JpcHRpb24gIkdyb3VwaW5nIGNvbnRhaW5pbmcgdGhlIGtleSBhdHRyaWJ1dGUgY29tbW9uIHRvIGFsbCB0eXBlcy4KICAgICAgICAgICAgQWxsIHR5cGVzIE1VU1QgdXNlIHRoaXMgZ3JvdXBpbmcuIjsKCiAgICAgICAgbGVhZiBpZCB7CiAgICAgICAgICAgIHR5cGUgc3RyaW5nOwogICAgICAgICAgICBkZXNjcmlwdGlvbiAiVW5pcXVlIGlkZW50aWZpZXIgb2YgdG9wb2xvZ3kgZW50aXRpZXMuIFJlcHJlc2VudHMgdGhlCiAgICAgICAgICAgICAgICBFbnRpdHkgSW5zdGFuY2UgSWRlbnRpZmllci4iOwogICAgICAgIH0KICAgIH0KCiAgICBjb250YWluZXIgZGVjb3JhdG9ycyB7CiAgICAgICAgZGVzY3JpcHRpb24KICAgICAgICAgICAgIlRoaXMgY29udGFpbmVyIHNlcnZlcyBhcyBleHRlbnNpb24gcG9pbnQgZm9yIGFwcGxpY2F0aW9ucyB3aXNoaW5nCiAgICAgICAgICAgIHRvIGRlZmluZSB0aGVpciBvd24gZGVjb3JhdG9ycy4gVGhpcyBpcyBkb25lIHZpYSBhdWdtZW50YXRpb25zLiBUaGV5CiAgICAgICAgICAgIGNhbiBvbmx5IGJlIGRlZmluZWQgaW4gbmFtZSB2YWx1ZSBwYWlyLgoKICAgICAgICAgICAgVGhpcyBpcyBhIGNvbnN1bWVyIGRhdGEgYW5kIGNhbiBiZSBhdHRhY2hlZCB0byBUb3BvbG9neSBFbnRpdHkgb3IKICAgICAgICAgICAgVG9wb2xvZ3kgUmVsYXRpb24gaW5zdGFuY2UsIG91dHNpZGUgb2YgdGhlIGRlY2xhcmVkIFRvcG9sb2d5IEVudGl0eQogICAgICAgICAgICBvciBUb3BvbG9neSBSZWxhdGlvbnNoaXAncyBhdHRyaWJ1dGVzLiBUaGlzIGNhbm5vdCBiZSBpbnN0YW50aWF0ZWQsCiAgICAgICAgICAgIGFuZCBpdCBNVVNUIE5PVCBiZSBhdWdtZW50ZWQgb3IgZGV2aWF0ZWQgaW4gYW55IHdheSwgdW5sZXNzIHN0YXRlZAogICAgICAgICAgICBvdGhlcndpc2UuIjsKICAgIH0KCiAgICBsZWFmLWxpc3QgY2xhc3NpZmllcnMgewogICAgICAgIGRlc2NyaXB0aW9uCiAgICAgICAgICAgICJDb25zdW1lciBkZWZpbmVkIHRhZ3MgdG8gdG9wb2xvZ3kgZW50aXRpZXMgYW5kIHJlbGF0aW9uc2hpcHMuCgogICAgICAgICAgICBUaGlzIGlzIGEgY29uc3VtZXIgZGF0YSBhbmQgY2FuIGJlIGF0dGFjaGVkIHRvIFRvcG9sb2d5IEVudGl0eSBvcgogICAgICAgICAgICBUb3BvbG9neSBSZWxhdGlvbiBpbnN0YW5jZSwgb3V0c2lkZSBvZiB0aGUgZGVjbGFyZWQgVG9wb2xvZ3kgRW50aXR5CiAgICAgICAgICAgIG9yIFRvcG9sb2d5IFJlbGF0aW9uc2hpcCdzIGF0dHJpYnV0ZXMuIFRoaXMgY2Fubm90IGJlIGluc3RhbnRpYXRlZCwKICAgICAgICAgICAgYW5kIGl0IE1VU1QgTk9UIGJlIGF1Z21lbnRlZCBvciBkZXZpYXRlZCBpbiBhbnkgd2F5LCB1bmxlc3Mgc3RhdGVkCiAgICAgICAgICAgIG90aGVyd2lzZS4iOwoKICAgICAgICB0eXBlIGlkZW50aXR5cmVmIHsgYmFzZSBjbGFzc2lmaWVyOyB9CiAgICB9CgogICAgbGVhZi1saXN0IHNvdXJjZUlkcyB7CiAgICAgICAgZGVzY3JpcHRpb24KICAgICAgICAgICAgIkFuIG9yZGVyZWQgbGlzdCBvZiBpZGVudGl0aWVzIHRoYXQgcmVwcmVzZW50IHRoZSBzZXQgb2YgbmF0aXZlCiAgICAgICAgICAgIHNvdXJjZSBpZGVudGlmaWVycyBmb3IgcGFydGljaXBhdGluZyBlbnRpdGllcy4KCiAgICAgICAgICAgIFRoaXMgaXMgYSBjb25zdW1lciBkYXRhIGFuZCBjYW4gYmUgYXR0YWNoZWQgdG8gVG9wb2xvZ3kgRW50aXR5IG9yCiAgICAgICAgICAgIFRvcG9sb2d5IFJlbGF0aW9uIGluc3RhbmNlLCBvdXRzaWRlIG9mIHRoZSBkZWNsYXJlZCBUb3BvbG9neSBFbnRpdHkKICAgICAgICAgICAgb3IgVG9wb2xvZ3kgUmVsYXRpb25zaGlwJ3MgYXR0cmlidXRlcy4gVGhpcyBjYW5ub3QgYmUgaW5zdGFudGlhdGVkLAogICAgICAgICAgICBhbmQgaXQgTVVTVCBOT1QgYmUgYXVnbWVudGVkIG9yIGRldmlhdGVkIGluIGFueSB3YXksIHVubGVzcyBzdGF0ZWQKICAgICAgICAgICAgb3RoZXJ3aXNlLiI7CgogICAgICAgIHR5cGUgc3RyaW5nOwogICAgICAgIG9yZGVyZWQtYnkgdXNlcjsKICAgIH0KCiAgICBjb250YWluZXIgbWV0YWRhdGEgewogICAgICAgIGRlc2NyaXB0aW9uCiAgICAgICAgICAgICJUaGlzIGNvbnRhaW5lciBzZXJ2ZXMgYXMgZXh0ZW5zaW9uIHBvaW50IHRvIGRlZmluZSBtZXRhZGF0YS4gVGhleQogICAgICAgICAgICBjYW4gb25seSBiZSBkZWZpbmVkIGluIG5hbWUgdmFsdWUgcGFpci4KCiAgICAgICAgICAgIFRoaXMgaXMgYSBjb25zdW1lciBkYXRhIGFuZCBjYW4gYmUgYXR0YWNoZWQgdG8gVG9wb2xvZ3kgRW50aXR5IG9yCiAgICAgICAgICAgIFRvcG9sb2d5IFJlbGF0aW9uIGluc3RhbmNlLCBvdXRzaWRlIG9mIHRoZSBkZWNsYXJlZCBUb3BvbG9neSBFbnRpdHkKICAgICAgICAgICAgb3IgVG9wb2xvZ3kgUmVsYXRpb25zaGlwJ3MgYXR0cmlidXRlcy4gVGhpcyBjYW5ub3QgYmUgaW5zdGFudGlhdGVkLAogICAgICAgICAgICBhbmQgaXQgTVVTVCBOT1QgYmUgYXVnbWVudGVkIG9yIGRldmlhdGVkIGluIGFueSB3YXksIHVubGVzcyBzdGF0ZWQKICAgICAgICAgICAgb3RoZXJ3aXNlLiI7CiAgICB9CgogICAgaWRlbnRpdHkgY2xhc3NpZmllcnsKICAgICAgICBkZXNjcmlwdGlvbiAiVGhlIGNsYXNzaWZpZXIgaXMgdXNlZCBhcyBhIGJhc2UgdG8gcHJvdmlkZSBhbGwgY2xhc3NpZmllcnMKICAgICAgICAgICAgd2l0aCBpZGVudGl0eS4gIjsKICAgIH0KfQ==
o-ran-smo-teiv-equipment	urn:o-ran:smo-teiv-equipment	EQUIPMENT	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LWVxdWlwbWVudCB7CiAgICB5YW5nLXZlcnNpb24gMS4xOwogICAgbmFtZXNwYWNlICJ1cm46by1yYW46c21vLXRlaXYtZXF1aXBtZW50IjsKICAgIHByZWZpeCBvci10ZWl2LWVxdWlwOwoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1jb21tb24teWFuZy10eXBlcyB7cHJlZml4IG9yLXRlaXYtdHlwZXM7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IG9yLXRlaXYteWV4dDsgfQoKICAgIGltcG9ydCBpZXRmLWdlby1sb2NhdGlvbiB7CiAgICAgICAgcHJlZml4IGdlbzsKICAgICAgICByZWZlcmVuY2UgIlJGQyA5MTc5OiBBIFlBTkcgR3JvdXBpbmcgZm9yIEdlb2dyYXBoaWMgTG9jYXRpb25zIjsKICAgIH0KCiAgICBvcmdhbml6YXRpb24gIk9SQU4iOwogICAgY29udGFjdCAiVGhlIEF1dGhvcnMiOwogICAgZGVzY3JpcHRpb24KICAgICJSQU4gRXF1aXBtZW50IHRvcG9sb2d5IG1vZGVsLgoKICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIHRvcG9sb2d5IGVudGl0aWVzIGFuZCByZWxhdGlvbnMgaW4gdGhlCiAgICBSQU4gRXF1aXBtZW50IGRvbWFpbiwgd2hpY2ggaXMgbW9kZWxsZWQgdG8gdW5kZXJzdGFuZCB0aGUgcGh5c2ljYWwKICAgIGxvY2F0aW9uIG9mIGVxdWlwbWVudCBzdWNoIGFzIGFudGVubmFzIGFzc29jaWF0ZWQgd2l0aCBhIGNlbGwvY2FycmllcgogICAgYW5kIHRoZWlyIHJlbGV2YW50IHByb3BlcnRpZXMgZS5nLiB0aWx0LCBtYXggcG93ZXIgZXRjLgoKICAgIENvcHlyaWdodCAoQykgMjAyNCBFcmljc3NvbgogICAgTW9kaWZpY2F0aW9ucyBDb3B5cmlnaHQgKEMpIDIwMjQgT3BlbkluZnJhIEZvdW5kYXRpb24gRXVyb3BlCgogICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsKICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoKICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywKICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMjQiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBvci10ZWl2LXlleHQ6ZG9tYWluIEVRVUlQTUVOVDsKCiAgICBsaXN0IEFudGVubmFNb2R1bGUgewogICAgICAgIGRlc2NyaXB0aW9uICJBbiBBbnRlbm5hIE1vZHVsZSByZXByZXNlbnRzIHRoZSBwaHlzaWNhbCBhc3BlY3Qgb2YgYW4KICAgICAgICAgICAgYW50ZW5uYS4iOwoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgY29udGFpbmVyIGF0dHJpYnV0ZXMgewogICAgICAgICAgICBsZWFmIGFudGVubmFNb2RlbE51bWJlciB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiVmVuZG9yLXNwZWNpZmljIGFudGVubmEgbW9kZWwgaWRlbnRpZmllci4gVGhpcwogICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZSBpcyBwYXJ0IG9mIEFJU0cgdjMgQURCIFN0YW5kYXJkIGFuZCBoYXMgbm8KICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb25hbCBpbXBhY3QuIjsKICAgICAgICAgICAgICAgIHR5cGUgc3RyaW5nOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIG1lY2hhbmljYWxBbnRlbm5hQmVhcmluZyB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiQW50ZW5uYSBiZWFyaW5nIG9uIGFudGVubmEgc3VidW5pdCB3aGVyZSBhbnRlbm5hCiAgICAgICAgICAgICAgICAgICAgdW5pdCBpcyBpbnN0YWxsZWQuIjsKICAgICAgICAgICAgICAgIHR5cGUgaW50MzI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxlYWYgbWVjaGFuaWNhbEFudGVubmFUaWx0IHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJUaGUgZml4ZWQgYW50ZW5uYSB0aWx0IG9mIHRoZSBpbnN0YWxsYXRpb24sIGRlZmluZWQKICAgICAgICAgICAgICAgICAgICBhcyB0aGUgaW5jbGluYXRpb24gb2YgdGhlIGFudGVubmEgZWxlbWVudCByZXNwZWN0IHRvIHRoZQogICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsIHBsYW5lLiBJdCBpcyBhIHNpZ25lZCB2YWx1ZS4gUG9zaXRpdmUgaW5kaWNhdGVzCiAgICAgICAgICAgICAgICAgICAgZG93bnRpbHQsIGFuZCBuZWdhdGl2ZSBpbmRpY2F0ZXMgdXB0aWx0LiI7CiAgICAgICAgICAgICAgICB0eXBlIGludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIHBvc2l0aW9uV2l0aGluU2VjdG9yIHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIHVuaXQgcG9zaXRpb24gd2l0aGluIHNlY3Rvci4gVGhpcyBhdHRyaWJ1dGUKICAgICAgICAgICAgICAgICAgICBpcyBwYXJ0IG9mIEFJU0cgdjMgQURCIFN0YW5kYXJkIGFuZCBoYXMgbm8gb3BlcmF0aW9uYWwKICAgICAgICAgICAgICAgICAgICBpbXBhY3QuIjsKICAgICAgICAgICAgICAgIHR5cGUgc3RyaW5nOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIHRvdGFsVGlsdCB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiVG90YWwgYW50ZW5uYSBlbGV2YXRpb24gaW5jbHVkaW5nIHRoZSBpbnN0YWxsZWQKICAgICAgICAgICAgICAgICAgICB0aWx0IGFuZCB0aGUgdGlsdCBhcHBsaWVkIGJ5IHRoZSBSZW1vdGUgRWxlY3RyaWNhbAogICAgICAgICAgICAgICAgICAgIFRpbHQgKFJFVCkuIjsKICAgICAgICAgICAgICAgIHR5cGUgaW50MzI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxlYWYgZWxlY3RyaWNhbEFudGVubmFUaWx0IHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJFbGVjdHJpY2FsbHktY29udHJvbGxlZCB0aWx0IG9mIG1haW4gYmVhbSBtYXhpbXVtCiAgICAgICAgICAgICAgICAgICAgd2l0aCByZXNwZWN0IHRvIGRpcmVjdGlvbiBvcnRob2dvbmFsIHRvIGFudGVubmEgZWxlbWVudAogICAgICAgICAgICAgICAgICAgIGF4aXMgKHNlZSAzR1BQIFRTIDI1LjQ2NikuIFZhbHVlIGlzIHNpZ25lZDsgdGlsdCBkb3duIGlzCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpdmUsIHRpbHQgdXAgaXMgbmVnYXRpdmUuIjsKICAgICAgICAgICAgICAgIHR5cGUgaW50MzI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxlYWYtbGlzdCBhbnRlbm5hQmVhbVdpZHRoIHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJUaGUgYW5ndWxhciBzcGFuIG9mIHRoZSBtYWluIGxvYmUgb2YgdGhlIGFudGVubmEKICAgICAgICAgICAgICAgICAgICByYWRpYXRpb24gcGF0dGVybiBpbiB0aGUgaG9yaXpvbnRhbCBwbGFuZS4gTWVhc3VyZWQgaW4KICAgICAgICAgICAgICAgICAgICBkZWdyZWVzLiI7CiAgICAgICAgICAgICAgICB0eXBlIHVpbnQzMjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdXNlcyBnZW86Z2VvLWxvY2F0aW9uOwogICAgICAgIH0KICAgIH0KCiAgICBsaXN0IFNpdGUgewogICAgICAgIGRlc2NyaXB0aW9uICJBIHNpdGUgaXMgYSBwaHlzaWNhbCBsb2NhdGlvbiB3aGVyZSBhbiBlcXVpcG1lbnQgY2FuIGJlCiAgICAgICAgICAgIGluc3RhbGxlZC4iOwoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgY29udGFpbmVyIGF0dHJpYnV0ZXMgewogICAgICAgICAgICBsZWFmIG5hbWUgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5hbWUgb2YgU2l0ZSI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdXNlcyBnZW86Z2VvLWxvY2F0aW9uOwoKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBBTlRFTk5BTU9EVUxFX0lOU1RBTExFRF9BVF9TSVRFIHsgLy8gMC4ubiB0byAwLi4xCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmIGluc3RhbGxlZC1hdC1zaXRlIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgTW9kdWxlIGluc3RhbGxlZCBhdCBTaXRlLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBBbnRlbm5hTW9kdWxlOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmLWxpc3QgaW5zdGFsbGVkLWFudGVubmFNb2R1bGUgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiU2l0ZSB3aGVyZSBBbnRlbm5hIE1vZHVsZSBpcyBpbnN0YWxsZWQuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIFNpdGU7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9Cn0=
o-ran-smo-teiv-oam	urn:o-ran:smo-teiv-oam	OAM	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LW9hbSB7CiAgICB5YW5nLXZlcnNpb24gMS4xOwogICAgbmFtZXNwYWNlICJ1cm46by1yYW46c21vLXRlaXYtb2FtIjsKICAgIHByZWZpeCBvci10ZWl2LW9hbTsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctdHlwZXMgeyBwcmVmaXggb3ItdGVpdi10eXBlczsgfQoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1jb21tb24teWFuZy1leHRlbnNpb25zIHsgcHJlZml4IG9yLXRlaXYteWV4dDsgfQoKICAgIG9yZ2FuaXphdGlvbiAiT1JBTiI7CiAgICBjb250YWN0ICJUaGUgQXV0aG9ycyI7CiAgICBkZXNjcmlwdGlvbiAKICAgICJSQU4gTyZNIHRvcG9sb2d5IG1vZGVsLgoKICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIHRvcG9sb2d5IGVudGl0aWVzIGFuZCByZWxhdGlvbnMgaW4gdGhlCiAgICBSQU4gTyZNIGRvbWFpbiwgd2hpY2ggYXJlIGludGVuZGVkIHRvIHJlcHJlc2VudCBtYW5hZ2VtZW50IHN5c3RlbXMKICAgIGFuZCBtYW5hZ2VtZW50IGludGVyZmFjZXMuCgogICAgQ29weXJpZ2h0IChDKSAyMDI0IEVyaWNzc29uCiAgICBNb2RpZmljYXRpb25zIENvcHlyaWdodCAoQykgMjAyNCBPcGVuSW5mcmEgRm91bmRhdGlvbiBFdXJvcGUKCiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOwogICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CgogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCgogICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLAogICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCiAgICBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMCI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMjQiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBvci10ZWl2LXlleHQ6ZG9tYWluIE9BTTsKCiAgICBsaXN0IE1hbmFnZWRFbGVtZW50IHsKICAgICAgICBkZXNjcmlwdGlvbiAiQSBNYW5hZ2VkIEVsZW1lbnQgKE1FKSBpcyBhIG5vZGUgaW50byBhIHRlbGVjb21tdW5pY2F0aW9uCiAgICAgICAgICAgIG5ldHdvcmsgcHJvdmlkaW5nIHN1cHBvcnQgYW5kL29yIHNlcnZpY2UgdG8gc3Vic2NyaWJlcnMuIEFuIE1FCiAgICAgICAgICAgIGNvbW11bmljYXRlcyB3aXRoIGEgbWFuYWdlciBhcHBsaWNhdGlvbiAoZGlyZWN0bHkgb3IgaW5kaXJlY3RseSkKICAgICAgICAgICAgb3ZlciBvbmUgb3IgbW9yZSBpbnRlcmZhY2VzIGZvciB0aGUgcHVycG9zZSBvZiBiZWluZyBtb25pdG9yZWQKICAgICAgICAgICAgYW5kL29yIGNvbnRyb2xsZWQuIjsKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CiAgICB9Cn0=
o-ran-smo-teiv-ran	urn:o-ran:smo-teiv-ran	RAN	[]	2024-05-24	
o-ran-smo-teiv-rel-cloud-ran	urn:o-ran:smo-teiv-rel-cloud-ran	REL_CLOUD_RAN	["o-ran-smo-teiv-cloud", "o-ran-smo-teiv-ran"]	2024-05-02	bW9kdWxlIG8tcmFuLXNtby10ZWl2LXJlbC1jbG91ZC1yYW4gewogICAgeWFuZy12ZXJzaW9uIDEuMTsKICAgIG5hbWVzcGFjZSAidXJuOm8tcmFuOnNtby10ZWl2LXJlbC1jbG91ZC1yYW4iOwogICAgcHJlZml4IG9yLXRlaXYtY2xvdWR0b3JhbjsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctdHlwZXMge3ByZWZpeCBvci10ZWl2LXR5cGVzOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY2xvdWQge3ByZWZpeCBvci10ZWl2LWNsb3VkOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LXJhbiB7cHJlZml4IG9yLXRlaXYtcmFuOyB9CgogICAgb3JnYW5pemF0aW9uICJPUkFOIjsKICAgIGNvbnRhY3QgIlRoZSBBdXRob3JzIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiUkFOIENsb3VkIHRvIFJBTiBMb2dpY2FsIHRvcG9sb2d5IG1vZGVsLgoKICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIFJBTiBDbG91ZCB0byBSQU4gTG9naWNhbCB0b3BvbG9neSByZWxhdGlvbnMuCgogICAgQ29weXJpZ2h0IChDKSAyMDI0IEVyaWNzc29uCiAgICBNb2RpZmljYXRpb25zIENvcHlyaWdodCAoQykgMjAyNCBPcGVuSW5mcmEgRm91bmRhdGlvbiBFdXJvcGUKCiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOwogICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CgogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCgogICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLAogICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCiAgICBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMCI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMDIiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBvci10ZWl2LXlleHQ6ZG9tYWluIFJFTF9DTE9VRF9SQU47CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBORkRFUExPWU1FTlRfU0VSVkVTX0dOQkRVRlVOQ1RJT04geyAvLyAwLi5uIHRvIDAuLm0KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBzZXJ2aWNlZC1nbmJkdUZ1bmN0aW9uIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gImdOb2RlQkRVIEZ1bmN0aW9uIHNlcnZpY2VkIGJ5IHRoaXMgTkYgRGVwbG95bWVudC4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgb3ItdGVpdi1jbG91ZDpORkRlcGxveW1lbnQ7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CgogICAgICAgIGxlYWYtbGlzdCBzZXJ2aW5nLW5GRGVwbG95bWVudCB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJORiBEZXBsb3ltZW50IHRoYXQgc2VydmVzIHRoaXMgZ05vZGVCRFUgRnVuY3Rpb24uIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIG9yLXRlaXYtcmFuOkdOQkRVRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBORkRFUExPWU1FTlRfU0VSVkVTX0dOQkNVQ1BGVU5DVElPTiB7IC8vIDAuLm4gdG8gMC4ubQoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IHNlcnZpY2VkLWduYmN1Y3BGdW5jdGlvbiB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJnTm9kZUItQ1UtQ1AgRnVuY3Rpb24gc2VydmljZWQgYnkgdGhpcyBORiBEZXBsb3ltZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBvci10ZWl2LWNsb3VkOk5GRGVwbG95bWVudDsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZi1saXN0IHNlcnZpbmctbkZEZXBsb3ltZW50IHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5GIERlcGxveW1lbnQgdGhhdCBzZXJ2ZXMgdGhpcyBnTm9kZUJDVUNQIEZ1bmN0aW9uLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LXJhbjpHTkJDVUNQRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBORkRFUExPWU1FTlRfU0VSVkVTX0dOQkNVVVBGVU5DVElPTiB7IC8vIDAuLm4gdG8gMC4ubQoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IHNlcnZpY2VkLWduYmN1dXBGdW5jdGlvbiB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJnTm9kZUItQ1UtVVAgRnVuY3Rpb24gc2VydmljZWQgYnkgdGhpcyBORiBEZXBsb3ltZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBvci10ZWl2LWNsb3VkOk5GRGVwbG95bWVudDsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZi1saXN0IHNlcnZpbmctbkZEZXBsb3ltZW50IHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5GIERlcGxveW1lbnQgdGhhdCBzZXJ2ZXMgdGhpcyBnTm9kZUJDVVVQIEZ1bmN0aW9uLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LXJhbjpHTkJDVVVQRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9Cn0=
o-ran-smo-teiv-rel-equipment-ran	urn:o-ran:smo-teiv-rel-equipment-ran	REL_EQUIPMENT_RAN	["o-ran-smo-teiv-equipment", "o-ran-smo-teiv-ran"]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LXJlbC1lcXVpcG1lbnQtcmFuIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1yZWwtZXF1aXBtZW50LXJhbiI7CiAgICBwcmVmaXggb3ItdGVpdi1yZWwtZXF1aXByYW47CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLXR5cGVzIHsgcHJlZml4IG9yLXRlaXYtdHlwZXM7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7IHByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtZXF1aXBtZW50IHsgcHJlZml4IG9yLXRlaXYtZXF1aXA7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtcmFuIHsgcHJlZml4IG9yLXRlaXYtcmFuOyB9CgoKICAgIG9yZ2FuaXphdGlvbiAiT1JBTiI7CiAgICBjb250YWN0ICJUaGUgQXV0aG9ycyI7CiAgICBkZXNjcmlwdGlvbiAKICAgICJSQU4gRXF1aXBtZW50IHRvIExvZ2ljYWwgdG9wb2xvZ3kgbW9kZWwuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgUkFOIEVxdWlwbWVudCB0byBMb2dpY2FsIHRvcG9sb2d5CiAgICBlbnRpdGllcyBhbmQgcmVsYXRpb25zLgoKICAgIENvcHlyaWdodCAoQykgMjAyNCBFcmljc3NvbgogICAgTW9kaWZpY2F0aW9ucyBDb3B5cmlnaHQgKEMpIDIwMjQgT3BlbkluZnJhIEZvdW5kYXRpb24gRXVyb3BlCgogICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsKICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoKICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywKICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCgogICAgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAiOwoKICAgIHJldmlzaW9uICIyMDI0LTA1LTI0IiB7CiAgICAgICAgZGVzY3JpcHRpb24gIkluaXRpYWwgcmV2aXNpb24uIjsKICAgICAgICBvci10ZWl2LXlleHQ6bGFiZWwgMC4zLjA7CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmRvbWFpbiBSRUxfRVFVSVBNRU5UX1JBTjsKCiAgICBvci10ZWl2LXlleHQ6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIEFOVEVOTkFNT0RVTEVfU0VSVkVTX0FOVEVOTkFDQVBBQklMSVRZIHsgLy8gMC4ubiB0byAwLi5tCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmLWxpc3Qgc2VydmljZWQtYW50ZW5uYUNhcGFiaWxpdHkgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQW50ZW5uYSBDYXBhYmlsaXR5IHNlcnZpY2VkIGJ5IHRoaXMgQW50ZW5uYSBNb2R1bGUuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtZXF1aXA6QW50ZW5uYU1vZHVsZTsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZi1saXN0IHNlcnZpbmctYW50ZW5uYU1vZHVsZSB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIE1vZHVsZSBzZXJ2ZXMgdGhpcyBBbnRlbm5hIENhcGFiaWxpdHkuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIG9yLXRlaXYtcmFuOkFudGVubmFDYXBhYmlsaXR5OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgU0VDVE9SX0dST1VQU19BTlRFTk5BTU9EVUxFIHsgLy8gMC4uMSB0byAwLi5uCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmLWxpc3QgZ3JvdXBlZC1hbnRlbm5hTW9kdWxlIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIlNlY3RvciBncm91cHMgQW50ZW5uYSBNb2R1bGUuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtcmFuOlNlY3RvcjsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZiBncm91cGVkLWJ5LXNlY3RvciB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIE1vZHVsZSBncm91cGVkIGJ5IFNlY3Rvci4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YlNpZGUgb3ItdGVpdi1lcXVpcDpBbnRlbm5hTW9kdWxlOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQogICAgfQp9
o-ran-smo-teiv-rel-oam-cloud	urn:o-ran:smo-teiv-rel-oam-cloud	REL_OAM_CLOUD	["o-ran-smo-teiv-oam", "o-ran-smo-teiv-cloud"]	2024-05-02	bW9kdWxlIG8tcmFuLXNtby10ZWl2LXJlbC1vYW0tY2xvdWQgewogICAgeWFuZy12ZXJzaW9uIDEuMTsKICAgIG5hbWVzcGFjZSAidXJuOm8tcmFuOnNtby10ZWl2LXJlbC1vYW0tY2xvdWQiOwogICAgcHJlZml4IG9yLXRlaXYtb2FtdG9jbG91ZDsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctdHlwZXMge3ByZWZpeCBvci10ZWl2LXR5cGVzOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtb2FtIHtwcmVmaXggb3ItdGVpdi1vYW07IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY2xvdWQge3ByZWZpeCBvci10ZWl2LWNsb3VkOyB9CgogICAgb3JnYW5pemF0aW9uICJPUkFOIjsKICAgIGNvbnRhY3QgIlRoZSBBdXRob3JzIjsKICAgIGRlc2NyaXB0aW9uIAogICAgIlJBTiBPJk0gdG8gQ2xvdWQgdG9wb2xvZ3kgbW9kZWwuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgUkFOIE8mTSB0byBDbG91ZCB0b3BvbG9neSByZWxhdGlvbnMKCiAgICBDb3B5cmlnaHQgKEMpIDIwMjQgRXJpY3Nzb24KICAgIE1vZGlmaWNhdGlvbnMgQ29weXJpZ2h0IChDKSAyMDI0IE9wZW5JbmZyYSBGb3VuZGF0aW9uIEV1cm9wZQoKICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7CiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKCiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKCiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsCiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgoKICAgIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wIjsKCiAgICByZXZpc2lvbiAiMjAyNC0wNS0wMiIgewogICAgICAgIGRlc2NyaXB0aW9uICJJbml0aWFsIHJldmlzaW9uLiI7CiAgICAgICAgb3ItdGVpdi15ZXh0OmxhYmVsIDAuMy4wOwogICAgfQoKICAgIG9yLXRlaXYteWV4dDpkb21haW4gUkVMX09BTV9DTE9VRDsKCiAgICBvci10ZWl2LXlleHQ6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIE1BTkFHRURFTEVNRU5UX0RFUExPWUVEX0FTX0NMT1VESUZJRURORiB7ICAvLyAwLi4xIHRvIDEKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYgZGVwbG95ZWQtYXMtY2xvdWRpZmllZE5GIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk1hbmFnZWQgRWxlbWVudCBkZXBsb3llZCBhcyBDbG91ZGlmaWVkIE5GLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBvci10ZWl2LW9hbTpNYW5hZ2VkRWxlbWVudDsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZiBkZXBsb3llZC1tYW5hZ2VkRWxlbWVudCB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJDbG91ZGlmaWVkIE5GIGRlcGxveXMgTWFuYWdlZCBFbGVtZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LWNsb3VkOkNsb3VkaWZpZWRORjsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgICAgICBtYW5kYXRvcnkgdHJ1ZTsKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBORkRFUExPWU1FTlRfU0VSVkVTX01BTkFHRURFTEVNRU5UIHsgLy8gMS4ubiB0byAxCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmIHNlcnZpY2VkLW1hbmFnZWRFbGVtZW50IHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk1hbmFnZWQgRWxlbWVudCBzZXJ2aWNlZCBieSB0aGlzIE5GIERlcGxveW1lbnQuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtY2xvdWQ6TkZEZXBsb3ltZW50OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgICAgIG1hbmRhdG9yeSB0cnVlOwogICAgICAgIH0KCiAgICAgICAgbGVhZi1saXN0IHNlcnZpbmctbkZEZXBsb3ltZW50IHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5GIERlcGxveW1lbnQgdGhhdCBzZXJ2ZXMgdGhpcyBNYW5hZ2VkIEVsZW1lbnQuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIG9yLXRlaXYtb2FtOk1hbmFnZWRFbGVtZW50OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgICAgIG1pbi1lbGVtZW50cyAxOwogICAgICAgIH0KICAgIH0KfQ==
o-ran-smo-teiv-rel-oam-ran	urn:o-ran:smo-teiv-rel-oam-ran	REL_OAM_RAN	["o-ran-smo-teiv-oam", "o-ran-smo-teiv-ran"]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LXJlbC1vYW0tcmFuIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1yZWwtb2FtLXJhbiI7CiAgICBwcmVmaXggb3ItdGVpdi1yZWwtb2FtcmFuOwoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1jb21tb24teWFuZy10eXBlcyB7IHByZWZpeCBvci10ZWl2LXR5cGVzOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMgeyBwcmVmaXggb3ItdGVpdi15ZXh0OyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LW9hbSB7IHByZWZpeCBvci10ZWl2LW9hbTsgfQoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1yYW4geyBwcmVmaXggb3ItdGVpdi1yYW47IH0KCiAgICBvcmdhbml6YXRpb24gIk9SQU4iOwogICAgY29udGFjdCAiVGhlIEF1dGhvcnMiOwogICAgZGVzY3JpcHRpb24KICAgICJSQU4gTyZNIHRvIExvZ2ljYWwgdG9wb2xvZ3kgbW9kZWwuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgUkFOIE8mTSB0byBMb2dpY2FsIHRvcG9sb2d5IHJlbGF0aW9ucwoKICAgIENvcHlyaWdodCAoQykgMjAyNCBFcmljc3NvbgogICAgTW9kaWZpY2F0aW9ucyBDb3B5cmlnaHQgKEMpIDIwMjQgT3BlbkluZnJhIEZvdW5kYXRpb24gRXVyb3BlCgogICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsKICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoKICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywKICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCgogICAgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAiOwoKICAgIHJldmlzaW9uICIyMDI0LTA1LTI0IiB7CiAgICAgICAgZGVzY3JpcHRpb24gIkluaXRpYWwgcmV2aXNpb24uIjsKICAgICAgICBvci10ZWl2LXlleHQ6bGFiZWwgMC4zLjA7CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmRvbWFpbiBSRUxfT0FNX1JBTjsKCiAgICBvci10ZWl2LXlleHQ6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIE1BTkFHRURFTEVNRU5UX01BTkFHRVNfRU5PREVCRlVOQ1RJT04geyAgIC8vIDEgdG8gMC4ubgoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IG1hbmFnZWQtZW5vZGViRnVuY3Rpb24gewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTWFuYWdlZCBFbGVtZW50IG1hbmFnZXMgZU5vZGVCIEZ1bmN0aW9uLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBvci10ZWl2LW9hbTpNYW5hZ2VkRWxlbWVudDsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZiBtYW5hZ2VkLWJ5LW1hbmFnZWRFbGVtZW50IHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gImVOb2RlQiBGdW5jdGlvbiBtYW5hZ2VkIGJ5IE1hbmFnZWQgRWxlbWVudC4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YlNpZGUgb3ItdGVpdi1yYW46RU5vZGVCRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJEVUZVTkNUSU9OIHsgICAgLy8gMSB0byAwLi5uCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmLWxpc3QgbWFuYWdlZC1nbmJkdUZ1bmN0aW9uIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk1hbmFnZWQgRWxlbWVudCBtYW5hZ2VzIGdOb2RlQi1EVSBGdW5jdGlvbi4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgb3ItdGVpdi1vYW06TWFuYWdlZEVsZW1lbnQ7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CgogICAgICAgIGxlYWYgbWFuYWdlZC1ieS1tYW5hZ2VkRWxlbWVudCB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJnTm9kZUItRFUgRnVuY3Rpb24gbWFuYWdlZCBieSBNYW5hZ2VkIEVsZW1lbnQuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIG9yLXRlaXYtcmFuOkdOQkRVRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJDVUNQRlVOQ1RJT04geyAgICAvLyAxIHRvIDAuLm4KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBtYW5hZ2VkLWduYmN1Y3BGdW5jdGlvbiB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJNYW5hZ2VkIEVsZW1lbnQgbWFuYWdlcyBnTm9kZUItQ1UtQ1AgRnVuY3Rpb24uIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtb2FtOk1hbmFnZWRFbGVtZW50OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmIG1hbmFnZWQtYnktbWFuYWdlZEVsZW1lbnQgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLUNVLUNQIEZ1bmN0aW9uIG1hbmFnZWQgYnkgTWFuYWdlZCBFbGVtZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LXJhbjpHTkJDVUNQRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJDVVVQRlVOQ1RJT04geyAgICAvLyAxIHRvIDAuLm4KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBtYW5hZ2VkLWduYmN1dXBGdW5jdGlvbiB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJNYW5hZ2VkIEVsZW1lbnQgbWFuYWdlcyBnTm9kZUItQ1UtVVAgRnVuY3Rpb24uIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtb2FtOk1hbmFnZWRFbGVtZW50OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmIG1hbmFnZWQtYnktbWFuYWdlZEVsZW1lbnQgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLUNVLVVQIEZ1bmN0aW9uIG1hbmFnZWQgYnkgTWFuYWdlZCBFbGVtZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LXJhbjpHTkJDVVVQRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQp9
\.

COPY ties_model.entity_info("storedAt", "name", "moduleReferenceName") FROM stdin;
o-ran-smo-teiv-cloud_CloudNamespace	CloudNamespace	o-ran-smo-teiv-cloud
o-ran-smo-teiv-cloud_CloudSite	CloudSite	o-ran-smo-teiv-cloud
o-ran-smo-teiv-cloud_CloudifiedNF	CloudifiedNF	o-ran-smo-teiv-cloud
o-ran-smo-teiv-cloud_NFDeployment	NFDeployment	o-ran-smo-teiv-cloud
o-ran-smo-teiv-cloud_NodeCluster	NodeCluster	o-ran-smo-teiv-cloud
o-ran-smo-teiv-equipment_AntennaModule	AntennaModule	o-ran-smo-teiv-equipment
o-ran-smo-teiv-equipment_Site	Site	o-ran-smo-teiv-equipment
o-ran-smo-teiv-oam_ManagedElement	ManagedElement	o-ran-smo-teiv-oam
o-ran-smo-teiv-ran_AntennaCapability	AntennaCapability	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_ENodeBFunction	ENodeBFunction	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_EUtranCell	EUtranCell	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_GNBCUCPFunction	GNBCUCPFunction	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_GNBCUUPFunction	GNBCUUPFunction	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_GNBDUFunction	GNBDUFunction	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_LTESectorCarrier	LTESectorCarrier	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_NRCellCU	NRCellCU	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_NRCellDU	NRCellDU	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_NRSectorCarrier	NRSectorCarrier	o-ran-smo-teiv-ran
o-ran-smo-teiv-ran_Sector	Sector	o-ran-smo-teiv-ran
\.

COPY ties_model.relationship_info("name", "aSideAssociationName", "aSideMOType", "aSideModule", "aSideMinCardinality", "aSideMaxCardinality", "bSideAssociationName", "bSideMOType", "bSideModule", "bSideMinCardinality", "bSideMaxCardinality", "associationKind", "connectSameEntity", "relationshipDataLocation", "storedAt", "moduleReferenceName") FROM stdin;
ANTENNAMODULE_INSTALLED_AT_SITE	installed-at-site	AntennaModule	o-ran-smo-teiv-equipment	0	9223372036854775807	installed-antennaModule	Site	o-ran-smo-teiv-equipment	0	1	BI_DIRECTIONAL	false	A_SIDE	o-ran-smo-teiv-equipment_AntennaModule	o-ran-smo-teiv-equipment
ANTENNAMODULE_SERVES_ANTENNACAPABILITY	serviced-antennaCapability	AntennaModule	o-ran-smo-teiv-equipment	0	9223372036854775807	serving-antennaModule	AntennaCapability	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	RELATION	o-ran-smo-teiv-rel-equipment-ran_ANTENNAMODULE_SERVES_ANTENNACAPABILITY	o-ran-smo-teiv-rel-equipment-ran
CLOUDIFIEDNF_COMPRISES_NFDEPLOYMENT	comprised-nFDeployment	CloudifiedNF	o-ran-smo-teiv-cloud	1	1	comprised-by-cloudifiedNF	NFDeployment	o-ran-smo-teiv-cloud	1	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-cloud_NFDeployment	o-ran-smo-teiv-cloud
CLOUDNAMESPACE_DEPLOYED_ON_NODECLUSTER	deployed-on-nodeCluster	CloudNamespace	o-ran-smo-teiv-cloud	1	9223372036854775807	deployed-cloudNamespace	NodeCluster	o-ran-smo-teiv-cloud	1	1	BI_DIRECTIONAL	false	A_SIDE	o-ran-smo-teiv-cloud_CloudNamespace	o-ran-smo-teiv-cloud
ENODEBFUNCTION_PROVIDES_EUTRANCELL	provided-euTranCell	ENodeBFunction	o-ran-smo-teiv-ran	1	1	provided-by-enodebFunction	EUtranCell	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_EUtranCell	o-ran-smo-teiv-ran
ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	provided-lteSectorCarrier	ENodeBFunction	o-ran-smo-teiv-ran	1	1	provided-by-enodebFunction	LTESectorCarrier	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_LTESectorCarrier	o-ran-smo-teiv-ran
EUTRANCELL_USES_LTESECTORCARRIER	used-lteSectorCarrier	EUtranCell	o-ran-smo-teiv-ran	0	1	used-by-euTranCell	LTESectorCarrier	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_LTESectorCarrier	o-ran-smo-teiv-ran
GNBCUCPFUNCTION_PROVIDES_NRCELLCU	provided-nrCellCu	GNBCUCPFunction	o-ran-smo-teiv-ran	1	1	provided-by-gnbcucpFunction	NRCellCU	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_NRCellCU	o-ran-smo-teiv-ran
GNBDUFUNCTION_PROVIDES_NRCELLDU	provided-nrCellDu	GNBDUFunction	o-ran-smo-teiv-ran	1	1	provided-by-gnbduFunction	NRCellDU	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_NRCellDU	o-ran-smo-teiv-ran
GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	provided-nrSectorCarrier	GNBDUFunction	o-ran-smo-teiv-ran	1	1	provided-by-gnbduFunction	NRSectorCarrier	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_NRSectorCarrier	o-ran-smo-teiv-ran
LTESECTORCARRIER_USES_ANTENNACAPABILITY	used-antennaCapability	LTESectorCarrier	o-ran-smo-teiv-ran	0	9223372036854775807	used-by-lteSectorCarrier	AntennaCapability	o-ran-smo-teiv-ran	0	1	BI_DIRECTIONAL	false	A_SIDE	o-ran-smo-teiv-ran_LTESectorCarrier	o-ran-smo-teiv-ran
MANAGEDELEMENT_DEPLOYED_AS_CLOUDIFIEDNF	deployed-as-cloudifiedNF	ManagedElement	o-ran-smo-teiv-oam	1	1	deployed-managedElement	CloudifiedNF	o-ran-smo-teiv-cloud	0	1	BI_DIRECTIONAL	false	A_SIDE	o-ran-smo-teiv-oam_ManagedElement	o-ran-smo-teiv-rel-oam-cloud
MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	managed-enodebFunction	ManagedElement	o-ran-smo-teiv-oam	1	1	managed-by-managedElement	ENodeBFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_ENodeBFunction	o-ran-smo-teiv-rel-oam-ran
MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	managed-gnbcucpFunction	ManagedElement	o-ran-smo-teiv-oam	1	1	managed-by-managedElement	GNBCUCPFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_GNBCUCPFunction	o-ran-smo-teiv-rel-oam-ran
MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	managed-gnbcuupFunction	ManagedElement	o-ran-smo-teiv-oam	1	1	managed-by-managedElement	GNBCUUPFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_GNBCUUPFunction	o-ran-smo-teiv-rel-oam-ran
MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	managed-gnbduFunction	ManagedElement	o-ran-smo-teiv-oam	1	1	managed-by-managedElement	GNBDUFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_GNBDUFunction	o-ran-smo-teiv-rel-oam-ran
NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE	deployed-on-cloudNamespace	NFDeployment	o-ran-smo-teiv-cloud	1	9223372036854775807	deployed-nFDeployment	CloudNamespace	o-ran-smo-teiv-cloud	1	9223372036854775807	BI_DIRECTIONAL	false	RELATION	o-ran-smo-teiv-cloud_NFDEPLOYMENT_DEPLOYED_ON_CLOUDNAMESPACE	o-ran-smo-teiv-cloud
NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION	serviced-gnbcucpFunction	NFDeployment	o-ran-smo-teiv-cloud	0	9223372036854775807	serving-nFDeployment	GNBCUCPFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	RELATION	o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUCPFUNCTION	o-ran-smo-teiv-rel-cloud-ran
NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION	serviced-gnbcuupFunction	NFDeployment	o-ran-smo-teiv-cloud	0	9223372036854775807	serving-nFDeployment	GNBCUUPFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	RELATION	o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBCUUPFUNCTION	o-ran-smo-teiv-rel-cloud-ran
NFDEPLOYMENT_SERVES_GNBDUFUNCTION	serviced-gnbduFunction	NFDeployment	o-ran-smo-teiv-cloud	0	9223372036854775807	serving-nFDeployment	GNBDUFunction	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	RELATION	o-ran-smo-teiv-rel-cloud-ran_NFDEPLOYMENT_SERVES_GNBDUFUNCTION	o-ran-smo-teiv-rel-cloud-ran
NFDEPLOYMENT_SERVES_MANAGEDELEMENT	serviced-managedElement	NFDeployment	o-ran-smo-teiv-cloud	1	9223372036854775807	serving-nFDeployment	ManagedElement	o-ran-smo-teiv-oam	1	1	BI_DIRECTIONAL	false	A_SIDE	o-ran-smo-teiv-cloud_NFDeployment	o-ran-smo-teiv-rel-oam-cloud
NODECLUSTER_LOCATED_AT_CLOUDSITE	located-at-cloudSite	NodeCluster	o-ran-smo-teiv-cloud	1	9223372036854775807	location-of-nodeCluster	CloudSite	o-ran-smo-teiv-cloud	1	9223372036854775807	BI_DIRECTIONAL	false	RELATION	o-ran-smo-teiv-cloud_NODECLUSTER_LOCATED_AT_CLOUDSITE	o-ran-smo-teiv-cloud
NRCELLDU_USES_NRSECTORCARRIER	used-nrSectorCarrier	NRCellDU	o-ran-smo-teiv-ran	0	1	used-by-nrCellDu	NRSectorCarrier	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_NRSectorCarrier	o-ran-smo-teiv-ran
NRSECTORCARRIER_USES_ANTENNACAPABILITY	used-antennaCapability	NRSectorCarrier	o-ran-smo-teiv-ran	0	9223372036854775807	used-by-nrSectorCarrier	AntennaCapability	o-ran-smo-teiv-ran	0	1	BI_DIRECTIONAL	false	A_SIDE	o-ran-smo-teiv-ran_NRSectorCarrier	o-ran-smo-teiv-ran
SECTOR_GROUPS_ANTENNAMODULE	grouped-antennaModule	Sector	o-ran-smo-teiv-ran	0	1	grouped-by-sector	AntennaModule	o-ran-smo-teiv-equipment	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-equipment_AntennaModule	o-ran-smo-teiv-rel-equipment-ran
SECTOR_GROUPS_EUTRANCELL	grouped-euTranCell	Sector	o-ran-smo-teiv-ran	0	1	grouped-by-sector	EUtranCell	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_EUtranCell	o-ran-smo-teiv-ran
SECTOR_GROUPS_NRCELLDU	grouped-nrCellDu	Sector	o-ran-smo-teiv-ran	0	1	grouped-by-sector	NRCellDU	o-ran-smo-teiv-ran	0	9223372036854775807	BI_DIRECTIONAL	false	B_SIDE	o-ran-smo-teiv-ran_NRCellDU	o-ran-smo-teiv-ran
\.

;

COMMIT;