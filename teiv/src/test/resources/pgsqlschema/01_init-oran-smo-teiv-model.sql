--
-- ============LICENSE_START=======================================================
-- Copyright (C) 2024 Ericsson
-- Modifications Copyright (C) 2024 OpenInfra Foundation Europe
-- ================================================================================
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--       http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--
-- SPDX-License-Identifier: Apache-2.0
-- ============LICENSE_END=========================================================
--

BEGIN;

DROP SCHEMA IF EXISTS ties_model cascade;
CREATE SCHEMA IF NOT EXISTS ties_model;
SET default_tablespace = '';
SET default_table_access_method = heap;

CREATE TABLE IF NOT EXISTS ties_model.hash_info (
    "name"                 VARCHAR(511) PRIMARY KEY,
    "hashedValue"          VARCHAR(511),
    "type"                 VARCHAR(511)
);

CREATE TABLE IF NOT EXISTS ties_model.module_reference (
    "name"                   VARCHAR(511) PRIMARY KEY,
    "namespace"              VARCHAR(511),
    "domain"             VARCHAR(511),
    "includedModules"        jsonb,
    "content"               TEXT,
    "revision"            VARCHAR(511)
);

CREATE TABLE IF NOT EXISTS ties_model.entity_info (
    "storedAt"               VARCHAR(511) PRIMARY KEY,
    "name"                   VARCHAR(511),
    "moduleReferenceName"    VARCHAR(511),
    FOREIGN KEY ("moduleReferenceName") REFERENCES ties_model.module_reference ("name") ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ties_model.relationship_info (
    "name"                     VARCHAR(511) NOT NULL,
    "aSideAssociationName"     TEXT NOT NULL,
    "aSideMOType"              TEXT NOT NULL,
    "aSideModule"              TEXT NOT NULL,
    "aSideMinCardinality"      BIGINT NOT NULL,
    "aSideMaxCardinality"      BIGINT NOT NULL,
    "bSideAssociationName"     TEXT NOT NULL,
    "bSideMOType"              TEXT NOT NULL,
    "bSideModule"              TEXT NOT NULL,
    "bSideMinCardinality"      BIGINT NOT NULL,
    "bSideMaxCardinality"      BIGINT NOT NULL,
    "associationKind"          TEXT NOT NULL,
    "relationshipDataLocation" TEXT NOT NULL,
    "connectSameEntity"        BOOLEAN NOT NULL,
    "storedAt"                 VARCHAR(511) NOT NULL,
    "moduleReferenceName"      TEXT NOT NULL,
    PRIMARY KEY ("name", "moduleReferenceName"),
    FOREIGN KEY ("moduleReferenceName") REFERENCES ties_model.module_reference ("name") ON DELETE CASCADE
);

COPY ties_model.hash_info("name", "hashedValue", "type") FROM stdin;
PK_ENodeBFunction_id	PK_ENodeBFunction_id	CONSTRAINT
FK_TestEntityB_REL_FK_used-by-testEntityA	FK_TestEntityB_REL_FK_used-by-testEntityA	CONSTRAINT
frequencyDL	frequencyDL	COLUMN
ANTENNAMODULE_REALISED_BY_ANTENNAMODULE	ANTENNAMODULE_REALISED_BY_ANTENNAMODULE	TABLE
aSide_AntennaModule	aSide_AntennaModule	COLUMN
bSide_AntennaModule	bSide_AntennaModule	COLUMN
PK_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE_id	PK_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE_id	CONSTRAINT
FK_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE_aSide_AntennaModule	FK_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE_aSide_AntennaModule	CONSTRAINT
FK_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE_bSide_AntennaModule	FK_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE_bSide_AntennaModule	CONSTRAINT
UNIQUE_GNBCUUPFunction_REL_ID_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	UNIQUE_BDB349CDF0C4055902881ECCB71F460AE1DD323E	CONSTRAINT
NRCellDU	NRCellDU	TABLE
NRSectorCarrier	NRSectorCarrier	TABLE
REL_ID_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
PK_ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE_id	PK_ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE_id	CONSTRAINT
FK_GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_bSide_CloudNativeApplication	FK_CA6721EE0944CBBB8E071CEA630162ABD7DFF2DA	CONSTRAINT
FK_LTESectorCarrier_REL_FK_used-by-euTranCell	FK_LTESectorCarrier_REL_FK_used-by-euTranCell	CONSTRAINT
FK_GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN_bSide_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	FK_EADC754A352728E72F7320F69D802725C71EDE3E	CONSTRAINT
frequencyUL	frequencyUL	COLUMN
FK_GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_aSide_GNBCUUPFunction	FK_F3346189A1BB0DA705219A4136349DF50AE8AA33	CONSTRAINT
REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
PK_Namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee_id	PK_77881E9D6F659316F836050DDC6E26FA4DE425EE	CONSTRAINT
FK_Namespace_REL_FK_deployed-on-nodeCluster	FK_Namespace_REL_FK_deployed-on-nodeCluster	CONSTRAINT
ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	1EF2A41C34A961CD8AE603E020B7B8B57345267F	TABLE
UNIQUE_TestEntityB_REL_ID_TESTENTITYA_USES_TESTENTITYB	UNIQUE_TestEntityB_REL_ID_TESTENTITYA_USES_TESTENTITYB	CONSTRAINT
UNIQUE_ManagedElement_REL_ID_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	UNIQUE_ADD7C124AEF822CB0293FC75E39449DC1AD097E5	CONSTRAINT
NRCellCU	NRCellCU	TABLE
REL_FK_used-by-euTranCell	REL_FK_used-by-euTranCell	COLUMN
UNIQUE_NRSectorCarrier_REL_ID_NRSECTORCARRIER_USES_ANTENNACAPABILITY	UNIQUE_EDF7D5C78EF6505848B1679B714D7831F5863991	CONSTRAINT
PK_TESTENTITYA_PROVIDES_TESTENTITYB_id	PK_TESTENTITYA_PROVIDES_TESTENTITYB_id	CONSTRAINT
FK_LTESectorCarrier_REL_FK_provided-by-enodebFunction	FK_LTESectorCarrier_REL_FK_provided-by-enodebFunction	CONSTRAINT
REL_ID_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_ID_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
bSide_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	bSide_84EF1134719BB6FCF33A94FF770311FC722BCF41	COLUMN
eNBId	eNBId	COLUMN
PK_NodeCluster_id	PK_NodeCluster_id	CONSTRAINT
FK_NRCellCU_REL_FK_provided-by-gnbcucpFunction	FK_NRCellCU_REL_FK_provided-by-gnbcucpFunction	CONSTRAINT
FK_CloudNativeSystem_REL_FK_deployed-managedElement	FK_CloudNativeSystem_REL_FK_deployed-managedElement	CONSTRAINT
PK_Sector_id	PK_Sector_id	CONSTRAINT
GNBCUCPFunction	GNBCUCPFunction	TABLE
UNIQUE_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_REL_ID_CLOUDNATIVEAPPLICATIONNNNNNNNNNN_DEPLOYED_ON_NAMESPACEEEEEEEEEEE	UNIQUE_287E65679DC2108F55F43D62A4325F6DECF372E1	CONSTRAINT
REL_ID_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_ID_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
FK_NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU_REL_FK_provided-by-gnbduFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	FK_D43434F9F6FD1C14BE14A0EEDA4C9918B26E82F1	CONSTRAINT
PK_ManagedElement_id	PK_ManagedElement_id	CONSTRAINT
UNIQUE_AntennaModule_REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	UNIQUE_AntennaModule_REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	CONSTRAINT
PK_GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN_id	PK_5D1AC46C58E1FE44FB266F86CE79B3AEBE1D92B3	CONSTRAINT
REL_FK_provided-by-gnbcucpFunction	REL_FK_provided-by-gnbcucpFunction	COLUMN
REL_FK_managed-by-managedElementttttttttttttttttttttttttttttttttttttttt	REL_FK_48B14FA5B787C6398AD1DE5EE670AD0D2A2CB36F	COLUMN
FK_GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN_aSide_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	FK_BFC9C18D6DBCD1FFC021B021CF31444EAA1FEDCA	CONSTRAINT
ManagedElement	ManagedElement	TABLE
PK_AntennaModule_id	PK_AntennaModule_id	CONSTRAINT
FK_EUtranCell_REL_FK_provided-by-enodebFunction	FK_EUtranCell_REL_FK_provided-by-enodebFunction	CONSTRAINT
FK_ENodeBFunction_REL_FK_managed-by-managedElement	FK_ENodeBFunction_REL_FK_managed-by-managedElement	CONSTRAINT
UNIQUE_GNBDUFunction_REL_ID_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	UNIQUE_08DFEFAF56EDDE43CBDC336F459D28C6518D3E1D	CONSTRAINT
PK_GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_id	PK_GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_id	CONSTRAINT
FK_TESTENTITYA_PROVIDES_TESTENTITYB_bSide_TestEntityB	FK_TESTENTITYA_PROVIDES_TESTENTITYB_bSide_TestEntityB	CONSTRAINT
FK_CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm_REL_FK_deployed-managedElementttttttttttttttttttttttttttttttttttttttttt	FK_54FE608944AC8EFFFBE7E55744B8BA52F6B29ABB	CONSTRAINT
REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
UNIQUE_CloudNativeApplication_REL_ID_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	UNIQUE_1A317D31DA93B0CF9A9F8A04077B0F60ABCFF49C	CONSTRAINT
UNIQUE_NRCellDU_REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	UNIQUE_NRCellDU_REL_ID_GNBDUFUNCTION_PROVIDES_NRCELLDU	CONSTRAINT
UNIQUE_Namespace_REL_ID_NAMESPACE_DEPLOYED_ON_NODECLUSTER	UNIQUE_Namespace_REL_ID_NAMESPACE_DEPLOYED_ON_NODECLUSTER	CONSTRAINT
FK_GNBCUUPFunction_REL_FK_managed-by-managedElement	FK_GNBCUUPFunction_REL_FK_managed-by-managedElement	CONSTRAINT
aSide_GNBCUUPFunction	aSide_GNBCUUPFunction	COLUMN
UNIQUE_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_REL_ID_MANAGEDELEMENTTTTTTTTT_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNN	UNIQUE_3DDA71C08F678AA7303FE0BD127CC27A80D1DDED	CONSTRAINT
eNodeBPlmnId	eNodeBPlmnId	COLUMN
PK_NRSectorCarrier_id	PK_NRSectorCarrier_id	CONSTRAINT
FK_GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_bSide_CloudNativeApplication	FK_36215EA9FC5F31CC0F131E526A84A54CB006C66B	CONSTRAINT
mechanicalAntennaBearing	mechanicalAntennaBearing	COLUMN
GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	TABLE
ENodeBFunction	ENodeBFunction	TABLE
nRPCI	nRPCI	COLUMN
antennaModelNumber	antennaModelNumber	COLUMN
REL_ID_CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	REL_ID_CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	COLUMN
REL_FK_used-antennaCapability	REL_FK_used-antennaCapability	COLUMN
PK_NRCellCU_id	PK_NRCellCU_id	CONSTRAINT
REL_FK_deployed-as-cloudNativeSystem	REL_FK_deployed-as-cloudNativeSystem	COLUMN
PK_NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU_id	PK_CCB39BED50FEF60B1B1F86A7C938BE89B7D90D38	CONSTRAINT
cellId	cellId	COLUMN
UNIQUE_NRSectorCarrier_REL_ID_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	UNIQUE_872BE05F1989443F2595D99A77BC03733B2D1E2F	CONSTRAINT
REL_FK_deployed-on-namespace	REL_FK_deployed-on-namespace	COLUMN
PK_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_id	PK_F52E445B46B712C0D9014D194AB039C205E69818	CONSTRAINT
aSide_GNBCUCPFunction	aSide_GNBCUCPFunction	COLUMN
FK_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_REL_FK_deployed-on-namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	FK_E33FB71E6FAC69C92ADEEC55E63D401D21DF91AE	CONSTRAINT
UNIQUE_EUtranCell_REL_ID_SECTOR_GROUPS_EUTRANCELL	UNIQUE_EUtranCell_REL_ID_SECTOR_GROUPS_EUTRANCELL	CONSTRAINT
PK_CloudNativeApplication_id	PK_CloudNativeApplication_id	CONSTRAINT
PK_CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm_id	PK_F568C5029499EE188A168886B2EF09C0D1FAAA9F	CONSTRAINT
UNIQUE_EUtranCell_REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	UNIQUE_EUtranCell_REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	CONSTRAINT
name	name	COLUMN
REL_FK_provided-by-gnbduFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	REL_FK_609963BFEE15FF824280FBE201313C3CDACDDDCE	COLUMN
REL_FK_located-at-cloudSite	REL_FK_located-at-cloudSite	COLUMN
REL_FK_realised-managedElementttttttttttttttttttttttttttttttttttttttttt	REL_FK_AB87B417CCD05C332DDD0C60F0C6AB41D38B05E5	COLUMN
REL_ID_MANAGEDELEMENTTTTTTTTTTTTTTT_MANAGES_GNBDUFUNCTIONNNNNNNNNNNNNNN	REL_ID_BDE0B6C74D14AC109D29A08D80E92D4D0DCAEB0B	COLUMN
geranFqBands	geranFqBands	COLUMN
REL_ID_MANAGEDELEMENTTTTTTTTT_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNN	REL_ID_FC2F6A5A12917357B548C83F4B0C1AD58FA61413	COLUMN
FK_GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_aSide_GNBDUFunction	FK_69C6800CC81731E475893CC85582971C7530C98E	CONSTRAINT
REL_FK_realised-by-physicalNetworkAppliance	REL_FK_realised-by-physicalNetworkAppliance	COLUMN
PK_EUtranCell_id	PK_EUtranCell_id	CONSTRAINT
REL_ID_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	REL_ID_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	COLUMN
FK_NRSectorCarrier_REL_FK_used-antennaCapability	FK_NRSectorCarrier_REL_FK_used-antennaCapability	CONSTRAINT
REL_ID_GNBDUFUNCTIONNNNNNNNNNNNNNUUU_PROVIDES_NRCELLDUUUUUUUUUUUUUUUUUU	REL_ID_040FC8B06B420BA5708AF4798102D1E65FB4DC61	COLUMN
CloudNativeApplication	CloudNativeApplication	TABLE
positionWithinSector	positionWithinSector	COLUMN
PK_Namespace_id	PK_Namespace_id	CONSTRAINT
GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	TABLE
Sector	Sector	TABLE
REL_ID_ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	REL_ID_ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	COLUMN
FK_GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_bSide_CloudNativeApplication	FK_95C3AD1FCFBD310B9947B9B622CA8E0FC2135DC5	CONSTRAINT
PhysicalNetworkAppliance	PhysicalNetworkAppliance	TABLE
PK_GNBCUCPFunction_id	PK_GNBCUCPFunction_id	CONSTRAINT
REL_FK_deployed-on-nodeCluster	REL_FK_deployed-on-nodeCluster	COLUMN
AntennaCapability	AntennaCapability	TABLE
NodeCluster	NodeCluster	TABLE
REL_ID_NRCELLDU_USES_NRSECTORCARRIER	REL_ID_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
PK_GNBCUUPFunction_id	PK_GNBCUUPFunction_id	CONSTRAINT
UNIQUE_LTESectorCarrier_REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	UNIQUE_LTESectorCarrier_REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	CONSTRAINT
FK_ManagedElement_REL_FK_deployed-as-cloudNativeSystem	FK_ManagedElement_REL_FK_deployed-as-cloudNativeSystem	CONSTRAINT
TestEntityA	TestEntityA	TABLE
azimuth	azimuth	COLUMN
TestEntityB	TestEntityB	TABLE
REL_FK_deployed-managedElementttttttttttttttttttttttttttttttttttttttttt	REL_FK_C2F5EC33C0760F653CE7263A49C0B697FCA2D542	COLUMN
FK_EUtranCell_REL_FK_grouped-by-sector	FK_EUtranCell_REL_FK_grouped-by-sector	CONSTRAINT
cellLocalId	cellLocalId	COLUMN
gNBCUName	gNBCUName	COLUMN
FK_NRSectorCarrier_REL_FK_used-by-nrCellDu	FK_NRSectorCarrier_REL_FK_used-by-nrCellDu	CONSTRAINT
electricalAntennaTilt	electricalAntennaTilt	COLUMN
REL_FK_provided-by-enodebFunction	REL_FK_provided-by-enodebFunction	COLUMN
aSide_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	aSide_B0FD0521695A211BFF76F413A31F28CBA32E57ED	COLUMN
GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	7D7AACEBB0E4E4732835BA4BFE708DDD3738962D	TABLE
PK_PhysicalNetworkAppliance_id	PK_PhysicalNetworkAppliance_id	CONSTRAINT
REL_ID_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_ID_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
eUtranFqBands	eUtranFqBands	COLUMN
FK_GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_aSide_GNBCUCPFunction	FK_B2DDDC542E95DD31826EECEBBF67FD01DAF48833	CONSTRAINT
REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	REL_ID_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
CloudSite	CloudSite	TABLE
GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	TABLE
UNIQUE_ENodeBFunction_REL_ID_ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	UNIQUE_6964DA7D7CC1F79A3DB8B43E5F77E42DF8DFBF73	CONSTRAINT
FK_PhysicalNetworkAppliance_REL_FK_installed-at-site	FK_PhysicalNetworkAppliance_REL_FK_installed-at-site	CONSTRAINT
CloudNativeSystem	CloudNativeSystem	TABLE
UNIQUE_NodeCluster_REL_ID_NODECLUSTER_LOCATED_AT_CLOUDSITE	UNIQUE_NodeCluster_REL_ID_NODECLUSTER_LOCATED_AT_CLOUDSITE	CONSTRAINT
REL_FK_used-by-lteSectorCarrier	REL_FK_used-by-lteSectorCarrier	COLUMN
attribute1	attribute1	COLUMN
PK_ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt_id	PK_19E2CBE3A8BBA12A7D9EC9923573BC0A65B1EC4A	CONSTRAINT
FK_AntennaModule_REL_FK_grouped-by-sector	FK_AntennaModule_REL_FK_grouped-by-sector	CONSTRAINT
FK_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_REL_FK_managed-by-managedElementttttttttttttttttttttttttttttttttttttttt	FK_C5EB2FEB41FDD27A7CED04A3FD665B4BDEF994F5	CONSTRAINT
REL_FK_used-by-nrCellDu	REL_FK_used-by-nrCellDu	COLUMN
REL_FK_comprised-by-cloudNativeSystem	REL_FK_comprised-by-cloudNativeSystem	COLUMN
FK_GNBDUFunction_REL_FK_managed-by-managedElement	FK_GNBDUFunction_REL_FK_managed-by-managedElement	CONSTRAINT
PK_LTESectorCarrier_id	PK_LTESectorCarrier_id	CONSTRAINT
PK_AntennaCapability_id	PK_AntennaCapability_id	CONSTRAINT
PK_CloudNativeSystem_id	PK_CloudNativeSystem_id	CONSTRAINT
FK_TESTENTITYA_PROVIDES_TESTENTITYB_aSide_TestEntityA	FK_TESTENTITYA_PROVIDES_TESTENTITYB_aSide_TestEntityA	CONSTRAINT
geo-location	geo-location	COLUMN
REL_FK_grouped-by-sector	REL_FK_grouped-by-sector	COLUMN
FK_ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE_aSide_AntennaCapability	FK_03713853A2B7ACDC198858CAFBFF355026FEA0B3	CONSTRAINT
FK_ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE_bSide_AntennaModule	FK_5059CE8D2FEE5A1FAD9E06F4FAAFC148BAEA70E3	CONSTRAINT
REL_FK_deployed-as-cloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	REL_FK_26958E3A529C4C8B68A29FDA906F8CD290F66078	COLUMN
id	id	COLUMN
gNBId	gNBId	COLUMN
REL_ID_MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	REL_ID_MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	COLUMN
PK_NRCellDU_id	PK_NRCellDU_id	CONSTRAINT
EUtranCell	EUtranCell	TABLE
PK_Site_id	PK_Site_id	CONSTRAINT
REL_FK_installed-at-site	REL_FK_installed-at-site	COLUMN
REL_FK_used-by-testEntityA	REL_FK_used-by-testEntityA	COLUMN
FK_AntennaCapability_REL_FK_used-by-lteSectorCarrier	FK_AntennaCapability_REL_FK_used-by-lteSectorCarrier	CONSTRAINT
aSide_AntennaCapability	aSide_AntennaCapability	COLUMN
nRTAC	nRTAC	COLUMN
earfcndl	earfcndl	COLUMN
FK_NodeCluster_REL_FK_located-at-cloudSite	FK_NodeCluster_REL_FK_located-at-cloudSite	CONSTRAINT
aSide_GNBDUFunction	aSide_GNBDUFunction	COLUMN
Namespace	Namespace	TABLE
FK_AntennaModule_REL_FK_installed-at-site	FK_AntennaModule_REL_FK_installed-at-site	CONSTRAINT
earfcnul	earfcnul	COLUMN
PK_TestEntityB_id	PK_TestEntityB_id	CONSTRAINT
FK_TESTENTITYA_GROUPS_TESTENTITYB_aSide_TestEntityA	FK_TESTENTITYA_GROUPS_TESTENTITYB_aSide_TestEntityA	CONSTRAINT
fdnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	3786A6CA64C9422F9E7FC35B7B039F345BBDDA65	COLUMN
UNIQUE_ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt_REL_ID_MANAGEDELEMENTTTTTTTTTTT_DEPLOYED_AS_CLOUDNATIVESYSTEMMMMMMMMMMM	UNIQUE_9A721779BB5547778B9258ACD73261B9AABFF302	CONSTRAINT
REL_FK_deployed-on-namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	REL_FK_8C98B70070BBD11F90F192DDA3ECF6302390E956	COLUMN
FK_NRSectorCarrier_REL_FK_provided-by-gnbduFunction	FK_NRSectorCarrier_REL_FK_provided-by-gnbduFunction	CONSTRAINT
PK_GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_id	PK_GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_id	CONSTRAINT
cmId	cmId	COLUMN
aSide_TestEntityA	aSide_TestEntityA	COLUMN
type	type	COLUMN
nCI	nCI	COLUMN
ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE	ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE	TABLE
REL_ID_TESTENTITYA_USES_TESTENTITYB	REL_ID_TESTENTITYA_USES_TESTENTITYB	COLUMN
NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU	50AC08AB775076E74FC4891954F1D99D3D293ACC	TABLE
REL_ID_MANAGEDELEMENTTTTTTTTTTT_DEPLOYED_AS_CLOUDNATIVESYSTEMMMMMMMMMMM	REL_ID_B7945BFD83380F3E12CF99F2B0F838F364027F92	COLUMN
REL_ID_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	REL_ID_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
FK_NRCellDU_REL_FK_grouped-by-sector	FK_NRCellDU_REL_FK_grouped-by-sector	CONSTRAINT
FK_CloudNativeApplication_REL_FK_realised-managedElement	FK_CloudNativeApplication_REL_FK_realised-managedElement	CONSTRAINT
TESTENTITYA_GROUPS_TESTENTITYB	TESTENTITYA_GROUPS_TESTENTITYB	TABLE
PK_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_id	PK_079D5D67E043B09F9C7CD4F6EA1DB12688D43F69	CONSTRAINT
UNIQUE_LTESectorCarrier_REL_ID_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	UNIQUE_B9770D6C26DDA0173DB9690F6E3B42C111AF26E9	CONSTRAINT
duplexType	duplexType	COLUMN
AntennaModule	AntennaModule	TABLE
LTESectorCarrier	LTESectorCarrier	TABLE
REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	REL_ID_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
FK_LTESectorCarrier_REL_FK_used-antennaCapability	FK_LTESectorCarrier_REL_FK_used-antennaCapability	CONSTRAINT
REL_FK_managed-by-managedElement	REL_FK_managed-by-managedElement	COLUMN
UNIQUE_NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU_REL_ID_GNBDUFUNCTIONNNNNNNNNNNNNNUUU_PROVIDES_NRCELLDUUUUUUUUUUUUUUUUUU	UNIQUE_4E6028C8AF5DB6D082B612C5CBB5B32A943C0AAD	CONSTRAINT
fdn	fdn	COLUMN
dUpLMNId	dUpLMNId	COLUMN
UNIQUE_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_REL_ID_MANAGEDELEMENTTTTTTTTTTTTTTT_MANAGES_GNBDUFUNCTIONNNNNNNNNNNNNNN	UNIQUE_176E72F1225D7EEFC222D87B6EC4D66DD968BD13	CONSTRAINT
REL_ID_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_ID_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_ID_SECTOR_GROUPS_EUTRANCELL	REL_ID_SECTOR_GROUPS_EUTRANCELL	COLUMN
Site	Site	TABLE
REL_ID_SECTOR_GROUPS_NRCELLDU	REL_ID_SECTOR_GROUPS_NRCELLDU	COLUMN
UNIQUE_NRCellDU_REL_ID_SECTOR_GROUPS_NRCELLDU	UNIQUE_NRCellDU_REL_ID_SECTOR_GROUPS_NRCELLDU	CONSTRAINT
arfcnUL	arfcnUL	COLUMN
PK_GNBDUFunction_id	PK_GNBDUFunction_id	CONSTRAINT
Namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	78682DB1FFA2533BA45F8E4FAA5596E1A98479FC	TABLE
FK_ENodeBFunction_REL_FK_realised-by-physicalNetworkAppliance	FK_ENodeBFunction_REL_FK_realised-by-physicalNetworkAppliance	CONSTRAINT
FK_GNBCUCPFunction_REL_FK_managed-by-managedElement	FK_GNBCUCPFunction_REL_FK_managed-by-managedElement	CONSTRAINT
REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_ID_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
nRFqBands	nRFqBands	COLUMN
CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	003B7CAE0FA8C3C54BE1BAD8BB9A50985A2EA03F	TABLE
tac	tac	COLUMN
arfcnDL	arfcnDL	COLUMN
REL_ID_NAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_ID_NAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
bSide_CloudNativeApplication	bSide_CloudNativeApplication	COLUMN
PK_CloudSite_id	PK_CloudSite_id	CONSTRAINT
CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	25978231183BE3B9ADD7DBE6C77F5E59696CDE5F	TABLE
earfcn	earfcn	COLUMN
GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN	AC201B3A42917A9A983A1E3683B67C38C50630FC	TABLE
REL_ID_CLOUDNATIVEAPPLICATIONNNNNNNNNNN_DEPLOYED_ON_NAMESPACEEEEEEEEEEE	REL_ID_AFBF10D23507AD3B6408947D2A9AF8465BA7B08C	COLUMN
sectorId	sectorId	COLUMN
FK_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn_REL_FK_realised-managedElementttttttttttttttttttttttttttttttttttttttttt	FK_899FCB466B0BBCC040E945A3E746F5DE53CCCB29	CONSTRAINT
REL_ID_NODECLUSTER_LOCATED_AT_CLOUDSITE	REL_ID_NODECLUSTER_LOCATED_AT_CLOUDSITE	COLUMN
TESTENTITYA_PROVIDES_TESTENTITYB	TESTENTITYA_PROVIDES_TESTENTITYB	TABLE
REL_ID_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	REL_ID_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	COLUMN
GNBCUUPFunction	GNBCUUPFunction	TABLE
REL_FK_realised-managedElement	REL_FK_realised-managedElement	COLUMN
UNIQUE_AntennaModule_REL_ID_SECTOR_GROUPS_ANTENNAMODULE	UNIQUE_AntennaModule_REL_ID_SECTOR_GROUPS_ANTENNAMODULE	CONSTRAINT
UNIQUE_NRSectorCarrier_REL_ID_NRCELLDU_USES_NRSECTORCARRIER	UNIQUE_NRSectorCarrier_REL_ID_NRCELLDU_USES_NRSECTORCARRIER	CONSTRAINT
bSide_TestEntityB	bSide_TestEntityB	COLUMN
REL_ID_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_ID_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
totalTilt	totalTilt	COLUMN
antennaBeamWidth	antennaBeamWidth	COLUMN
FK_ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt_REL_FK_deployed-as-cloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	FK_9C091709D40D51DEE4DC87A44695F6EBA2E965DE	CONSTRAINT
gNBIdLength	gNBIdLength	COLUMN
UNIQUE_ENodeBFunction_REL_ID_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	UNIQUE_F33037EE8037D0606D15FFB45EE8A27FD6DE30EE	CONSTRAINT
FK_NRCellDU_REL_FK_provided-by-gnbduFunction	FK_NRCellDU_REL_FK_provided-by-gnbduFunction	CONSTRAINT
UNIQUE_GNBCUCPFunction_REL_ID_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	UNIQUE_249F73FF1F4316A56DEF4424FA43C2064FFBE4DD	CONSTRAINT
FK_TESTENTITYA_GROUPS_TESTENTITYB_bSide_TestEntityB	FK_TESTENTITYA_GROUPS_TESTENTITYB_bSide_TestEntityB	CONSTRAINT
cellLocalIdddddddddddddddddddddddddddddddddddddddddddddddddddddd	020335B0F627C169E24167748C38FE756FB34AE2	COLUMN
REL_FK_deployed-managedElement	REL_FK_deployed-managedElement	COLUMN
FK_CloudNativeApplication_REL_FK_comprised-by-cloudNativeSystem	FK_CloudNativeApplication_REL_FK_comprised-by-cloudNativeSystem	CONSTRAINT
pLMNId	pLMNId	COLUMN
PK_GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_id	PK_GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION_id	CONSTRAINT
UNIQUE_CloudNativeApplication_REL_ID_MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	UNIQUE_DAB3C12479849DA6C222B812C2A8CD1535D0C186	CONSTRAINT
essScLocalId	essScLocalId	COLUMN
REL_FK_provided-by-gnbduFunction	REL_FK_provided-by-gnbduFunction	COLUMN
UNIQUE_LTESectorCarrier_REL_ID_LTESECTORCARRIER_USES_ANTENNACAPABILITY	UNIQUE_5D5FEB6B4B09D5D42A589753C684994CD0B96E88	CONSTRAINT
sectorCarrierType	sectorCarrierType	COLUMN
UNIQUE_PhysicalNetworkAppliance_REL_ID_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	UNIQUE_A9110A77514C472452AC80053A8010FBAF481AD0	CONSTRAINT
GNBDUFunction	GNBDUFunction	TABLE
mechanicalAntennaTilt	mechanicalAntennaTilt	COLUMN
UNIQUE_CloudNativeApplication_REL_ID_CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	UNIQUE_F2774BC0806E925ADA0B1CAA50B5A41DFB7BF79A	CONSTRAINT
UNIQUE_NRCellCU_REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	UNIQUE_NRCellCU_REL_ID_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	CONSTRAINT
plmnId	plmnId	COLUMN
PK_TestEntityA_id	PK_TestEntityA_id	CONSTRAINT
FK_CloudNativeApplication_REL_FK_deployed-on-namespace	FK_CloudNativeApplication_REL_FK_deployed-on-namespace	CONSTRAINT
gNBDUId	gNBDUId	COLUMN
CD_sourceIds	CD_sourceIds	COLUMN
CD_classifiers	CD_classifiers	COLUMN
CD_decorators	CD_decorators	COLUMN
PK_TESTENTITYA_GROUPS_TESTENTITYB_id	PK_TESTENTITYA_GROUPS_TESTENTITYB_id	CONSTRAINT
REL_ID_SECTOR_GROUPS_ANTENNAMODULE	REL_ID_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	B69D3E92CA22CE61B921AE61BD3CF031791CF714	TABLE
ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE	B9B76FD20FF23B2A41C82CB5EDF6FA25B6AC2BC6	TABLE
PK_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee_id	PK_2673E8FB17E57FD56D5E897DA13412B9165B90AA	CONSTRAINT
PK_ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE_id	PK_E3722EAF721B41FACDCF065D2017267CE2C90BED	CONSTRAINT
FK_ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE_aSide_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	FK_00AE9B9921E38ACFEE934695787FA8794817A6ED	CONSTRAINT
FK_ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE_bSide_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	FK_68EED3C83D2C93559F7A61E7D05B4363CDF1DB8F	CONSTRAINT
ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE	C35AE10CFF62DEDC5E3FC3C40E47373B10800818	TABLE
PK_ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE_id	PK_F03D1DD176CD75707BD6217EF652705007C0F272	CONSTRAINT
FK_ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE_aSide_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	FK_E19DA712FB443E0212578638DF62281CFD6BFA7A	CONSTRAINT
FK_ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE_bSide_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	FK_7772B14325D2340707AF687BF0F70F32914F935D	CONSTRAINT
aSide_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	aSide_2A2D3374BF907674FA1905478E30ACB8882DC03C	COLUMN
bSide_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	bSide_EE6DD4A2CFD743779BBCBFC18FC296EF6D72EB1E	COLUMN
REL_CD_sourceIds_MANAGEDELEMENTTTTTTTTTTT_DEPLOYED_AS_CLOUDNATIVESYSTEMMMMMMMMMMM	REL_CD_B7945BFD83380F3E12CF99F2B0F838F364027F92	COLUMN
REL_CD_sourceIds_MANAGEDELEMENTTTTTTTTTTTTTTT_MANAGES_GNBDUFUNCTIONNNNNNNNNNNNNNN	REL_CD_45E8E8693B1B8928376EAA8995D08AA7B1E483BD	COLUMN
REL_CD_sourceIds_MANAGEDELEMENTTTTTTTTT_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNN	REL_CD_CEAD4CCE5250E7D3C64801C8FDDC21F1D87BEC0C	COLUMN
REL_CD_sourceIds_GNBDUFUNCTIONNNNNNNNNNNNNNUUU_PROVIDES_NRCELLDUUUUUUUUUUUUUUUUUU	REL_CD_040FC8B06B420BA5708AF4798102D1E65FB4DC61	COLUMN
REL_CD_sourceIds_SECTOR_GROUPS_ANTENNAMODULE	REL_CD_sourceIds_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_CD_sourceIds_ANTENNAMODULE_INSTALLED_AT_SITE	REL_CD_sourceIds_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_CD_sourceIds_ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	REL_CD_556274C475BA56EE4DEFB691F9037C869223A124	COLUMN
REL_CD_sourceIds_SECTOR_GROUPS_EUTRANCELL	REL_CD_sourceIds_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_CD_sourceIds_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_CD_sourceIds_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_sourceIds_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_sourceIds_EUTRANCELL_USES_LTESECTORCARRIER	REL_CD_sourceIds_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	REL_CD_sourceIds_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	COLUMN
REL_CD_sourceIds_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_CD_sourceIds_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_CD_sourceIds_SECTOR_GROUPS_NRCELLDU	REL_CD_sourceIds_SECTOR_GROUPS_NRCELLDU	COLUMN
REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_CD_sourceIds_NRCELLDU_USES_NRSECTORCARRIER	REL_CD_sourceIds_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_CD_sourceIds_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_CD_sourceIds_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_sourceIds_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_sourceIds_NAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_CD_sourceIds_NAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_CD_sourceIds_NODECLUSTER_LOCATED_AT_CLOUDSITE	REL_CD_sourceIds_NODECLUSTER_LOCATED_AT_CLOUDSITE	COLUMN
REL_CD_sourceIds_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	REL_CD_sourceIds_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	REL_CD_8F561B5FB3CF928F2C4046CE1A7C37A8FE06B9A7	COLUMN
REL_CD_sourceIds_CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	REL_CD_39262797D0119611B8459ECF46754A074711E485	COLUMN
REL_CD_sourceIds_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	REL_CD_sourceIds_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	COLUMN
REL_CD_sourceIds_CLOUDNATIVEAPPLICATIONNNNNNNNNNN_DEPLOYED_ON_NAMESPACEEEEEEEEEEE	REL_CD_F7E43E0D0F76D6EFED9AB684B84A69E177F591D2	COLUMN
REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_CD_sourceIds_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_CD_sourceIds_TESTENTITYA_USES_TESTENTITYB	REL_CD_sourceIds_TESTENTITYA_USES_TESTENTITYB	COLUMN
REL_CD_classifiers_MANAGEDELEMENTTTTTTTTTTT_DEPLOYED_AS_CLOUDNATIVESYSTEMMMMMMMMMMM	REL_CD_BF4AAC1A1A910D1182505CABF55BAAE822B2BE59	COLUMN
REL_CD_classifiers_MANAGEDELEMENTTTTTTTTTTTTTTT_MANAGES_GNBDUFUNCTIONNNNNNNNNNNNNNN	REL_CD_7E9F11EFBF8974D7C7DAB02E181A0BE4148091C6	COLUMN
REL_CD_classifiers_MANAGEDELEMENTTTTTTTTT_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNN	REL_CD_744530EF4EB1D281D23ADB3DB4CC926DFBE7A60D	COLUMN
REL_CD_classifiers_GNBDUFUNCTIONNNNNNNNNNNNNNUUU_PROVIDES_NRCELLDUUUUUUUUUUUUUUUUUU	REL_CD_66AEF506899F14F936A2F48F9444E2202F5D43F9	COLUMN
REL_CD_classifiers_SECTOR_GROUPS_ANTENNAMODULE	REL_CD_classifiers_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_CD_classifiers_ANTENNAMODULE_INSTALLED_AT_SITE	REL_CD_classifiers_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_CD_classifiers_ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	REL_CD_C6C6D295144A637110DA4E6121BE13F30EFDBEBF	COLUMN
REL_CD_classifiers_SECTOR_GROUPS_EUTRANCELL	REL_CD_classifiers_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_CD_classifiers_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_CD_classifiers_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_classifiers_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_classifiers_EUTRANCELL_USES_LTESECTORCARRIER	REL_CD_classifiers_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	REL_CD_classifiers_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	COLUMN
REL_CD_classifiers_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_CD_classifiers_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_CD_classifiers_SECTOR_GROUPS_NRCELLDU	REL_CD_classifiers_SECTOR_GROUPS_NRCELLDU	COLUMN
REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_CD_classifiers_NRCELLDU_USES_NRSECTORCARRIER	REL_CD_classifiers_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_CD_classifiers_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_CD_classifiers_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_classifiers_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_classifiers_NAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_CD_classifiers_NAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_CD_classifiers_NODECLUSTER_LOCATED_AT_CLOUDSITE	REL_CD_classifiers_NODECLUSTER_LOCATED_AT_CLOUDSITE	COLUMN
REL_CD_classifiers_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	REL_CD_classifiers_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	REL_CD_CCEBD4C63B90BD1764CB5A15C282D6CDBDF0B1F2	COLUMN
REL_CD_classifiers_CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	REL_CD_026A1F92A7D93728916AF3DCC2C013FB79E29D07	COLUMN
REL_CD_classifiers_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	REL_CD_classifiers_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	COLUMN
REL_CD_classifiers_CLOUDNATIVEAPPLICATIONNNNNNNNNNN_DEPLOYED_ON_NAMESPACEEEEEEEEEEE	REL_CD_C4349BB0F0292A3CE7E456E3A4C40C86DD6B15DF	COLUMN
REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_CD_classifiers_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_CD_classifiers_TESTENTITYA_USES_TESTENTITYB	REL_CD_classifiers_TESTENTITYA_USES_TESTENTITYB	COLUMN
REL_CD_decorators_MANAGEDELEMENTTTTTTTTTTT_DEPLOYED_AS_CLOUDNATIVESYSTEMMMMMMMMMMM	REL_CD_AE82DD80D666B52D79A314F8B4EE9B046830D009	COLUMN
REL_CD_decorators_MANAGEDELEMENTTTTTTTTTTTTTTT_MANAGES_GNBDUFUNCTIONNNNNNNNNNNNNNN	REL_CD_FFF7E036187A7605BFC714483D2E60FD2FF6560B	COLUMN
REL_CD_decorators_MANAGEDELEMENTTTTTTTTT_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNN	REL_CD_4D1F8113C3096B383582A7A04E68974983B4259E	COLUMN
REL_CD_decorators_GNBDUFUNCTIONNNNNNNNNNNNNNUUU_PROVIDES_NRCELLDUUUUUUUUUUUUUUUUUU	REL_CD_022F8280C0739C614C5F3293E7D8D349A8A10E30	COLUMN
REL_CD_decorators_SECTOR_GROUPS_ANTENNAMODULE	REL_CD_decorators_SECTOR_GROUPS_ANTENNAMODULE	COLUMN
REL_CD_decorators_ANTENNAMODULE_INSTALLED_AT_SITE	REL_CD_decorators_ANTENNAMODULE_INSTALLED_AT_SITE	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	COLUMN
REL_CD_decorators_ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	REL_CD_B369805A0EB24F7C841B0E541A015F85AE2A23B1	COLUMN
REL_CD_decorators_SECTOR_GROUPS_EUTRANCELL	REL_CD_decorators_SECTOR_GROUPS_EUTRANCELL	COLUMN
REL_CD_decorators_ENODEBFUNCTION_PROVIDES_EUTRANCELL	REL_CD_decorators_ENODEBFUNCTION_PROVIDES_EUTRANCELL	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	COLUMN
REL_CD_decorators_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	REL_CD_decorators_ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	COLUMN
REL_CD_decorators_LTESECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_decorators_LTESECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_decorators_EUTRANCELL_USES_LTESECTORCARRIER	REL_CD_decorators_EUTRANCELL_USES_LTESECTORCARRIER	COLUMN
REL_CD_decorators_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	REL_CD_decorators_MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	COLUMN
REL_CD_decorators_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	REL_CD_decorators_GNBCUCPFUNCTION_PROVIDES_NRCELLCU	COLUMN
REL_CD_decorators_SECTOR_GROUPS_NRCELLDU	REL_CD_decorators_SECTOR_GROUPS_NRCELLDU	COLUMN
REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRCELLDU	REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRCELLDU	COLUMN
REL_CD_decorators_NRCELLDU_USES_NRSECTORCARRIER	REL_CD_decorators_NRCELLDU_USES_NRSECTORCARRIER	COLUMN
REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	REL_CD_decorators_GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	COLUMN
REL_CD_decorators_NRSECTORCARRIER_USES_ANTENNACAPABILITY	REL_CD_decorators_NRSECTORCARRIER_USES_ANTENNACAPABILITY	COLUMN
REL_CD_decorators_NAMESPACE_DEPLOYED_ON_NODECLUSTER	REL_CD_decorators_NAMESPACE_DEPLOYED_ON_NODECLUSTER	COLUMN
REL_CD_decorators_NODECLUSTER_LOCATED_AT_CLOUDSITE	REL_CD_decorators_NODECLUSTER_LOCATED_AT_CLOUDSITE	COLUMN
REL_CD_decorators_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	REL_CD_decorators_PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	COLUMN
REL_CD_decorators_MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	REL_CD_21E2495C31F0DBF735976C90F4CD10D1215190E1	COLUMN
REL_CD_decorators_CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	REL_CD_D32E90288E1982363B2BD8DA9D2E90AA16F71575	COLUMN
REL_CD_decorators_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	REL_CD_decorators_CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	COLUMN
REL_CD_decorators_CLOUDNATIVEAPPLICATIONNNNNNNNNNN_DEPLOYED_ON_NAMESPACEEEEEEEEEEE	REL_CD_8AD499BB116F3213C079F643D4B3532035D092D2	COLUMN
REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	REL_CD_decorators_MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	COLUMN
REL_CD_decorators_TESTENTITYA_USES_TESTENTITYB	REL_CD_decorators_TESTENTITYA_USES_TESTENTITYB	COLUMN
o-ran-smo-teiv-ran-oam_ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	fa2dceaf53e045c136ce9db9bc5faae65a29fa4d	TABLE
o-ran-smo-teiv-ran-oam_ManagedElement	o-ran-smo-teiv-ran-oam_ManagedElement	TABLE
o-ran-smo-teiv-ran-cloud_NodeCluster	o-ran-smo-teiv-ran-cloud_NodeCluster	TABLE
o-ran-smo-teiv-ran-cloud_CloudNativeSystem	163276fa439cdfccabb80f7acacb6fa638e8d314	TABLE
o-ran-smo-teiv-ran-cloud_CloudNativeApplication	e01fcb87ad2c34ce66c34420255e25aaca270e5e	TABLE
o-ran-smo-teiv-ran-cloud_CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	ef701af8e1445ed5d377664ba1d3d1c645e31639	TABLE
o-ran-smo-teiv-ran-cloud_CloudSite	o-ran-smo-teiv-ran-cloud_CloudSite	TABLE
o-ran-smo-teiv-ran-cloud_Namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	bc563e4310b0538e6bdd35f52684160af5b23671	TABLE
o-ran-smo-teiv-ran-cloud_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	5f8facd51b2bbddc90d9dee9be697907441892d0	TABLE
o-ran-smo-teiv-ran-cloud_Namespace	o-ran-smo-teiv-ran-cloud_Namespace	TABLE
o-ran-smo-teiv-ran-logical-to-equipment_Sector	22174a23af5d5a96143c83ddfa78654df0acb697	TABLE
o-ran-smo-teiv-ran-logical_GNBCUUPFunction	8fe520ccd54b8f72ef7b2d3061264ddc2481e4eb	TABLE
o-ran-smo-teiv-ran-logical_ENodeBFunction	o-ran-smo-teiv-ran-logical_ENodeBFunction	TABLE
o-ran-smo-teiv-ran-logical_NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU	300672c8a708d6af0b9af2f9accdff5e6e005721	TABLE
o-ran-smo-teiv-ran-logical_NRCellDU	o-ran-smo-teiv-ran-logical_NRCellDU	TABLE
o-ran-smo-teiv-ran-logical_LTESectorCarrier	c88307168935f02fdecc084ea5040bb9db16c701	TABLE
o-ran-smo-teiv-ran-logical_GNBDUFunction	o-ran-smo-teiv-ran-logical_GNBDUFunction	TABLE
o-ran-smo-teiv-ran-logical_NRCellCU	o-ran-smo-teiv-ran-logical_NRCellCU	TABLE
o-ran-smo-teiv-ran-logical_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	3fdb9cd7557edf559a0e4de88df220e7545884b5	TABLE
o-ran-smo-teiv-ran-equipment_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	341622dca4e0350289717b52df5883edc3fa0280	TABLE
o-ran-smo-teiv-ran-logical_EUtranCell	o-ran-smo-teiv-ran-logical_EUtranCell	TABLE
o-ran-smo-teiv-ran-logical_GNBCUCPFunction	c4a425179d3089b5288fdf059079d0ea26977f0f	TABLE
o-ran-smo-teiv-ran-logical_NRSectorCarrier	39a335dca201ef99ae06f4ffd1908b534f8c6c39	TABLE
o-ran-smo-teiv-ran-logical_AntennaCapability	88f1bd76c7a935fb505cf235e6819f46c55ec98a	TABLE
o-ran-smo-teiv-ran-logical_TestEntityB	o-ran-smo-teiv-ran-logical_TestEntityB	TABLE
o-ran-smo-teiv-ran-logical_TestEntityA	o-ran-smo-teiv-ran-logical_TestEntityA	TABLE
o-ran-smo-teiv-ran-equipment_Site	o-ran-smo-teiv-ran-equipment_Site	TABLE
o-ran-smo-teiv-ran-equipment_AntennaModule	f8caf5ebe876c3001d67efe06e4d83abf0babe31	TABLE
o-ran-smo-teiv-ran-equipment_PhysicalNetworkAppliance	57a20807ab3f39c86b0b5bf9a819e0881353fa1e	TABLE
o-ran-smo-teiv-ran-logical-to-cloud_GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	70a4a84bca01ea022ab24d8cb82422c572922675	TABLE
o-ran-smo-teiv-ran-logical-to-equipment_ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE	5b8a47d4a8297a0a1d31e091af06e26d25ef6caf	TABLE
o-ran-smo-teiv-ran-logical-to-cloud_GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN	f86057a8762a50b1c7fb07af9d5c001bffaefd15	TABLE
o-ran-smo-teiv-ran-logical_TESTENTITYA_PROVIDES_TESTENTITYB	73936e503f137d82d1422c0f08c66c7ff8b90209	TABLE
o-ran-smo-teiv-ran-logical_TESTENTITYA_GROUPS_TESTENTITYB	70003c8082751e1832e7bc5c0d83db6d22c4fcdc	TABLE
o-ran-smo-teiv-ran-equipment_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE	5123d0adfb7b4a04e7f2e5e1783f476ed5cf76f6	TABLE
o-ran-smo-teiv-ran-equipment_ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE	cd39d44beed963d50df42cd301e63d288f911c97	TABLE
o-ran-smo-teiv-ran-equipment_ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE	c6f3a3396e9165e886da928c5fe1382fb20dc850	TABLE
o-ran-smo-teiv-ran-logical-to-cloud_GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	7cd7062ea24531b2f48e4f2fdc51eaf0b82f88c7	TABLE
o-ran-smo-teiv-ran-logical-to-cloud_GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	10484f157f490eb5b27e40dbfaf4d5f2be17c57c	TABLE
\.

COPY ties_model.module_reference("name","revision", "namespace", "domain", "includedModules", "content") FROM stdin;
o-ran-smo-teiv-ran-logical-to-cloud	2023-10-24	urn:rdns:o-ran:-ran-logical-to-cloud	RAN_LOGICAL_TO_CLOUD	["o-ran-smo-teiv-ran-logical", "o-ran-smo-teiv-ran-cloud"]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tbG9naWNhbC10by1jbG91ZCB7DQogICAgeWFuZy12ZXJzaW9uIDEuMTsNCiAgICBuYW1lc3BhY2UgInVybjpyZG5zOmNvbTplcmljc3Nvbjp0b3BpbnZtb2RlbDplcmljc3Nvbi10b3BvbG9neWFuZGludmVudG9yeS1yYW4tbG9naWNhbC10by1jbG91ZCI7DQogICAgcHJlZml4IHJhbmxvZ3RvY2xvdWRlcml0b3BpbnY7DQoNCiAgICBpbXBvcnQgZXJpY3Nzb24teWFuZy1leHRlbnNpb25zIHtwcmVmaXggeWV4dGU7IH0NCg0KICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktY29tbW9uLXlhbmctdHlwZXMge3ByZWZpeCB0eXBlc2VyaXRvcGludjsgfQ0KDQogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1jb21tb24teWFuZy1leHRlbnNpb25zIHtwcmVmaXggeWV4dGVyaXRvcGludjsgfQ0KDQogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tbG9naWNhbCB7cHJlZml4IHJhbmxvZ2VyaXRvcGludjsgfQ0KDQogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tY2xvdWQge3ByZWZpeCByYW5jbG91ZGVyaXRvcGludjsgfQ0KDQogICAgb3JnYW5pemF0aW9uICJFcmljc3NvbiBBQiI7DQogICAgY29udGFjdCAiRXJpY3Nzb24gZmlyc3QgbGluZSBzdXBwb3J0IHZpYSBlbWFpbCI7DQogICAgZGVzY3JpcHRpb24NCiAgICAiUkFOIExvZ2ljYWwgdG8gUkFOIENsb3VkIHRvcG9sb2d5IG1vZGVsLg0KDQogICAgQ29weXJpZ2h0IChjKSAyMDIzIEVyaWNzc29uIEFCLiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KDQogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgUkFOIExvZ2ljYWwgdG8gUkFOIENsb3VkIHRvcG9sb2d5IHJlbGF0aW9ucyI7DQoNCiAgICByZXZpc2lvbiAiMjAyMy0xMC0yNCIgew0KICAgICAgICBkZXNjcmlwdGlvbg0KICAgICAgICAiSW5pdGlhbCByZXZpc2lvbi4iOw0KICAgICAgICB5ZXh0ZTp2ZXJzaW9uICIwIjsNCiAgICAgICAgeWV4dGU6cmVsZWFzZSAiMSI7DQogICAgICAgIHlleHRlOmNvcnJlY3Rpb24gIjEiOw0KICAgIH0NCg0KICAgIHlleHRlcml0b3BpbnY6ZG9tYWluIFJBTl9MT0dJQ0FMX1RPX0NMT1VEOw0KDQogICAgeWV4dGVyaXRvcGludjpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgR05CRFVGVU5DVElPTl9SRUFMSVNFRF9CWV9DTE9VRE5BVElWRUFQUExJQ0FUSU9OIHsgLy8gMC4ubiB0byAwLi5tDQoNCiAgICAgICAgdXNlcyB0eXBlc2VyaXRvcGludjpUb3BfR3JwX1R5cGU7DQogICAgICAgIGtleSBpZDsNCg0KICAgICAgICBsZWFmLWxpc3QgcmVhbGlzZWQtYnktY2xvdWROYXRpdmVBcHBsaWNhdGlvbiB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLURVIEZ1bmN0aW9uIHJlYWxpc2VkIGJ5DQogICAgICAgICAgICAgICAgICAgICAgICAgQ2xvdWQgTmF0aXZlIEFwcGxpY2F0aW9uLiI7DQogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmFTaWRlIHJhbmxvZ2VyaXRvcGludjpHTkJEVUZ1bmN0aW9uOw0KICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOw0KICAgICAgICB9DQoNCiAgICAgICAgbGVhZi1saXN0IHJlYWxpc2VkLWduYmR1RnVuY3Rpb24gew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gIkNsb3VkIE5hdGl2ZSBBcHBsaWNhdGlvbiByZWFsaXNlcyBnTm9kZUJEVSBGdW5jdGlvbi4iOw0KICAgICAgICAgICAgeWV4dGVyaXRvcGludjpiU2lkZSByYW5jbG91ZGVyaXRvcGludjpDbG91ZE5hdGl2ZUFwcGxpY2F0aW9uOw0KICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgeWV4dGVyaXRvcGludjpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgR05CQ1VDUEZVTkNUSU9OX1JFQUxJU0VEX0JZX0NMT1VETkFUSVZFQVBQTElDQVRJT04geyAvLyAwLi5uIHRvIDAuLm0NCg0KICAgICAgICB1c2VzIHR5cGVzZXJpdG9waW52OlRvcF9HcnBfVHlwZTsNCiAgICAgICAga2V5IGlkOw0KDQogICAgICAgIGxlYWYtbGlzdCByZWFsaXNlZC1ieS1jbG91ZE5hdGl2ZUFwcGxpY2F0aW9uIHsNCiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJnTm9kZUItQ1UtQ1AgRnVuY3Rpb24gcmVhbGlzZWQgYnkNCiAgICAgICAgICAgICAgICAgICAgICAgIENsb3VkIE5hdGl2ZSBBcHBsaWNhdGlvbi4uIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YVNpZGUgcmFubG9nZXJpdG9waW52OkdOQkNVQ1BGdW5jdGlvbjsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgfQ0KDQogICAgICAgIGxlYWYtbGlzdCByZWFsaXNlZC1nbmJjdWNwRnVuY3Rpb24gew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gIkNsb3VkIE5hdGl2ZSBBcHBsaWNhdGlvbiByZWFsaXNlcw0KICAgICAgICAgICAgICAgICAgICAgICAgZ05vZGVCQ1VDUCBGdW5jdGlvbi4uIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YlNpZGUgcmFuY2xvdWRlcml0b3BpbnY6Q2xvdWROYXRpdmVBcHBsaWNhdGlvbjsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHlleHRlcml0b3BpbnY6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIEdOQkNVVVBGVU5DVElPTl9SRUFMSVNFRF9CWV9DTE9VRE5BVElWRUFQUExJQ0FUSU9OIHsgLy8gMC4ubiB0byAwLi5tDQoNCiAgICAgICAgdXNlcyB0eXBlc2VyaXRvcGludjpUb3BfR3JwX1R5cGU7DQogICAgICAgIGtleSBpZDsNCg0KICAgICAgICBsZWFmLWxpc3QgcmVhbGlzZWQtYnktY2xvdWROYXRpdmVBcHBsaWNhdGlvbiB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLUNVLVVQIEZ1bmN0aW9uIHJlYWxpc2VkIGJ5DQogICAgICAgICAgICAgICAgICAgICAgICBDbG91ZCBOYXRpdmUgQXBwbGljYXRpb24uIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YVNpZGUgcmFubG9nZXJpdG9waW52OkdOQkNVVVBGdW5jdGlvbjsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgfQ0KDQogICAgICAgIGxlYWYtbGlzdCByZWFsaXNlZC1nbmJjdXVwRnVuY3Rpb24gew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gIkNsb3VkIE5hdGl2ZSBBcHBsaWNhdGlvbiByZWFsaXNlcw0KICAgICAgICAgICAgICAgICAgICAgICAgZ05vZGVCQ1VVUCBGdW5jdGlvbi4uIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YlNpZGUgcmFuY2xvdWRlcml0b3BpbnY6Q2xvdWROYXRpdmVBcHBsaWNhdGlvbjsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgfQ0KICAgIH0NCn0=
o-ran-smo-teiv-ran-equipment	2023-06-26	urn:rdns:o-ran:o-ran-smo-teiv-ran-equipment	RAN_EQUIPMENT	[]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tZXF1aXBtZW50IHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpyZG5zOmNvbTplcmljc3Nvbjp0b3BpbnZtb2RlbDplcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktcmFuLWVxdWlwbWVudCI7CiAgICBwcmVmaXggcmFuZXF1aXBlcml0b3BpbnY7CgogICAgaW1wb3J0IGVyaWNzc29uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IHlleHRlOyB9CgogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1jb21tb24teWFuZy10eXBlcyB7cHJlZml4IHR5cGVzZXJpdG9waW52OyB9CgogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1jb21tb24teWFuZy1leHRlbnNpb25zIHtwcmVmaXggeWV4dGVyaXRvcGludjsgfQoKCiAgICBpbXBvcnQgaWV0Zi1nZW8tbG9jYXRpb24gewogICAgICAgIHByZWZpeCBnZW87CiAgICAgICAgcmVmZXJlbmNlICJSRkMgOTE3OTogQSBZQU5HIEdyb3VwaW5nIGZvciBHZW9ncmFwaGljIExvY2F0aW9ucyI7CiAgICB9CgogICAgb3JnYW5pemF0aW9uICJFcmljc3NvbiBBQiI7CiAgICBjb250YWN0ICJFcmljc3NvbiBmaXJzdCBsaW5lIHN1cHBvcnQgdmlhIGVtYWlsIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiUkFOIEVxdWlwbWVudCB0b3BvbG9neSBtb2RlbC4KCiAgICBDb3B5cmlnaHQgKGMpIDIwMjMgRXJpY3Nzb24gQUIuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgdG9wb2xvZ3kgZW50aXRpZXMgYW5kIHJlbGF0aW9ucyBpbiB0aGUKICAgIFJBTiBMb2dpY2FsIGRvbWFpbiwgd2hpY2ggcmVwcmVzZW50cyB0aGUgZnVuY3Rpb25hbCBjYXBhYmlsaXR5CiAgICBvZiB0aGUgZGVwbG95ZWQgUkFOIHRoYXQgYXJlIHJlbGV2YW50IHRvIHJBcHBzIHVzZSBjYXNlcy4iOwoKICAgIHJldmlzaW9uICIyMDIzLTEyLTEyIiB7CiAgICAgICAgZGVzY3JpcHRpb24KICAgICAgICAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIHlleHRlOnZlcnNpb24gIjAiOwogICAgICAgIHlleHRlOnJlbGVhc2UgIjIiOwogICAgICAgIHlleHRlOmNvcnJlY3Rpb24gIjAiOwogICAgfQoKICAgIHlleHRlcml0b3BpbnY6ZG9tYWluIFJBTl9FUVVJUE1FTlQ7CgogICAgbGlzdCBBbnRlbm5hTW9kdWxlIHsKICAgICAgICBkZXNjcmlwdGlvbiAiQW4gQW50ZW5uYSBNb2R1bGUgcmVwcmVzZW50cyB0aGUKICAgICAgICAgICAgICAgICAgICBwaHlzaWNhbCBhc3BlY3Qgb2YgYW4gYW50ZW5uYS4iOwoKICAgICAgICB1c2VzIHR5cGVzZXJpdG9waW52OlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGNvbnRhaW5lciBhdHRyaWJ1dGVzIHsKICAgICAgICAgICAgbGVhZiBmZG4gewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIlRoaXMgRnVsbCBEaXN0aW5ndWlzaGVkIE5hbWUgKEZETikgaWRlbnRpZmllcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYW4gaW5zdGFuY2Ugb2YgdGhlIEFudGVubmFTdWJVbml0IE1PLiBJdCBjb250YWlucwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGZ1bGwgcGF0aCBmcm9tIHRoZSBTdWJuZXR3b3JrIHRvIHRoZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgQW50ZW5uYVN1YlVuaXQuIjsKICAgICAgICAgICAgICAgIHR5cGUgdHlwZXNlcml0b3BpbnY6XzNHUFBfRkROX1R5cGU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxlYWYgYW50ZW5uYU1vZGVsTnVtYmVyIHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJWZW5kb3Itc3BlY2lmaWMgYW50ZW5uYSBtb2RlbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRlbnRpZmllci4gVGhpcyBhdHRyaWJ1dGUgaXMgcGFydCBvZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQUlTRyB2MyBBREIgU3RhbmRhcmQgYW5kIGhhcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbm8gb3BlcmF0aW9uYWwgaW1wYWN0LiI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGVhZiBtZWNoYW5pY2FsQW50ZW5uYUJlYXJpbmcgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgYmVhcmluZyBvbiBhbnRlbm5hIHN1YnVuaXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlIGFudGVubmEgdW5pdCBpcyBpbnN0YWxsZWQuIjsKICAgICAgICAgICAgICAgIHR5cGUgdWludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIG1lY2hhbmljYWxBbnRlbm5hVGlsdCB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiVGhlIGZpeGVkIGFudGVubmEgdGlsdCBvZiB0aGUgaW5zdGFsbGF0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmaW5lZCBhcyB0aGUgaW5jbGluYXRpb24gb2YgdGhlIGFudGVubmEKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgcmVzcGVjdCB0byB0aGUgdmVydGljYWwgcGxhbmUuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBJdCBpcyBhIHNpZ25lZCB2YWx1ZS4gUG9zaXRpdmUgaW5kaWNhdGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3dudGlsdCwgYW5kIG5lZ2F0aXZlIGluZGljYXRlcyB1cHRpbHQuIjsKICAgICAgICAgICAgICAgIHR5cGUgdWludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIHBvc2l0aW9uV2l0aGluU2VjdG9yIHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIHVuaXQgcG9zaXRpb24gd2l0aGluIHNlY3Rvci4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgYXR0cmlidXRlIGlzIHBhcnQgb2YgQUlTRyB2MyBBREIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YW5kYXJkIGFuZCBoYXMgbm8gb3BlcmF0aW9uYWwgaW1wYWN0LiI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGVhZiB0b3RhbFRpbHQgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIlRvdGFsIGFudGVubmEgZWxldmF0aW9uIGluY2x1ZGluZyB0aGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbGxlZCB0aWx0IGFuZCB0aGUgdGlsdCBhcHBsaWVkIGJ5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgUmVtb3RlIEVsZWN0cmljYWwgVGlsdCAoUkVUKS4iOwogICAgICAgICAgICAgICAgdHlwZSB1aW50MzI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxlYWYgZWxlY3RyaWNhbEFudGVubmFUaWx0IHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJFbGVjdHJpY2FsbHktY29udHJvbGxlZCB0aWx0IG9mIG1haW4gYmVhbSBtYXhpbXVtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXRoIHJlc3BlY3QgdG8gZGlyZWN0aW9uIG9ydGhvZ29uYWwgdG8gYW50ZW5uYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCBheGlzIChzZWUgM0dQUCBUUyAyNS40NjYpLiBWYWx1ZSBpcyBzaWduZWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWx0IGRvd24gaXMgcG9zaXRpdmUsIHRpbHQgdXAgaXMgbmVnYXRpdmUuIjsKICAgICAgICAgICAgICAgIHR5cGUgdWludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmLWxpc3QgQW50ZW5uYUJlYW1XaWR0aCB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiVGhlIGFuZ3VsYXIgc3BhbiBvZiB0aGUgbWFpbiBsb2JlIG9mIHRoZSBhbnRlbm5hIHJhZGlhdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0dGVybiBpbiB0aGUgaG9yaXpvbnRhbCBwbGFuZS4gTWVhc3VyZWQgaW4gZGVncmVlcy4iOwogICAgICAgICAgICAgICAgdHlwZSB1aW50MzI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGxlYWYgZHVwbGV4VHlwZSB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiSW5kaWNhdG9yIG9mIEVVdHJhbkNlbGwgdHlwZSwgRkREIG9yIFRERCI7CiAgICAgICAgICAgICAgICB0eXBlIGVudW1lcmF0aW9uIHsKICAgICAgICAgICAgICAgICAgICBlbnVtIHR5cGUxIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgMDsKICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gInR5cGUxIjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdXNlcyB0eXBlc2VyaXRvcGludjpTT1VSQ0VfSURTOwogICAgICAgIH0KICAgIH0KCiAgICB5ZXh0ZXJpdG9waW52OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBBTlRFTk5BTU9EVUxFX1VTRVNfQU5URU5OQU1PRFVMRSB7IC8vIFNhbWUgZW50aXR5ICgwLi4xIHRvIDAuLjEpCgogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IHVzZWQtYnktYW50ZW5uYU1vZHVsZSB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIE1vZHVsZSByZWFsaXNlZCBieSBBbnRlbm5hIE1vZHVsZS4iOwogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmFTaWRlIHJhbmVxdWlwZXJpdG9waW52OkFudGVubmFNb2R1bGU7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgIH0KCiAgICAgICAgbGVhZi1saXN0IHVzZWQtYW50ZW5uYU1vZHVsZSB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIE1vZHVsZSByZWFsaXNlcyBBbnRlbm5hIE1vZHVsZS4iOwogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmJTaWRlIHJhbmVxdWlwZXJpdG9waW52OkFudGVubmFNb2R1bGU7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgIH0KICAgIH0KfQ==
o-ran-smo-teiv-ran-oam-to-cloud	2023-10-24	urn:rdns:o-ran:o-ran-smo-teiv-ran-oam-to-cloud	RAN_OAM_TO_CLOUD	["o-ran-smo-teiv-ran-oam", "o-ran-smo-teiv-ran-cloud"]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tb2FtLXRvLWNsb3VkIHsNCiAgICB5YW5nLXZlcnNpb24gMS4xOw0KICAgIG5hbWVzcGFjZSAidXJuOnJkbnM6Y29tOmVyaWNzc29uOnRvcGludm1vZGVsOmVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tb2FtLXRvLWNsb3VkIjsNCiAgICBwcmVmaXggcmFub2FtdG9jbG91ZGVyaXRvcGludjsNCg0KICAgIGltcG9ydCBlcmljc3Nvbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCB5ZXh0ZTsgfQ0KDQogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1jb21tb24teWFuZy10eXBlcyB7cHJlZml4IHR5cGVzZXJpdG9waW52OyB9DQoNCiAgICBpbXBvcnQgZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCB5ZXh0ZXJpdG9waW52OyB9DQoNCiAgICBpbXBvcnQgZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LXJhbi1vYW0ge3ByZWZpeCByYW5vYW1lcml0b3BpbnY7IH0NCg0KICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktcmFuLWNsb3VkIHtwcmVmaXggcmFuY2xvdWRlcml0b3BpbnY7IH0NCg0KICAgIG9yZ2FuaXphdGlvbiAiRXJpY3Nzb24gQUIiOw0KICAgIGNvbnRhY3QgIkVyaWNzc29uIGZpcnN0IGxpbmUgc3VwcG9ydCB2aWEgZW1haWwiOw0KICAgIGRlc2NyaXB0aW9uIA0KICAgICJSQU4gTyZNIHRvIENsb3VkIHRvcG9sb2d5IG1vZGVsLg0KDQogICAgQ29weXJpZ2h0IChjKSAyMDIzIEVyaWNzc29uIEFCLiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICAgIA0KICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIFJBTiBPJk0gdG8gQ2xvdWQgdG9wb2xvZ3kgcmVsYXRpb25zIjsNCg0KICAgIHJldmlzaW9uICIyMDIzLTEwLTI0IiB7DQogICAgICAgIGRlc2NyaXB0aW9uDQogICAgICAgICJJbml0aWFsIHJldmlzaW9uLiI7DQogICAgICAgIHlleHRlOnZlcnNpb24gIjAiOw0KICAgICAgICB5ZXh0ZTpyZWxlYXNlICIxIjsNCiAgICAgICAgeWV4dGU6Y29ycmVjdGlvbiAiMSI7DQogICAgfQ0KDQogICAgeWV4dGVyaXRvcGludjpkb21haW4gUkFOX09BTV9UT19DTE9VRDsNCg0KICAgIHlleHRlcml0b3BpbnY6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIE1BTkFHRURFTEVNRU5UX0RFUExPWUVEX0FTX0NMT1VETkFUSVZFU1lTVEVNIHsgIC8vIDAuLjEgdG8gMQ0KDQogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOw0KICAgICAgICBrZXkgaWQ7DQoNCiAgICAgICAgbGVhZiBkZXBsb3llZC1hcy1jbG91ZE5hdGl2ZVN5c3RlbSB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTWFuYWdlZCBFbGVtZW50IGRlcGxveWVkIGFzIENsb3VkIE5hdGl2ZSBTeXN0ZW0uIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YVNpZGUgcmFub2FtZXJpdG9waW52Ok1hbmFnZWRFbGVtZW50Ow0KICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOw0KICAgICAgICB9DQoNCiAgICAgICAgbGVhZiBkZXBsb3llZC1tYW5hZ2VkRWxlbWVudCB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQ2xvdWQgTmF0aXZlIFN5c3RlbSBkZXBsb3lzIE1hbmFnZWQgRWxlbWVudC4iOw0KICAgICAgICAgICAgeWV4dGVyaXRvcGludjpiU2lkZSByYW5jbG91ZGVyaXRvcGludjpDbG91ZE5hdGl2ZVN5c3RlbTsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgICAgIG1hbmRhdG9yeSB0cnVlOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgeWV4dGVyaXRvcGludjpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfUkVBTElTRURfQllfQ0xPVUROQVRJVkVBUFBMSUNBVElPTiB7IC8vIDEgdG8gMS4ubg0KDQogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOw0KICAgICAgICBrZXkgaWQ7DQoNCiAgICAgICAgbGVhZi1saXN0IHJlYWxpc2VkLWJ5LWNsb3VkTmF0aXZlQXBwbGljYXRpb24gew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gIk1hbmFnZWQgRWxlbWVudCByZWFsaXNlZCBieSBDbG91ZCANCiAgICAgICAgICAgICAgICAgICAgICAgIE5hdGl2ZSBBcHBsaWNhdGlvbi4iOw0KICAgICAgICAgICAgeWV4dGVyaXRvcGludjphU2lkZSByYW5vYW1lcml0b3BpbnY6TWFuYWdlZEVsZW1lbnQ7DQogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7DQogICAgICAgICAgICBtaW4tZWxlbWVudHMgMTsNCiAgICAgICAgfQ0KDQogICAgICAgIGxlYWYgcmVhbGlzZWQtbWFuYWdlZEVsZW1lbnQgew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gIkNsb3VkIE5hdGl2ZSBBcHBsaWNhdGlvbiByZWFsaXNlcyANCiAgICAgICAgICAgICAgICAgICAgICAgIE1hbmFnZWQgRWxlbWVudC4iOw0KICAgICAgICAgICAgeWV4dGVyaXRvcGludjpiU2lkZSByYW5jbG91ZGVyaXRvcGludjpDbG91ZE5hdGl2ZUFwcGxpY2F0aW9uOw0KICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOw0KICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7DQogICAgICAgIH0JDQogICAgfQ0KfQ==
o-ran-smo-teiv-ran-oam-to-logical	2023-10-24	urn:rdns:o-ran:o-ran-smo-teiv-ran-oam-to-logical	RAN_OAM_TO_LOGICAL	["o-ran-smo-teiv-ran-oam", "o-ran-smo-teiv-ran-logical"]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tb2FtLXRvLWxvZ2ljYWwgew0KICAgIHlhbmctdmVyc2lvbiAxLjE7DQogICAgbmFtZXNwYWNlICJ1cm46cmRuczpjb206ZXJpY3Nzb246dG9waW52bW9kZWw6ZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LXJhbi1vYW0tdG8tbG9naWNhbCI7DQogICAgcHJlZml4IHJhbm9hbXRvbG9nZXJpdG9waW52Ow0KDQogICAgaW1wb3J0IGVyaWNzc29uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IHlleHRlOyB9DQoNCiAgICBpbXBvcnQgZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LWNvbW1vbi15YW5nLXR5cGVzIHtwcmVmaXggdHlwZXNlcml0b3BpbnY7IH0NCg0KICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IHlleHRlcml0b3BpbnY7IH0NCg0KICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktcmFuLW9hbSB7cHJlZml4IHJhbm9hbWVyaXRvcGludjsgfQ0KDQogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tbG9naWNhbCB7cHJlZml4IHJhbmxvZ2VyaXRvcGludjsgfQ0KDQoNCiAgICBvcmdhbml6YXRpb24gIkVyaWNzc29uIEFCIjsNCiAgICBjb250YWN0ICJFcmljc3NvbiBmaXJzdCBsaW5lIHN1cHBvcnQgdmlhIGVtYWlsIjsNCiAgICBkZXNjcmlwdGlvbg0KICAgICJSQU4gTyZNIHRvIExvZ2ljYWwgdG9wb2xvZ3kgbW9kZWwuDQoNCiAgICBDb3B5cmlnaHQgKGMpIDIwMjMgRXJpY3Nzb24gQUIuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQogICAgDQogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgUkFOIE8mTSB0byBMb2dpY2FsIHRvcG9sb2d5IHJlbGF0aW9ucyI7DQoNCiAgICByZXZpc2lvbiAiMjAyMy0xMC0yNCIgew0KICAgICAgICBkZXNjcmlwdGlvbg0KICAgICAgICAiSW5pdGlhbCByZXZpc2lvbi4iOw0KICAgICAgICB5ZXh0ZTp2ZXJzaW9uICIwIjsNCiAgICAgICAgeWV4dGU6cmVsZWFzZSAiMSI7DQogICAgICAgIHlleHRlOmNvcnJlY3Rpb24gIjEiOw0KICAgIH0NCg0KICAgIHlleHRlcml0b3BpbnY6ZG9tYWluIFJBTl9PQU1fVE9fTE9HSUNBTDsNCg0KICAgIHlleHRlcml0b3BpbnY6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIE1BTkFHRURFTEVNRU5UX01BTkFHRVNfRU5PREVCRlVOQ1RJT04geyAgIC8vIDEgdG8gMC4ubg0KDQogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOw0KICAgICAgICBrZXkgaWQ7DQoNCiAgICAgICAgbGVhZi1saXN0IG1hbmFnZWQtZW5vZGViRnVuY3Rpb24gew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gIk1hbmFnZWQgRWxlbWVudCBtYW5hZ2VzIGVOb2RlQiBGdW5jdGlvbi4iOw0KICAgICAgICAgICAgeWV4dGVyaXRvcGludjphU2lkZSByYW5vYW1lcml0b3BpbnY6TWFuYWdlZEVsZW1lbnQ7DQogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7DQogICAgICAgIH0NCg0KICAgICAgICBsZWFmIG1hbmFnZWQtYnktbWFuYWdlZEVsZW1lbnQgew0KICAgICAgICAgICAgZGVzY3JpcHRpb24gImVOb2RlQiBGdW5jdGlvbiBtYW5hZ2VkIGJ5IE1hbmFnZWQgRWxlbWVudC4iOw0KICAgICAgICAgICAgeWV4dGVyaXRvcGludjpiU2lkZSByYW5sb2dlcml0b3BpbnY6RU5vZGVCRnVuY3Rpb247DQogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7DQogICAgICAgICAgICBtYW5kYXRvcnkgdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHlleHRlcml0b3BpbnY6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIE1BTkFHRURFTEVNRU5UX01BTkFHRVNfR05CRFVGVU5DVElPTiB7ICAgIC8vIDEgdG8gMC4ubg0KDQogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOw0KICAgICAgICBrZXkgaWQ7DQoNCiAgICAgICAgbGVhZi1saXN0IG1hbmFnZWQtZ25iZHVGdW5jdGlvbiB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTWFuYWdlZCBFbGVtZW50IG1hbmFnZXMgZ05vZGVCLURVIEZ1bmN0aW9uLiI7DQogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmFTaWRlIHJhbm9hbWVyaXRvcGludjpNYW5hZ2VkRWxlbWVudDsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgfQ0KDQogICAgICAgIGxlYWYgbWFuYWdlZC1ieS1tYW5hZ2VkRWxlbWVudCB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLURVIEZ1bmN0aW9uIG1hbmFnZWQgYnkgTWFuYWdlZCBFbGVtZW50LiI7DQogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmJTaWRlIHJhbmxvZ2VyaXRvcGludjpHTkJEVUZ1bmN0aW9uOw0KICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOw0KICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7DQogICAgICAgIH0NCiAgICB9DQogICAgDQogICAgeWV4dGVyaXRvcGludjpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJDVUNQRlVOQ1RJT04geyAgICAvLyAxIHRvIDAuLm4NCg0KICAgICAgICB1c2VzIHR5cGVzZXJpdG9waW52OlRvcF9HcnBfVHlwZTsNCiAgICAgICAga2V5IGlkOw0KDQogICAgICAgIGxlYWYtbGlzdCBtYW5hZ2VkLWduYmN1Y3BGdW5jdGlvbiB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTWFuYWdlZCBFbGVtZW50IG1hbmFnZXMgZ05vZGVCLUNVLUNQIEZ1bmN0aW9uLiI7DQogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmFTaWRlIHJhbm9hbWVyaXRvcGludjpNYW5hZ2VkRWxlbWVudDsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgfQ0KDQogICAgICAgIGxlYWYgbWFuYWdlZC1ieS1tYW5hZ2VkRWxlbWVudCB7DQogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLUNVLUNQIEZ1bmN0aW9uIG1hbmFnZWQgYnkgTWFuYWdlZCBFbGVtZW50LiI7DQogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmJTaWRlIHJhbmxvZ2VyaXRvcGludjpHTkJDVUNQRnVuY3Rpb247DQogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7DQogICAgICAgICAgICBtYW5kYXRvcnkgdHJ1ZTsNCiAgICAgICAgfQkNCiAgICB9DQoNCiAgICB5ZXh0ZXJpdG9waW52OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBNQU5BR0VERUxFTUVOVF9NQU5BR0VTX0dOQkNVVVBGVU5DVElPTiB7ICAgIC8vIDEgdG8gMC4ubg0KDQogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOw0KICAgICAgICBrZXkgaWQ7DQoNCiAgICAgICAgbGVhZi1saXN0IG1hbmFnZWQtZ25iY3V1cEZ1bmN0aW9uIHsNCiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJNYW5hZ2VkIEVsZW1lbnQgbWFuYWdlcyBnTm9kZUItQ1UtVVAgRnVuY3Rpb24uIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YVNpZGUgcmFub2FtZXJpdG9waW52Ok1hbmFnZWRFbGVtZW50Ow0KICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOw0KICAgICAgICB9DQoNCiAgICAgICAgbGVhZiBtYW5hZ2VkLWJ5LW1hbmFnZWRFbGVtZW50IHsNCiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJnTm9kZUItQ1UtVVAgRnVuY3Rpb24gbWFuYWdlZCBieSBNYW5hZ2VkIEVsZW1lbnQuIjsNCiAgICAgICAgICAgIHlleHRlcml0b3BpbnY6YlNpZGUgcmFubG9nZXJpdG9waW52OkdOQkNVVVBGdW5jdGlvbjsNCiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsNCiAgICAgICAgICAgIG1hbmRhdG9yeSB0cnVlOw0KICAgICAgICB9DQogICAgfQ0KfQ==
o-ran-smo-teiv-ran-cloud	2023-06-26	urn:rdns:o-ran:o-ran-smo-teiv-ran-cloud	RAN_CLOUD	[]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tY2xvdWQgewogICAgeWFuZy12ZXJzaW9uIDEuMTsKICAgIG5hbWVzcGFjZSAidXJuOnJkbnM6Y29tOmVyaWNzc29uOnRvcGludm1vZGVsOmVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tY2xvdWQiOwogICAgcHJlZml4IHJhbmNsb3VkZXJpdG9waW52OwoKICAgIGltcG9ydCBlcmljc3Nvbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCB5ZXh0ZTsgfQoKICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktY29tbW9uLXlhbmctdHlwZXMge3ByZWZpeCB0eXBlc2VyaXRvcGludjsgfQoKICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IHlleHRlcml0b3BpbnY7IH0KCiAgICBpbXBvcnQgaWV0Zi1nZW8tbG9jYXRpb24gewogICAgICAgIHByZWZpeCBnZW87CiAgICAgICAgcmVmZXJlbmNlICJSRkMgOTE3OTogQSBZQU5HIEdyb3VwaW5nIGZvciBHZW9ncmFwaGljIExvY2F0aW9ucyI7CiAgICB9CgogICAgb3JnYW5pemF0aW9uICJFcmljc3NvbiBBQiI7CiAgICBjb250YWN0ICJFcmljc3NvbiBmaXJzdCBsaW5lIHN1cHBvcnQgdmlhIGVtYWlsIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiUkFOIENsb3VkIHRvcG9sb2d5IG1vZGVsLgoKICAgIENvcHlyaWdodCAoYykgMjAyMyBFcmljc3NvbiBBQi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KCiAgICBUaGlzIG1vZGVsIGNvbnRhaW5zIHRoZSB0b3BvbG9neSBlbnRpdGllcyBhbmQgcmVsYXRpb25zIGluIHRoZQogICAgUkFOIENMT1VEIGRvbWFpbiwgd2hpY2ggY29tcHJpc2VzIGNsb3VkIGluZnJhc3RydWNlIGFuZAogICAgZGVwbG95bWVudCBhc3BlY3RzIHRoYXQgY2FuIGJlIHVzZWQgaW4gdGhlIHRvcG9sb2d5IG1vZGVsLiI7CgogICAgcmV2aXNpb24gIjIwMjMtMDYtMjYiIHsKICAgICAgICBkZXNjcmlwdGlvbgogICAgICAgICJJbml0aWFsIHJldmlzaW9uLiI7CiAgICAgICAgeWV4dGU6dmVyc2lvbiAiMCI7CiAgICAgICAgeWV4dGU6cmVsZWFzZSAiMSI7CiAgICAgICAgeWV4dGU6Y29ycmVjdGlvbiAiMCI7CiAgICB9CgogICAgeWV4dGVyaXRvcGludjpkb21haW4gUkFOX0NMT1VEOwoKICAgIGxpc3QgQ2xvdWRTaXRlIHsKICAgICAgICBkZXNjcmlwdGlvbiAiUmVwcmVzZW50cyB0aGUgaW5mcmFzdHJ1Y3R1cmUgdGhhdAogICAgICAgICAgICAgICAgICAgIGhvc3RzIHRoZSBDbG91ZCBOYXRpdmUgQXBwbGljYXRpb25zLiI7CgogICAgICAgIHVzZXMgdHlwZXNlcml0b3BpbnY6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgY29udGFpbmVyIGF0dHJpYnV0ZXMgewogICAgICAgICAgICBsZWFmIG5hbWUgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIk5hbWUgb2YgQ2xvdWQgU2l0ZSI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdXNlcyBnZW86Z2VvLWxvY2F0aW9uOwogICAgICAgIH0KICAgIH0KfQ==
o-ran-smo-teiv-ran-logical-to-equipment	2023-10-24	urn:rdns:o-ran:-ran-logical-to-equipment	RAN_LOGICAL_TO_EQUIPMENT	["o-ran-smo-teiv-ran-logical", "o-ran-smo-teiv-ran-equipment"]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tZXF1aXBtZW50LXRvLWxvZ2ljYWwgewogICAgeWFuZy12ZXJzaW9uIDEuMTsKICAgIG5hbWVzcGFjZSAidXJuOnJkbnM6Y29tOmVyaWNzc29uOnRvcGludm1vZGVsOmVyaWNzc29uLXRvcG9sb2d5YW5kaW52ZW50b3J5LXJhbi1lcXVpcG1lbnQtdG8tbG9naWNhbCI7CiAgICBwcmVmaXggcmFubG9ndG9lcXVpcGVyaXRvcGludjsKCiAgICBpbXBvcnQgZXJpY3Nzb24teWFuZy1leHRlbnNpb25zIHtwcmVmaXggeWV4dGU7IH0KCiAgICBpbXBvcnQgZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LWNvbW1vbi15YW5nLXR5cGVzIHtwcmVmaXggdHlwZXNlcml0b3BpbnY7IH0KCiAgICBpbXBvcnQgZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMge3ByZWZpeCB5ZXh0ZXJpdG9waW52OyB9CgogICAgaW1wb3J0IGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tbG9naWNhbCB7cHJlZml4IHJhbmxvZ2VyaXRvcGludjsgfQoKICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktcmFuLWVxdWlwbWVudCB7cHJlZml4IHJhbmVxdWlwZXJpdG9waW52OyB9CgogICAgb3JnYW5pemF0aW9uICJFcmljc3NvbiBBQiI7CiAgICBjb250YWN0ICJFcmljc3NvbiBmaXJzdCBsaW5lIHN1cHBvcnQgdmlhIGVtYWlsIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiUkFOIExvZ2ljYWwgdG8gRXF1aXBtZW50IHRvcG9sb2d5IG1vZGVsLgoKICAgIENvcHlyaWdodCAoYykgMjAyMyBFcmljc3NvbiBBQi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KCiAgICBUaGlzIG1vZGVsIGNvbnRhaW5zIHRoZSBSQU4gTG9naWNhbCB0byBFcXVpcG1lbnQgdG9wb2xvZ3kKICAgIGVudGl0aWVzIGFuZCByZWxhdGlvbnMuIjsKCiAgICByZXZpc2lvbiAiMjAyMy0xMi0xMiIgewogICAgICAgIGRlc2NyaXB0aW9uCiAgICAgICAgIkluaXRpYWwgcmV2aXNpb24uIjsKICAgICAgICB5ZXh0ZTp2ZXJzaW9uICIwIjsKICAgICAgICB5ZXh0ZTpyZWxlYXNlICIyIjsKICAgICAgICB5ZXh0ZTpjb3JyZWN0aW9uICIwIjsKICAgIH0KCiAgICB5ZXh0ZXJpdG9waW52OmRvbWFpbiBFUVVJUE1FTlRfVE9fUkFOX0xPR0lDQUw7CgogICAgeWV4dGVyaXRvcGludjpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgQU5URU5OQU1PRFVMRV9TRVJWRVNfQU5URU5OQUNBUEFCSUxJVFkgeyAvLyAwLi5uIHRvIDAuLm0KCiAgICAgICAgdXNlcyB0eXBlc2VyaXRvcGludjpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmLWxpc3Qgc2VydmljZWQtYW50ZW5uYUNhcGFiaWxpdHkgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiQW50ZW5uYSBDYXBhYmlsaXR5IHNlcnZpY2VkIGJ5IHRoaXMgQW50ZW5uYSBNb2R1bGUuIjsKICAgICAgICAgICAgeWV4dGVyaXRvcGludjphU2lkZSByYW5lcXVpcGVyaXRvcGludjpBbnRlbm5hTW9kdWxlOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmLWxpc3Qgc2VydmluZy1hbnRlbm5hTW9kdWxlIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgTW9kdWxlIHNlcnZlcyB0aGlzIEFudGVubmEgQ2FwYWJpbGl0eS4iOwogICAgICAgICAgICB5ZXh0ZXJpdG9waW52OmJTaWRlIHJhbmxvZ2VyaXRvcGludjpBbnRlbm5hQ2FwYWJpbGl0eTsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KICAgIH0KfQo=
o-ran-smo-teiv-ran-logical	2023-11-03	urn:rdns:o-ran:o-ran-smo-teiv-ran-logical	RAN_LOGICAL	[]	
o-ran-smo-teiv-ran-oam	2023-06-26	urn:rdns:o-ran:o-ran-smo-teiv-ran-oam	RAN_OAM	[]	bW9kdWxlIGVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tb2FtIHsNCiAgICB5YW5nLXZlcnNpb24gMS4xOw0KICAgIG5hbWVzcGFjZSAidXJuOnJkbnM6Y29tOmVyaWNzc29uOnRvcGludm1vZGVsOmVyaWNzc29uLXByZS1yMS10b3BvbG9neWFuZGludmVudG9yeS1yYW4tb2FtIjsNCiAgICBwcmVmaXggcmFub2FtZXJpdG9waW52Ow0KDQogICAgaW1wb3J0IGVyaWNzc29uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IHlleHRlOyB9DQoNCiAgICBpbXBvcnQgZXJpY3Nzb24tcHJlLXIxLXRvcG9sb2d5YW5kaW52ZW50b3J5LWNvbW1vbi15YW5nLXR5cGVzIHtwcmVmaXggdHlwZXNlcml0b3BpbnY7IH0NCg0KICAgIGltcG9ydCBlcmljc3Nvbi1wcmUtcjEtdG9wb2xvZ3lhbmRpbnZlbnRvcnktY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7cHJlZml4IHlleHRlcml0b3BpbnY7IH0NCg0KICAgIG9yZ2FuaXphdGlvbiAiRXJpY3Nzb24gQUIiOw0KICAgIGNvbnRhY3QgIkVyaWNzc29uIGZpcnN0IGxpbmUgc3VwcG9ydCB2aWEgZW1haWwiOw0KICAgIGRlc2NyaXB0aW9uIA0KICAgICJSQU4gTyZNIHRvcG9sb2d5IG1vZGVsLg0KDQogICAgQ29weXJpZ2h0IChjKSAyMDIzIEVyaWNzc29uIEFCLiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICAgIA0KICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIHRvcG9sb2d5IGVudGl0aWVzIGFuZCByZWxhdGlvbnMgaW4gdGhlIA0KICAgIFJBTiBPJk0gZG9tYWluLCB3aGljaCBhcmUgaW50ZW5kZWQgdG8gcmVwcmVzZW50IG1hbmFnZW1lbnQgc3lzdGVtcyANCiAgICBhbmQgbWFuYWdlbWVudCBpbnRlcmZhY2VzLiI7DQoNCiAgICByZXZpc2lvbiAiMjAyMy0wNi0yNiIgew0KICAgICAgICBkZXNjcmlwdGlvbg0KICAgICAgICAiSW5pdGlhbCByZXZpc2lvbi4iOw0KICAgICAgICB5ZXh0ZTp2ZXJzaW9uICIwIjsNCiAgICAgICAgeWV4dGU6cmVsZWFzZSAiMSI7DQogICAgICAgIHlleHRlOmNvcnJlY3Rpb24gIjAiOw0KICAgIH0NCg0KICAgIHlleHRlcml0b3BpbnY6ZG9tYWluIFJBTl9PQU07DQogICAgICAgIA0KICAgIGxpc3QgTWFuYWdlZEVsZW1lbnQgew0KICAgICAgICBkZXNjcmlwdGlvbiANCiAgICAgICAgIkEgTWFuYWdlZCBFbGVtZW50IChNRSkgaXMgYSBub2RlIGludG8gYSB0ZWxlY29tbXVuaWNhdGlvbiBuZXR3b3JrIA0KICAgICAgICBwcm92aWRpbmcgc3VwcG9ydCBhbmQvb3Igc2VydmljZSB0byBzdWJzY3JpYmVycy4gQW4gTUUgY29tbXVuaWNhdGVzIA0KICAgICAgICB3aXRoIGEgbWFuYWdlciBhcHBsaWNhdGlvbiAoZGlyZWN0bHkgb3IgaW5kaXJlY3RseSkgb3ZlciBvbmUgb3IgbW9yZSANCiAgICAgICAgaW50ZXJmYWNlcyBmb3IgdGhlIHB1cnBvc2Ugb2YgYmVpbmcgbW9uaXRvcmVkIGFuZC9vciBjb250cm9sbGVkLiI7DQoNCiAgICAgICAgdXNlcyB0eXBlc2VyaXRvcGludjpUb3BfR3JwX1R5cGU7DQogICAgICAgIGtleSBpZDsNCg0KICAgICAgICBjb250YWluZXIgYXR0cmlidXRlcyB7DQogICAgICAgICAgICBsZWFmIGZkbiB7DQogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIlRoaXMgRnVsbCBEaXN0aW5ndWlzaGVkIE5hbWUgKEZETikgaWRlbnRpZmllcyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBpbnN0YW5jZSBvZiB0aGUgTWFuYWdlZEVsZW1lbnQgTU8uIEl0IGNvbnRhaW5zDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGZ1bGwgcGF0aCBmcm9tIHRoZSBTdWJuZXR3b3JrIHRvIHRoZSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYW5hZ2VkRWxlbWVudC4iOw0KICAgICAgICAgICAgICAgIHR5cGUgdHlwZXNlcml0b3BpbnY6XzNHUFBfRkROX1R5cGU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnRhaW5lciBjbUlkIHsNCiAgICAgICAgICAgICAgICB1c2VzIHR5cGVzZXJpdG9waW52OkNNX0lEOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ==
\.

COPY ties_model.module_reference("name", "namespace", "domain", "includedModules", "revision", "content") FROM stdin;
_3gpp-common-yang-extensions	urn:3gpp:sa5:_3gpp-common-yang-extensions	\N	[]	2019-06-23	bW9kdWxlIF8zZ3BwLWNvbW1vbi15YW5nLWV4dGVuc2lvbnMgewogIHlhbmctdmVyc2lvbiAxLjE7CiAgbmFtZXNwYWNlIHVybjozZ3BwOnNhNTpfM2dwcC1jb21tb24teWFuZy1leHRlbnNpb25zIDsKICBwcmVmaXggeWV4dDNncHAgOwoKICBvcmdhbml6YXRpb24gIjNHUFAgU0E1IjsKICBkZXNjcmlwdGlvbiAiVGhlIG1vZHVsZSBkZWZpbmVzIFlBTkcgZXh0ZW5zaW9ucyBuZWVkZWQKICAgIDNHUFAgWUFORyBtb2RlbGluZy4KCiAgICBDb3B5cmlnaHQgKGMpIDIwMTkgM0dQUC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KCiAgICBFeHRlbnNpb25zIE1VU1QgYmUgZGVmaW5lZCB3aXRoIHRoZSBmb2xsb3dpbmcgc3RydWN0dXJlIGluIHRoZQogICAgZGVzY3JpcHRpb24gc3RhdGVtZW50OgogICAgICAgIC0gV2hhdCBpcyB0aGlzIHN0YXRlbWVudC4KICAgICAgICAtIE5ld2xpbmUsCiAgICAgICAgLSBUaGlzIHN0YXRlbWVudCBjYW4gYmUgYSBzdWJzdGF0ZW1lbnQgb2YgdGhlIHh4eCBzdGF0ZW1lbnRzIHdpdGgKICAgICAgICBjYXJkaW5hbGl0eSB4Li55LgogICAgICAgIC0gVGhpcyBzdGF0ZW1lbnQgY2FuIGhhdmUgdGhlIGZvbGxvd2luZyBzdWJzdGF0ZW1lbnRzIHdpdGgKICAgICAgICBjYXJkaW5hbGl0eSB4Li55LgogICAgICAgIC0gTmV3bGluZQogICAgICAgIC0gSXMgY2hhbmdpbmcgdGhpcyBzdGF0ZW1lbnQgYW4gZWRpdG9yaWFsLCBCQyhiYWNrd2FyZHMgY29tcGF0aWJsZSkKICAgICAgICBvciBOQkMobm9uLUJDKSBjaGFuZ2U/CiAgICAgICAgLSBOZXdsaW5lLgogICAgICAgIC0gVGhlIGFyZ3VtZW50IGl0cyBtZWFuaW5nIGFuZCB0eXBlLiBQcmVmZXJhYmx5IHVzZSBZQU5HIHR5cGVzIGFuZAogICAgICAgICAgY29uc3RyYWludHMgdG8gZGVmaW5lIHRoZSBhcmd1bWVudCdzIHR5cGUuCgogICAgQW55IGV4dGVuc2lvbiBzdGF0ZW1lbnQgY2FuIGJlIGFkZGVkIHdpdGggYQogICAgZGV2aWF0aW9uL2RldmlhdGUgYWRkIHN0YXRlbWVudC4gSW4gdGhpcyBjYXNlIHRoZSByZXN0cmljdGlvbiBhYm91dAogICAgdGhlIHBhcmVudCBzdGF0ZW1lbnQgb2YgdGhlIGV4dGVuc2lvbiBTSEFMTCBiZSBldmFsdWF0ZWQgYmFzZWQgb24gdGhlCiAgICB0YXJnZXQgb2YgdGhlIGRldmlhdGlvbiBzdGF0ZW1lbnQuCgogICAgU3VwcG9ydCBmb3IgdGhpcyBtb2R1bGUgZG9lcyBub3QgbWVhbiB0aGF0IGEgWUFORyBzZXJ2ZXIgaW1wbGVtZW50cwogICAgc3VwcG9ydCBmb3IgZWFjaCBvZiB0aGVzZSBleHRlbnNpb25zLgogICAgSW1wbGVtZW50ZXJzIG9mIGVhY2ggc3BlY2lmaWMgbW9kdWxlIHVzaW5nIGFuIGV4dGVuc2lvbnMgTVVTVCBjaGVjawogICAgaWYgdGhlIHNlcnZlciBpbXBsZW1lbnRzIHN1cHBvcnQgZm9yIHRoZSB1c2VkIGV4dGVuc2lvbi4KICAgIE5vdGU6IG1vZHVsZXMgdXNlIG1hbnkgZXh0ZW5zaW9ucyB3aGljaCBpbmRpdmlkdWFsCiAgICBpbXBsZW1lbnRhdGlvbnMgTUFZIG9yIE1BWSBOT1Qgc3VwcG9ydC4KICAgIElmIHN1cHBvcnQgZm9yIGFuIGV4dGVuc2lvbiBpcyBtaXNzaW5nIHRoZSBleHRlbnNpb24gc3RhdGVtZW50IG5lZWRzCiAgICBpbmRpdmlkdWFsIGhhbmRsaW5nIG9yIGl0IFNIT1VMRCBiZSByZW1vdmVkIGZyb20gdGhlIG1vZHVsZSB1c2luZwogICAgdGhlIGV4dGVuc2lvbiBlLmcuIHdpdGggYSBkZXZpYXRpb24uCiAgICAgICAgICAiOwoKICByZXZpc2lvbiAiMjAxOS0wNi0yMyIgewogICAgZGVzY3JpcHRpb24gIkluaXRpYWwgdmVyc2lvbiI7CiAgfQoKICBleHRlbnNpb24gaW5WYXJpYW50IHsKICAgIGRlc2NyaXB0aW9uCiAgICAgICJJbmRpY2F0ZXMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSBkYXRhIG5vZGUgY2FuIG9ubHkgYmUgc2V0IHdoZW4gaXRzCiAgICAgIHBhcmVudCBkYXRhIG5vZGUgaXMgYmVpbmcgY3JlYXRlZC4gVG8gY2hhbmdlIHRoZSB2YWx1ZSBhZnRlciB0aGF0LCB0aGUKICAgICAgcGFyZW50IGRhdGEgbm9kZSBtdXN0IGJlIGRlbGV0ZWQgYW5kIHJlY3JlYXRlZCB3aXRoIHRoZSBkYXRhIG5vZGUKICAgICAgaGF2aW5nIHRoZSBuZXcgdmFsdWUuCgogICAgICBJdCBpcyB1bm5lY2Vzc2FyeSB0byB1c2UgYW5kIE1VU1QgTk9UIGJlIHVzZWQgZm9yIGtleSBsZWFmcy4KCiAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBvbmx5IGJlIGEgc3Vic3RhdGVtZW50IG9mIGEgbGVhZiwgbGVhZi1saXN0LCBsaXN0CiAgICAgIHN0YXRlbWVudHMgdGhhdCBpcyBjb25maWc9dHJ1ZS4KICAgICAgWmVybyBvciBvbmUgaW5WYXJpYW50IHN0YXRlbWVudCBpcyBhbGxvd2VkIHBlciBwYXJlbnQgc3RhdGVtZW50LgogICAgICBOTyBzdWJzdGF0ZW1lbnRzIGFyZSBhbGxvd2VkLgoKICAgICAgQWRkaW5nIHRoaXMgc3RhdGVtZW50IGlzIGFuIE5CQyBjaGFuZ2UsIHJlbW92aW5nIGl0IGlzIEJDLiI7CiAgfQoKICBleHRlbnNpb24gaW5pdGlhbC12YWx1ZSB7CiAgICBkZXNjcmlwdGlvbiAiU3BlY2lmaWVzIGEgdmFsdWUgdGhhdCB0aGUgc3lzdGVtIHdpbGwgc2V0IGZvciBhIGxlYWYKICAgICAgbGVhZi1saXN0IGlmIGEgdmFsdWUgaXMgbm90IHNwZWNpZmllZCBmb3IgaXQgd2hlbiBpdHMgcGFyZW50IGxpc3QKICAgICAgb3IgY29udGFpbmVyIGlzIGNyZWF0ZWQuIFRoZSB2YWx1ZSBoYXMgbm8gZWZmZWN0IGluIGFueSBvdGhlcgogICAgICBtb2RpZmljYXRpb24gZS5nLiBjaGFuZ2luZyBvciByZW1vdmluZyB0aGUgdmFsdWUuCgogICAgICBUaGUgZGVzY3JpcHRpb24gc3RhdGVtZW50IG9mIHRoZSBwYXJlbnQgc3RhdGVtZW50IFNIT1VMRCBjb250YWluCiAgICAgIHRoZSBsYWJlbCAnSW5pdGlhbC12YWx1ZTogJyBmb2xsb3dlZCBieSB0aGUgdGV4dCBmcm9tIHRoZSBhcmd1bWVudC4KCiAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBvbmx5IGJlIGEgc3Vic3RhdGVtZW50IG9mIGEgbGVhZiBvciBsZWFmLWxpc3QuCiAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBOT1QgYmUgcHJlc2VudCBpZiB0aGUgbGVhZiBvciB0aGUgbGVhZi1saXN0CiAgICAgIGhhcyBhIGRlZmF1bHQgc3RhdGVtZW50IG9yIHRoZSB0eXBlIHVzZWQgZm9yIHRoZSBkYXRhIG5vZGUKICAgICAgaGFzIGEgZGVmYXVsdCB2YWx1ZS4KICAgICAgVGhlIHN0YXRlbWVudCBNVVNUIE5PVCBiZSB1c2VkIGZvciBjb25maWc9ZmFsc2UgZGF0YSBvciBpbiBhbgogICAgICBhY3Rpb24sIHJwYyBvciBub3RpZmljYXRpb24uCiAgICAgIFplcm8gb3Igb25lIGluaXRpYWwtdmFsdWUgc3RhdGVtZW50cyBhcmUgYWxsb3dlZCBmb3IgYSBsZWFmIHBhcmVudAogICAgICBzdGF0ZW1lbnQuIFplcm8gb3IgbW9yZSBpbml0aWFsLXZhbHVlIHN0YXRlbWVudHMgYXJlIGFsbG93ZWQgZm9yIGEKICAgICAgbGVhZi1saXN0IHBhcmVudCBzdGF0ZW1lbnQuIElmIHRoZSBsZWFmLWxpc3QgaXMgb3JkZXJlZC1ieSB1c2VyLCB0aGUKICAgICAgaW5pdGlhbCB2YWx1ZXMgYXJlIHN0b3JlZCBpbiB0aGUgb3JkZXIgdGhleSBhcHBlYXIgaW4gdGhlIFlBTkcgZGVmaW5pdGlvbi4KICAgICAgTk8gc3Vic3RhdGVtZW50cyBhcmUgYWxsb3dlZC4KCiAgICAgIEFsd2F5cyBjb25zaWRlciB1c2luZyBhIFlBTkctZGVmYXVsdCBzdGF0ZW1lbnQgaW5zdGVhZC4KCiAgICAgIE1vZGlmaWNhdGlvbiBvZiB0aGUgaW5pdGlhbC12YWx1ZSBpcyBhIG5vbi1iYWNrd2FyZHMtY29tcGF0aWJsZSBjaGFuZ2UuCgogICAgICBUaGUgYXJndW1lbnQgc3BlY2lmaWVzIGEgc2luZ2xlIGluaXRpYWwgdmFsdWUgZm9yIGEgbGVhZiBvciBsZWFmLWxpc3QuCiAgICAgIFRoZSB2YWx1ZSBNVVNUIGJlIHBhcnQgb2YgdGhlIHZhbHVlc3BhY2Ugb2YgdGhlIGxlYWYvbGVhZi1saXN0LgogICAgICBJdCBmb2xsb3dzIHRoZSBzYW1lIHJ1bGVzIGFzIHRoZSBhcmd1bWVudCBvZiB0aGUgZGVmYXVsdCBzdGF0ZW1lbnQuIjsKCiAgICBhcmd1bWVudCAiaW5pdGlhbC12YWx1ZSI7CiAgfQp9Cg==
_3gpp-common-yang-types	urn:3gpp:sa5:_3gpp-common-yang-types	\N	[]	2023-11-06	
ietf-geo-location	urn:ietf:params:xml:ns:yang:ietf-geo-location	\N	[]	2022-02-11	
ietf-inet-types	urn:ietf:params:xml:ns:yang:ietf-inet-types	\N	[]	2013-07-15	
ietf-yang-types	urn:ietf:params:xml:ns:yang:ietf-yang-types	\N	[]	2013-07-15	
o-ran-smo-teiv-common-yang-extensions	urn:o-ran:smo-teiv-common-yang-extensions	\N	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMgewogICAgeWFuZy12ZXJzaW9uIDEuMTsKICAgIG5hbWVzcGFjZSAidXJuOm8tcmFuOnNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMiOwogICAgcHJlZml4IG9yLXRlaXYteWV4dDsKCiAgICBvcmdhbml6YXRpb24gIkVyaWNzc29uIEFCIjsKICAgIGNvbnRhY3QgIkVyaWNzc29uIGZpcnN0IGxpbmUgc3VwcG9ydCB2aWEgZW1haWwiOwogICAgZGVzY3JpcHRpb24KICAgICJUb3BvbG9neSBhbmQgSW52ZW50b3J5IFlBTkcgZXh0ZW5zaW9ucyBtb2RlbC4KCiAgICBDb3B5cmlnaHQgKGMpIDIwMjQgRXJpY3Nzb24gQUIuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyBleHRlbnNpb25zIHRvIHRoZSBZQU5HIGxhbmd1YWdlIHRoYXQgdG9wb2xvZ3kgYW5kCiAgICBpbnZlbnRvcnkgbW9kZWxzIHdpbGwgdXNlIHRvIGRlZmluZSBhbmQgYW5ub3RhdGUgdHlwZXMgYW5kIHJlbGF0aW9uc2hpcHMuIjsKCiAgICByZXZpc2lvbiAiMjAyNC0wNS0yNCIgewogICAgICAgIGRlc2NyaXB0aW9uICJJbml0aWFsIHJldmlzaW9uLiI7CiAgICAgICAgb3ItdGVpdi15ZXh0OmxhYmVsIDAuMy4wOwogICAgfQoKICAgIGV4dGVuc2lvbiBiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgewogICAgICAgIGRlc2NyaXB0aW9uCiAgICAgICAgICAgICJEZWZpbmVzIGEgYmktZGlyZWN0aW9uYWwgcmVsYXRpb25zaGlwIGluIHRoZSB0b3BvbG9neS4KCiAgICAgICAgICAgIEEgYmktZGlyZWN0aW9uYWwtYXNzb2NpYXRpb24gKEJEQSkgaXMgYSByZWxhdGlvbnNoaXAgY29tcHJpc2luZyBvZgogICAgICAgICAgICBhbiBBLXNpZGUgYW5kIGEgQi1zaWRlLiBUaGUgQS1zaWRlIGlzIGNvbnNpZGVyZWQgdGhlIG9yaWdpbmF0aW5nCiAgICAgICAgICAgIHNpZGUgb2YgdGhlIHJlbGF0aW9uc2hpcDsgdGhlIEItc2lkZSBpcyBjb25zaWRlcmVkIHRoZSB0ZXJtaW5hdGluZwogICAgICAgICAgICBzaWRlIG9mIHRoZSByZWxhdGlvbnNoaXAuIFRoZSBvcmRlciBvZiBBLXNpZGUgYW5kIEItc2lkZSBpcyBvZgogICAgICAgICAgICBpbXBvcnRhbmNlIGFuZCBNVVNUIE5PVCBiZSBjaGFuZ2VkIG9uY2UgZGVmaW5lZC4KCiAgICAgICAgICAgIEJvdGggQS1zaWRlIGFuZCBCLXNpZGUgYXJlIGRlZmluZWQgb24gYSB0eXBlLCBhbmQgYXJlIGdpdmVuIGEgcm9sZS4KICAgICAgICAgICAgQSB0eXBlIG1heSBoYXZlIG11bHRpcGxlIG9yaWdpbmF0aW5nIGFuZC9vciB0ZXJtaW5hdGluZyBzaWRlcyBvZiBhCiAgICAgICAgICAgIHJlbGF0aW9uc2hpcCwgYWxsIGRpc3Rpbmd1aXNoZWQgYnkgcm9sZSBuYW1lLgoKICAgICAgICAgICAgVGhlIHN0YXRlbWVudCBNVVNUIG9ubHkgYmUgYSBzdWJzdGF0ZW1lbnQgb2YgdGhlICdtb2R1bGUnIHN0YXRlbWVudC4KICAgICAgICAgICAgTXVsdGlwbGUgJ2JpLWRpcmVjdGlvbmFsLXRvcG9sb2d5LXJlbGF0aW9uc2hpcCcgc3RhdGVtZW50cyBhcmUKICAgICAgICAgICAgYWxsb3dlZCBwZXIgcGFyZW50IHN0YXRlbWVudC4KCiAgICAgICAgICAgIFN1YnN0YXRlbWVudHMgdG8gdGhlICdiaS1kaXJlY3Rpb25hbC10b3BvbG9neS1yZWxhdGlvbnNoaXAnIGRlZmluZQogICAgICAgICAgICB0aGUgQS1zaWRlIGFuZCB0aGUgQi1zaWRlLCByZXNwZWN0aXZlbHksIGFuZCBvcHRpb25hbGx5IHByb3BlcnRpZXMKICAgICAgICAgICAgb2YgdGhlIHJlbGF0aW9uc2hpcC4gRGF0YSBub2RlcyBvZiB0eXBlcyAnbGVhZicgYW5kICdsZWFmLWxpc3QnIGFyZQogICAgICAgICAgICB1c2VkIGZvciB0aGlzIHB1cnBvc2UuIE9uZSBvZiB0aGUgZGF0YSBub2RlcyBNVVNUIGJlIGFubm90YXRlZCB3aXRoCiAgICAgICAgICAgIHRoZSAnYS1zaWRlJyBleHRlbnNpb247IGFub3RoZXIgZGF0YSBub2RlIE1VU1QgYmUgYW5ub3RhdGVkIHdpdGggdGhlCiAgICAgICAgICAgICdiLXNpZGUnIGV4dGVuc2lvbi4gT3RoZXIgZGF0YSBub2RlcyBkZWZpbmUgcHJvcGVydGllcyBvZiB0aGUKICAgICAgICAgICAgcmVsYXRpb25zaGlwLgoKICAgICAgICAgICAgVGhlIGFyZ3VtZW50IGlzIHRoZSBuYW1lIG9mIHRoZSByZWxhdGlvbnNoaXAuIFRoZSByZWxhdGlvbnNoaXAgbmFtZQogICAgICAgICAgICBpcyBzY29wZWQgdG8gdGhlIG5hbWVzcGFjZSBvZiB0aGUgZGVjbGFyaW5nIG1vZHVsZSBhbmQgTVVTVCBiZQogICAgICAgICAgICB1bmlxdWUgd2l0aGluIHRoZSBzY29wZS4iOwoKICAgICAgICBhcmd1bWVudCByZWxhdGlvbnNoaXBOYW1lOwogICAgfQoKICAgIGV4dGVuc2lvbiBhU2lkZSB7CiAgICAgICAgZGVzY3JpcHRpb24KICAgICAgICAgICAgIkRlZmluZXMgdGhlIEEtc2lkZSBvZiBhIHJlbGF0aW9uc2hpcC4KCiAgICAgICAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBvbmx5IGJlIGEgc3Vic3RhdGVtZW50IG9mIGEgJ2xlYWYnIG9yICdsZWFmLWxpc3QnCiAgICAgICAgICAgIHN0YXRlbWVudCwgd2hpY2ggaXRzZWxmIG11c3QgYmUgYSBzdWJzdGF0ZW1lbnQgb2YgdGhlCiAgICAgICAgICAgICd1bmktZGlyZWN0aW9uYWwtdG9wb2xvZ3ktcmVsYXRpb25zaGlwJyBzdGF0ZW1lbnQuCgogICAgICAgICAgICBUaGUgZGF0YSB0eXBlIG9mIHRoZSBwYXJlbnQgJ2xlYWYnIG9yICdsZWFmLWxpc3QnIE1VU1QgYmUKICAgICAgICAgICAgJ2luc3RhbmNlLWlkZW50aWZpZXInLiBDb25zdHJhaW50cyBNQVkgYmUgdXNlZCBhcyBwYXJ0IG9mIHRoZSBwYXJlbnQKICAgICAgICAgICAgJ2xlYWYnIG9yICdsZWFmLWxpc3QnIHRvIGVuZm9yY2UgY2FyZGluYWxpdHkuCgogICAgICAgICAgICBUaGUgaWRlbnRpZmllciBvZiB0aGUgcGFyZW50ICdsZWFmJyBvciAnbGVhZi1saXN0JyBpcyB1c2VkIGFzIG5hbWUKICAgICAgICAgICAgb2YgdGhlIHJvbGUgb2YgdGhlIEEtc2lkZSBvZiB0aGUgcmVsYXRpb25zaGlwLiBUaGUgbmFtZSBvZiB0aGUgcm9sZQogICAgICAgICAgICBpcyBzY29wZWQgdG8gdGhlIHR5cGUgb24gd2hpY2ggdGhlIEEtc2lkZSBpcyBkZWZpbmVkIGFuZCBNVVNUIGJlCiAgICAgICAgICAgIHVuaXF1ZSB3aXRoaW4gdGhlIHNjb3BlLgoKICAgICAgICAgICAgV2hpbGUgdGhlIHBhcmVudCAnbGVhZicgb3IgJ2xlYWYtbGlzdCcgZG9lcyBub3QgcmVzdWx0IGluIGEgcHJvcGVydHkKICAgICAgICAgICAgb2YgdGhlIHJlbGF0aW9uc2hpcCwgaXQgaXMgUkVDT01NRU5ERUQgdG8gYXZvaWQgdXNpbmcgdGhlIG5hbWUgb2YgYW4KICAgICAgICAgICAgZXhpc3RpbmcgdHlwZSBwcm9wZXJ0eSBhcyByb2xlIG5hbWUgdG8gYXZvaWQgcG90ZW50aWFsIGFtYmlndWl0aWVzCiAgICAgICAgICAgIGJldHdlZW4gcHJvcGVydGllcyBvZiBhIHR5cGUsIGFuZCByb2xlcyBvZiBhIHJlbGF0aW9uc2hpcCBvbiB0aGUKICAgICAgICAgICAgdHlwZS4KCiAgICAgICAgICAgIFRoZSBhcmd1bWVudCBpcyB0aGUgbmFtZSBvZiB0aGUgdHlwZSBvbiB3aGljaCB0aGUgQS1zaWRlIHJlc2lkZXMuCiAgICAgICAgICAgIElmIHRoZSB0eXBlIGlzIGRlY2xhcmVkIGluIGFub3RoZXIgbW9kdWxlLCB0aGUgdHlwZSBtdXN0IGJlCiAgICAgICAgICAgIHByZWZpeGVkLCBhbmQgYSBjb3JyZXNwb25kaW5nICdpbXBvcnQnIHN0YXRlbWVudCBiZSB1c2VkIHRvIGRlY2xhcmUKICAgICAgICAgICAgdGhlIHByZWZpeC4iOwoKICAgICAgICBhcmd1bWVudCBhU2lkZVR5cGU7CiAgICB9CgogICAgZXh0ZW5zaW9uIGJTaWRlIHsKICAgICAgICBkZXNjcmlwdGlvbgogICAgICAgICAgICAiRGVmaW5lcyB0aGUgQi1zaWRlIG9mIGEgcmVsYXRpb25zaGlwLgoKICAgICAgICAgICAgVGhlIHN0YXRlbWVudCBNVVNUIG9ubHkgYmUgYSBzdWJzdGF0ZW1lbnQgb2YgYSAnbGVhZicgb3IgJ2xlYWYtbGlzdCcKICAgICAgICAgICAgc3RhdGVtZW50LCB3aGljaCBpdHNlbGYgbXVzdCBiZSBhIHN1YnN0YXRlbWVudCBvZiB0aGUKICAgICAgICAgICAgJ3VuaS1kaXJlY3Rpb25hbC10b3BvbG9neS1yZWxhdGlvbnNoaXAnIHN0YXRlbWVudC4KCiAgICAgICAgICAgIFRoZSBkYXRhIHR5cGUgb2YgdGhlIHBhcmVudCAnbGVhZicgb3IgJ2xlYWYtbGlzdCcgTVVTVCBiZQogICAgICAgICAgICAnaW5zdGFuY2UtaWRlbnRpZmllcicuIENvbnN0cmFpbnRzIE1BWSBiZSB1c2VkIGFzIHBhcnQgb2YgdGhlIHBhcmVudAogICAgICAgICAgICAnbGVhZicgb3IgJ2xlYWYtbGlzdCcgdG8gZW5mb3JjZSBjYXJkaW5hbGl0eS4KCiAgICAgICAgICAgIFRoZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgJ2xlYWYnIG9yICdsZWFmLWxpc3QnIGlzIHVzZWQgYXMgbmFtZQogICAgICAgICAgICBvZiB0aGUgcm9sZSBvZiB0aGUgQi1zaWRlIG9mIHRoZSByZWxhdGlvbnNoaXAuIFRoZSBuYW1lIG9mIHRoZSByb2xlCiAgICAgICAgICAgIGlzIHNjb3BlZCB0byB0aGUgdHlwZSBvbiB3aGljaCB0aGUgQi1zaWRlIGlzIGRlZmluZWQgYW5kIE1VU1QgYmUKICAgICAgICAgICAgdW5pcXVlIHdpdGhpbiB0aGUgc2NvcGUuCgogICAgICAgICAgICBXaGlsZSB0aGUgcGFyZW50ICdsZWFmJyBvciAnbGVhZi1saXN0JyBkb2VzIG5vdCByZXN1bHQgaW4gYSBwcm9wZXJ0eQogICAgICAgICAgICBvZiB0aGUgcmVsYXRpb25zaGlwLCBpdCBpcyBSRUNPTU1FTkRFRCB0byBhdm9pZCB1c2luZyB0aGUgbmFtZSBvZiBhbgogICAgICAgICAgICBleGlzdGluZyB0eXBlIHByb3BlcnR5IGFzIHJvbGUgbmFtZSB0byBhdm9pZCBwb3RlbnRpYWwgYW1iaWd1aXRpZXMKICAgICAgICAgICAgYmV0d2VlbiBwcm9wZXJ0aWVzIG9mIGEgdHlwZSwgYW5kIHJvbGVzIG9mIGEgcmVsYXRpb25zaGlwIG9uIHRoZQogICAgICAgICAgICB0eXBlLgoKICAgICAgICAgICAgVGhlIGFyZ3VtZW50IGlzIHRoZSBuYW1lIG9mIHRoZSB0eXBlIG9uIHdoaWNoIHRoZSBCLXNpZGUgcmVzaWRlcy4KICAgICAgICAgICAgSWYgdGhlIHR5cGUgaXMgZGVjbGFyZWQgaW4gYW5vdGhlciBtb2R1bGUsIHRoZSB0eXBlIG11c3QgYmUKICAgICAgICAgICAgcHJlZml4ZWQsIGFuZCBhIGNvcnJlc3BvbmRpbmcgJ2ltcG9ydCcgc3RhdGVtZW50IGJlIHVzZWQgdG8gZGVjbGFyZQogICAgICAgICAgICB0aGUgcHJlZml4LiI7CgogICAgICAgIGFyZ3VtZW50IGJTaWRlVHlwZTsKICAgIH0KCiAgICBleHRlbnNpb24gZG9tYWluIHsKICAgICAgICBkZXNjcmlwdGlvbiAiS2V5d29yZCB1c2VkIHRvIGNhcnJ5IGRvbWFpbiBpbmZvcm1hdGlvbi4iOwogICAgICAgIGFyZ3VtZW50IGRvbWFpbk5hbWU7CiAgICB9CgogICAgZXh0ZW5zaW9uIGxhYmVsIHsKICAgICAgICBkZXNjcmlwdGlvbgogICAgICAgICAgICAiVGhlIGxhYmVsIGNhbiBiZSB1c2VkIHRvIGdpdmUgbW9kdWxlcyBhbmQgc3VibW9kdWxlcyBhIHNlbWFudGljCiAgICAgICAgICAgIHZlcnNpb24sIGluIGFkZGl0aW9uIHRvIHRoZWlyIHJldmlzaW9uLgoKICAgICAgICAgICAgVGhlIGZvcm1hdCBvZiB0aGUgbGFiZWwgaXMg4oCYeC55LnrigJkg4oCTIGV4cHJlc3NlZCBhcyBwYXR0ZXJuLCBpdCBpcwogICAgICAgICAgICBbMC05XStcXC5bMC05XStcXC5bMC05XSsKCiAgICAgICAgICAgIFRoZSBzdGF0ZW1lbnQgTVVTVCBvbmx5IGJlIGEgc3Vic3RhdGVtZW50IG9mIHRoZSByZXZpc2lvbiBzdGF0ZW1lbnQuCiAgICAgICAgICAgIFplcm8gb3Igb25lIHJldmlzaW9uIGxhYmVsIHN0YXRlbWVudHMgcGVyIHBhcmVudCBzdGF0ZW1lbnQgYXJlCiAgICAgICAgICAgIGFsbG93ZWQuCgogICAgICAgICAgICBSZXZpc2lvbiBsYWJlbHMgTVVTVCBiZSB1bmlxdWUgYW1vbmdzdCBhbGwgcmV2aXNpb25zIG9mIGEgbW9kdWxlIG9yCiAgICAgICAgICAgIHN1Ym1vZHVsZS4iOwoKICAgICAgICBhcmd1bWVudCBzZW12ZXJzaW9uOwogICAgfQp9
o-ran-smo-teiv-common-yang-types	urn:o-ran:smo-teiv-common-yang-types	\N	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLXR5cGVzIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1jb21tb24teWFuZy10eXBlcyI7CiAgICBwcmVmaXggb3ItdGVpdi10eXBlczsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7IHByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgXzNncHAtY29tbW9uLXlhbmctdHlwZXMgeyBwcmVmaXggdHlwZXMzZ3BwOyB9CgogICAgb3JnYW5pemF0aW9uICJFcmljc3NvbiBBQiI7CiAgICBjb250YWN0ICJFcmljc3NvbiBmaXJzdCBsaW5lIHN1cHBvcnQgdmlhIGVtYWlsIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiVG9wb2xvZ3kgYW5kIEludmVudG9yeSBjb21tb24gdHlwZXMgbW9kZWwuCgogICAgQ29weXJpZ2h0IChjKSAyMDI0IEVyaWNzc29uIEFCLiBBbGwgcmlnaHRzIHJlc2VydmVkLgoKICAgIFRoaXMgbW9kZWwgY29udGFpbnMgcmUtdXNhYmxlIGRhdGEgdHlwZXMgdGhhdCB0b3BvbG9neSBhbmQgaW52ZW50b3J5IG1vZGVscwogICAgd2lsbCBmcmVxdWVudGx5IHVzZSBhcyBwYXJ0IG9mIHR5cGVzIGFuZCByZWxhdGlvbnNoaXBzLiI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMjQiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBncm91cGluZyBUb3BfR3JwX1R5cGUgewogICAgICAgIGRlc2NyaXB0aW9uICJHcm91cGluZyBjb250YWluaW5nIHRoZSBrZXkgYXR0cmlidXRlIGNvbW1vbiB0byBhbGwgdHlwZXMuCiAgICAgICAgICAgIEFsbCB0eXBlcyBNVVNUIHVzZSB0aGlzIGdyb3VwaW5nLiI7CgogICAgICAgIGxlYWYgaWQgewogICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIlVuaXF1ZSBpZGVudGlmaWVyIG9mIHRvcG9sb2d5IGVudGl0aWVzLiBSZXByZXNlbnRzIHRoZQogICAgICAgICAgICAgICAgRW50aXR5IEluc3RhbmNlIElkZW50aWZpZXIuIjsKICAgICAgICB9CiAgICB9CgogICAgY29udGFpbmVyIGRlY29yYXRvcnMgewogICAgICAgIGRlc2NyaXB0aW9uCiAgICAgICAgICAgICJUaGlzIGNvbnRhaW5lciBzZXJ2ZXMgYXMgZXh0ZW5zaW9uIHBvaW50IGZvciBhcHBsaWNhdGlvbnMgd2lzaGluZwogICAgICAgICAgICB0byBkZWZpbmUgdGhlaXIgb3duIGRlY29yYXRvcnMuIFRoaXMgaXMgZG9uZSB2aWEgYXVnbWVudGF0aW9ucy4gVGhleQogICAgICAgICAgICBjYW4gb25seSBiZSBkZWZpbmVkIGluIG5hbWUgdmFsdWUgcGFpci4KCiAgICAgICAgICAgIFRoaXMgaXMgYSBjb25zdW1lciBkYXRhIGFuZCBjYW4gYmUgYXR0YWNoZWQgdG8gVG9wb2xvZ3kgRW50aXR5IG9yCiAgICAgICAgICAgIFRvcG9sb2d5IFJlbGF0aW9uIGluc3RhbmNlLCBvdXRzaWRlIG9mIHRoZSBkZWNsYXJlZCBUb3BvbG9neSBFbnRpdHkKICAgICAgICAgICAgb3IgVG9wb2xvZ3kgUmVsYXRpb25zaGlwJ3MgYXR0cmlidXRlcy4gVGhpcyBjYW5ub3QgYmUgaW5zdGFudGlhdGVkLAogICAgICAgICAgICBhbmQgaXQgTVVTVCBOT1QgYmUgYXVnbWVudGVkIG9yIGRldmlhdGVkIGluIGFueSB3YXksIHVubGVzcyBzdGF0ZWQKICAgICAgICAgICAgb3RoZXJ3aXNlLiI7CiAgICB9CgogICAgbGVhZi1saXN0IGNsYXNzaWZpZXJzIHsKICAgICAgICBkZXNjcmlwdGlvbgogICAgICAgICAgICAiQ29uc3VtZXIgZGVmaW5lZCB0YWdzIHRvIHRvcG9sb2d5IGVudGl0aWVzIGFuZCByZWxhdGlvbnNoaXBzLgoKICAgICAgICAgICAgVGhpcyBpcyBhIGNvbnN1bWVyIGRhdGEgYW5kIGNhbiBiZSBhdHRhY2hlZCB0byBUb3BvbG9neSBFbnRpdHkgb3IKICAgICAgICAgICAgVG9wb2xvZ3kgUmVsYXRpb24gaW5zdGFuY2UsIG91dHNpZGUgb2YgdGhlIGRlY2xhcmVkIFRvcG9sb2d5IEVudGl0eQogICAgICAgICAgICBvciBUb3BvbG9neSBSZWxhdGlvbnNoaXAncyBhdHRyaWJ1dGVzLiBUaGlzIGNhbm5vdCBiZSBpbnN0YW50aWF0ZWQsCiAgICAgICAgICAgIGFuZCBpdCBNVVNUIE5PVCBiZSBhdWdtZW50ZWQgb3IgZGV2aWF0ZWQgaW4gYW55IHdheSwgdW5sZXNzIHN0YXRlZAogICAgICAgICAgICBvdGhlcndpc2UuIjsKCiAgICAgICAgdHlwZSBpZGVudGl0eXJlZiB7IGJhc2UgY2xhc3NpZmllcjsgfQogICAgfQoKICAgIGxlYWYtbGlzdCBzb3VyY2VJZHMgewogICAgICAgIGRlc2NyaXB0aW9uCiAgICAgICAgICAgICJBbiBvcmRlcmVkIGxpc3Qgb2YgaWRlbnRpdGllcyB0aGF0IHJlcHJlc2VudCB0aGUgc2V0IG9mIG5hdGl2ZQogICAgICAgICAgICBzb3VyY2UgaWRlbnRpZmllcnMgZm9yIHBhcnRpY2lwYXRpbmcgZW50aXRpZXMuCgogICAgICAgICAgICBUaGlzIGlzIGEgY29uc3VtZXIgZGF0YSBhbmQgY2FuIGJlIGF0dGFjaGVkIHRvIFRvcG9sb2d5IEVudGl0eSBvcgogICAgICAgICAgICBUb3BvbG9neSBSZWxhdGlvbiBpbnN0YW5jZSwgb3V0c2lkZSBvZiB0aGUgZGVjbGFyZWQgVG9wb2xvZ3kgRW50aXR5CiAgICAgICAgICAgIG9yIFRvcG9sb2d5IFJlbGF0aW9uc2hpcCdzIGF0dHJpYnV0ZXMuIFRoaXMgY2Fubm90IGJlIGluc3RhbnRpYXRlZCwKICAgICAgICAgICAgYW5kIGl0IE1VU1QgTk9UIGJlIGF1Z21lbnRlZCBvciBkZXZpYXRlZCBpbiBhbnkgd2F5LCB1bmxlc3Mgc3RhdGVkCiAgICAgICAgICAgIG90aGVyd2lzZS4iOwoKICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICBvcmRlcmVkLWJ5IHVzZXI7CiAgICB9CgogICAgY29udGFpbmVyIG1ldGFkYXRhIHsKICAgICAgICBkZXNjcmlwdGlvbgogICAgICAgICAgICAiVGhpcyBjb250YWluZXIgc2VydmVzIGFzIGV4dGVuc2lvbiBwb2ludCB0byBkZWZpbmUgbWV0YWRhdGEuIFRoZXkKICAgICAgICAgICAgY2FuIG9ubHkgYmUgZGVmaW5lZCBpbiBuYW1lIHZhbHVlIHBhaXIuCgogICAgICAgICAgICBUaGlzIGlzIGEgY29uc3VtZXIgZGF0YSBhbmQgY2FuIGJlIGF0dGFjaGVkIHRvIFRvcG9sb2d5IEVudGl0eSBvcgogICAgICAgICAgICBUb3BvbG9neSBSZWxhdGlvbiBpbnN0YW5jZSwgb3V0c2lkZSBvZiB0aGUgZGVjbGFyZWQgVG9wb2xvZ3kgRW50aXR5CiAgICAgICAgICAgIG9yIFRvcG9sb2d5IFJlbGF0aW9uc2hpcCdzIGF0dHJpYnV0ZXMuIFRoaXMgY2Fubm90IGJlIGluc3RhbnRpYXRlZCwKICAgICAgICAgICAgYW5kIGl0IE1VU1QgTk9UIGJlIGF1Z21lbnRlZCBvciBkZXZpYXRlZCBpbiBhbnkgd2F5LCB1bmxlc3Mgc3RhdGVkCiAgICAgICAgICAgIG90aGVyd2lzZS4iOwogICAgfQoKICAgIGlkZW50aXR5IGNsYXNzaWZpZXJ7CiAgICAgICAgZGVzY3JpcHRpb24gIlRoZSBjbGFzc2lmaWVyIGlzIHVzZWQgYXMgYSBiYXNlIHRvIHByb3ZpZGUgYWxsIGNsYXNzaWZpZXJzCiAgICAgICAgICAgIHdpdGggaWRlbnRpdHkuICI7CiAgICB9Cn0=
o-ran-smo-teiv-equipment	urn:o-ran:smo-teiv-equipment	EQUIPMENT	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LWVxdWlwbWVudCB7CiAgICB5YW5nLXZlcnNpb24gMS4xOwogICAgbmFtZXNwYWNlICJ1cm46by1yYW46c21vLXRlaXYtZXF1aXBtZW50IjsKICAgIHByZWZpeCBvci10ZWl2LWVxdWlwOwoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1jb21tb24teWFuZy10eXBlcyB7IHByZWZpeCBvci10ZWl2LXR5cGVzOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMgeyBwcmVmaXggb3ItdGVpdi15ZXh0OyB9CgogICAgaW1wb3J0IGlldGYtZ2VvLWxvY2F0aW9uIHsKICAgICAgICBwcmVmaXggZ2VvOwogICAgICAgIHJlZmVyZW5jZSAiUkZDIDkxNzk6IEEgWUFORyBHcm91cGluZyBmb3IgR2VvZ3JhcGhpYyBMb2NhdGlvbnMiOwogICAgfQoKICAgIG9yZ2FuaXphdGlvbiAiRXJpY3Nzb24gQUIiOwogICAgY29udGFjdCAiRXJpY3Nzb24gZmlyc3QgbGluZSBzdXBwb3J0IHZpYSBlbWFpbCI7CiAgICBkZXNjcmlwdGlvbgogICAgIkVxdWlwbWVudCB0b3BvbG9neSBtb2RlbC4KCiAgICBDb3B5cmlnaHQgKGMpIDIwMjQgRXJpY3Nzb24gQUIuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgdG9wb2xvZ3kgZW50aXRpZXMgYW5kIHJlbGF0aW9ucyBpbiB0aGUgRXF1aXBtZW50CiAgICBkb21haW4sIHdoaWNoIGlzIG1vZGVsbGVkIHRvIHVuZGVyc3RhbmQgdGhlIHBoeXNpY2FsIGxvY2F0aW9uIG9mIGVxdWlwbWVudAogICAgc3VjaCBhcyBhbnRlbm5hcyBhc3NvY2lhdGVkIHdpdGggYSBjZWxsL2NhcnJpZXIgYW5kIHRoZWlyIHJlbGV2YW50CiAgICBwcm9wZXJ0aWVzIGUuZy4gdGlsdCwgbWF4IHBvd2VyIGV0Yy4iOwoKICAgIHJldmlzaW9uICIyMDI0LTA1LTI0IiB7CiAgICAgICAgZGVzY3JpcHRpb24gIkluaXRpYWwgcmV2aXNpb24uIjsKICAgICAgICBvci10ZWl2LXlleHQ6bGFiZWwgMC4zLjA7CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmRvbWFpbiBFUVVJUE1FTlQ7CgogICAgbGlzdCBBbnRlbm5hTW9kdWxlIHsKICAgICAgICBkZXNjcmlwdGlvbiAiQW4gQW50ZW5uYSBNb2R1bGUgcmVwcmVzZW50cyB0aGUgcGh5c2ljYWwgYXNwZWN0IG9mIGFuCiAgICAgICAgICAgIGFudGVubmEuIjsKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGNvbnRhaW5lciBhdHRyaWJ1dGVzIHsKICAgICAgICAgICAgbGVhZiBhbnRlbm5hTW9kZWxOdW1iZXIgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIlZlbmRvci1zcGVjaWZpYyBhbnRlbm5hIG1vZGVsIGlkZW50aWZpZXIuIFRoaXMKICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGUgaXMgcGFydCBvZiBBSVNHIHYzIEFEQiBTdGFuZGFyZCBhbmQgaGFzIG5vCiAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uYWwgaW1wYWN0LiI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGVhZiBtZWNoYW5pY2FsQW50ZW5uYUJlYXJpbmcgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgYmVhcmluZyBvbiBhbnRlbm5hIHN1YnVuaXQgd2hlcmUgYW50ZW5uYQogICAgICAgICAgICAgICAgICAgIHVuaXQgaXMgaW5zdGFsbGVkLiI7CiAgICAgICAgICAgICAgICB0eXBlIGludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIG1lY2hhbmljYWxBbnRlbm5hVGlsdCB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiVGhlIGZpeGVkIGFudGVubmEgdGlsdCBvZiB0aGUgaW5zdGFsbGF0aW9uLCBkZWZpbmVkCiAgICAgICAgICAgICAgICAgICAgYXMgdGhlIGluY2xpbmF0aW9uIG9mIHRoZSBhbnRlbm5hIGVsZW1lbnQgcmVzcGVjdCB0byB0aGUKICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbCBwbGFuZS4gSXQgaXMgYSBzaWduZWQgdmFsdWUuIFBvc2l0aXZlIGluZGljYXRlcwogICAgICAgICAgICAgICAgICAgIGRvd250aWx0LCBhbmQgbmVnYXRpdmUgaW5kaWNhdGVzIHVwdGlsdC4iOwogICAgICAgICAgICAgICAgdHlwZSBpbnQzMjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGVhZiBwb3NpdGlvbldpdGhpblNlY3RvciB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiQW50ZW5uYSB1bml0IHBvc2l0aW9uIHdpdGhpbiBzZWN0b3IuIFRoaXMgYXR0cmlidXRlCiAgICAgICAgICAgICAgICAgICAgaXMgcGFydCBvZiBBSVNHIHYzIEFEQiBTdGFuZGFyZCBhbmQgaGFzIG5vIG9wZXJhdGlvbmFsCiAgICAgICAgICAgICAgICAgICAgaW1wYWN0LiI7CiAgICAgICAgICAgICAgICB0eXBlIHN0cmluZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGVhZiB0b3RhbFRpbHQgewogICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gIlRvdGFsIGFudGVubmEgZWxldmF0aW9uIGluY2x1ZGluZyB0aGUgaW5zdGFsbGVkCiAgICAgICAgICAgICAgICAgICAgdGlsdCBhbmQgdGhlIHRpbHQgYXBwbGllZCBieSB0aGUgUmVtb3RlIEVsZWN0cmljYWwKICAgICAgICAgICAgICAgICAgICBUaWx0IChSRVQpLiI7CiAgICAgICAgICAgICAgICB0eXBlIGludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmIGVsZWN0cmljYWxBbnRlbm5hVGlsdCB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiRWxlY3RyaWNhbGx5LWNvbnRyb2xsZWQgdGlsdCBvZiBtYWluIGJlYW0gbWF4aW11bQogICAgICAgICAgICAgICAgICAgIHdpdGggcmVzcGVjdCB0byBkaXJlY3Rpb24gb3J0aG9nb25hbCB0byBhbnRlbm5hIGVsZW1lbnQKICAgICAgICAgICAgICAgICAgICBheGlzIChzZWUgM0dQUCBUUyAyNS40NjYpLiBWYWx1ZSBpcyBzaWduZWQ7IHRpbHQgZG93biBpcwogICAgICAgICAgICAgICAgICAgIHBvc2l0aXZlLCB0aWx0IHVwIGlzIG5lZ2F0aXZlLiI7CiAgICAgICAgICAgICAgICB0eXBlIGludDMyOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZWFmLWxpc3QgYW50ZW5uYUJlYW1XaWR0aCB7CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiAiVGhlIGFuZ3VsYXIgc3BhbiBvZiB0aGUgbWFpbiBsb2JlIG9mIHRoZSBhbnRlbm5hCiAgICAgICAgICAgICAgICAgICAgcmFkaWF0aW9uIHBhdHRlcm4gaW4gdGhlIGhvcml6b250YWwgcGxhbmUuIE1lYXN1cmVkIGluCiAgICAgICAgICAgICAgICAgICAgZGVncmVlcy4iOwogICAgICAgICAgICAgICAgdHlwZSB1aW50MzI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHVzZXMgZ2VvOmdlby1sb2NhdGlvbjsKICAgICAgICB9CiAgICB9CgogICAgbGlzdCBTaXRlIHsKICAgICAgICBkZXNjcmlwdGlvbiAiQSBzaXRlIGlzIGEgcGh5c2ljYWwgbG9jYXRpb24gd2hlcmUgYW4gZXF1aXBtZW50IGNhbiBiZQogICAgICAgICAgICBpbnN0YWxsZWQuIjsKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGNvbnRhaW5lciBhdHRyaWJ1dGVzIHsKICAgICAgICAgICAgbGVhZiBuYW1lIHsKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICJOYW1lIG9mIFNpdGUiOwogICAgICAgICAgICAgICAgdHlwZSBzdHJpbmc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHVzZXMgZ2VvOmdlby1sb2NhdGlvbjsKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBBTlRFTk5BTU9EVUxFX0lOU1RBTExFRF9BVF9TSVRFIHsgLy8gMC4ubiB0byAwLi4xCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmIGluc3RhbGxlZC1hdC1zaXRlIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgTW9kdWxlIGluc3RhbGxlZCBhdCBTaXRlLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBBbnRlbm5hTW9kdWxlOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmLWxpc3QgaW5zdGFsbGVkLWFudGVubmFNb2R1bGUgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiU2l0ZSB3aGVyZSBBbnRlbm5hIE1vZHVsZSBpcyBpbnN0YWxsZWQuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIFNpdGU7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9Cn0=
o-ran-smo-teiv-oam	urn:o-ran:smo-teiv-oam	OAM	[]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LW9hbSB7CiAgICB5YW5nLXZlcnNpb24gMS4xOwogICAgbmFtZXNwYWNlICJ1cm46by1yYW46c21vLXRlaXYtb2FtIjsKICAgIHByZWZpeCBvci10ZWl2LW9hbTsKCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctdHlwZXMgeyBwcmVmaXggb3ItdGVpdi10eXBlczsgfQoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1jb21tb24teWFuZy1leHRlbnNpb25zIHsgcHJlZml4IG9yLXRlaXYteWV4dDsgfQoKICAgIG9yZ2FuaXphdGlvbiAiRXJpY3Nzb24gQUIiOwogICAgY29udGFjdCAiRXJpY3Nzb24gZmlyc3QgbGluZSBzdXBwb3J0IHZpYSBlbWFpbCI7CiAgICBkZXNjcmlwdGlvbgogICAgIk8mTSB0b3BvbG9neSBtb2RlbC4KCiAgICBDb3B5cmlnaHQgKGMpIDIwMjQgRXJpY3Nzb24gQUIuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgdG9wb2xvZ3kgZW50aXRpZXMgYW5kIHJlbGF0aW9ucyBpbiB0aGUgTyZNIGRvbWFpbiwKICAgIHdoaWNoIGFyZSBpbnRlbmRlZCB0byByZXByZXNlbnQgbWFuYWdlbWVudCBzeXN0ZW1zIGFuZCBtYW5hZ2VtZW50CiAgICBpbnRlcmZhY2VzLiI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMjQiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBvci10ZWl2LXlleHQ6ZG9tYWluIE9BTTsKCiAgICBsaXN0IE1hbmFnZWRFbGVtZW50IHsKICAgICAgICBkZXNjcmlwdGlvbiAiQSBNYW5hZ2VkIEVsZW1lbnQgKE1FKSBpcyBhIG5vZGUgaW50byBhIHRlbGVjb21tdW5pY2F0aW9uCiAgICAgICAgICAgIG5ldHdvcmsgcHJvdmlkaW5nIHN1cHBvcnQgYW5kL29yIHNlcnZpY2UgdG8gc3Vic2NyaWJlcnMuIEFuIE1FCiAgICAgICAgICAgIGNvbW11bmljYXRlcyB3aXRoIGEgbWFuYWdlciBhcHBsaWNhdGlvbiAoZGlyZWN0bHkgb3IgaW5kaXJlY3RseSkKICAgICAgICAgICAgb3ZlciBvbmUgb3IgbW9yZSBpbnRlcmZhY2VzIGZvciB0aGUgcHVycG9zZSBvZiBiZWluZyBtb25pdG9yZWQKICAgICAgICAgICAgYW5kL29yIGNvbnRyb2xsZWQuIjsKCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CiAgICB9Cn0=
o-ran-smo-teiv-ran	urn:o-ran:smo-teiv-ran	RAN	[]	2024-05-24	
o-ran-smo-teiv-rel-equipment-ran	urn:o-ran:smo-teiv-rel-equipment-ran	REL_EQUIPMENT_RAN	["o-ran-smo-teiv-equipment", "o-ran-smo-teiv-ran"]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LXJlbC1lcXVpcG1lbnQtcmFuIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1yZWwtZXF1aXBtZW50LXJhbiI7CiAgICBwcmVmaXggb3ItdGVpdi1yZWwtZXF1aXByYW47CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLXR5cGVzIHsgcHJlZml4IG9yLXRlaXYtdHlwZXM7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtY29tbW9uLXlhbmctZXh0ZW5zaW9ucyB7IHByZWZpeCBvci10ZWl2LXlleHQ7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtZXF1aXBtZW50IHsgcHJlZml4IG9yLXRlaXYtZXF1aXA7IH0KCiAgICBpbXBvcnQgby1yYW4tc21vLXRlaXYtcmFuIHsgcHJlZml4IG9yLXRlaXYtcmFuOyB9CgogICAgb3JnYW5pemF0aW9uICJFcmljc3NvbiBBQiI7CiAgICBjb250YWN0ICJFcmljc3NvbiBmaXJzdCBsaW5lIHN1cHBvcnQgdmlhIGVtYWlsIjsKICAgIGRlc2NyaXB0aW9uCiAgICAiRXF1aXBtZW50IGFuZCBSQU4gdG9wb2xvZ3kgcmVsYXRpb24gbW9kZWwuCgogICAgQ29weXJpZ2h0IChjKSAyMDI0IEVyaWNzc29uIEFCLiBBbGwgcmlnaHRzIHJlc2VydmVkLgoKICAgIFRoaXMgbW9kZWwgY29udGFpbnMgdGhlIHRvcG9sb2d5IHJlbGF0aW9ucyBiZXR3ZWVuIEVxdWlwbWVudCBhbmQgUkFOLiI7CgogICAgcmV2aXNpb24gIjIwMjQtMDUtMjQiIHsKICAgICAgICBkZXNjcmlwdGlvbiAiSW5pdGlhbCByZXZpc2lvbi4iOwogICAgICAgIG9yLXRlaXYteWV4dDpsYWJlbCAwLjMuMDsKICAgIH0KCiAgICBvci10ZWl2LXlleHQ6ZG9tYWluIFJFTF9FUVVJUE1FTlRfUkFOOwoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgQU5URU5OQU1PRFVMRV9TRVJWRVNfQU5URU5OQUNBUEFCSUxJVFkgeyAvLyAwLi5uIHRvIDAuLm0KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBzZXJ2aWNlZC1hbnRlbm5hQ2FwYWJpbGl0eSB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJBbnRlbm5hIENhcGFiaWxpdHkgc2VydmljZWQgYnkgdGhpcyBBbnRlbm5hIE1vZHVsZS4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgb3ItdGVpdi1lcXVpcDpBbnRlbm5hTW9kdWxlOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmLWxpc3Qgc2VydmluZy1hbnRlbm5hTW9kdWxlIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgTW9kdWxlIHNlcnZlcyB0aGlzIEFudGVubmEgQ2FwYWJpbGl0eS4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YlNpZGUgb3ItdGVpdi1yYW46QW50ZW5uYUNhcGFiaWxpdHk7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmJpRGlyZWN0aW9uYWxUb3BvbG9neVJlbGF0aW9uc2hpcCBTRUNUT1JfR1JPVVBTX0FOVEVOTkFNT0RVTEUgeyAvLyAwLi4xIHRvIDAuLm4KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBncm91cGVkLWFudGVubmFNb2R1bGUgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiU2VjdG9yIGdyb3VwcyBBbnRlbm5hIE1vZHVsZS4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgb3ItdGVpdi1yYW46U2VjdG9yOwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmIGdyb3VwZWQtYnktc2VjdG9yIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIkFudGVubmEgTW9kdWxlIGdyb3VwZWQgYnkgU2VjdG9yLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LWVxdWlwOkFudGVubmFNb2R1bGU7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CiAgICB9Cn0=
o-ran-smo-teiv-rel-oam-ran	urn:o-ran:smo-teiv-rel-oam-ran	REL_OAM_RAN	["o-ran-smo-teiv-oam", "o-ran-smo-teiv-ran"]	2024-05-24	bW9kdWxlIG8tcmFuLXNtby10ZWl2LXJlbC1vYW0tcmFuIHsKICAgIHlhbmctdmVyc2lvbiAxLjE7CiAgICBuYW1lc3BhY2UgInVybjpvLXJhbjpzbW8tdGVpdi1yZWwtb2FtLXJhbiI7CiAgICBwcmVmaXggb3ItdGVpdi1yZWwtb2FtcmFuOwoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1jb21tb24teWFuZy10eXBlcyB7IHByZWZpeCBvci10ZWl2LXR5cGVzOyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LWNvbW1vbi15YW5nLWV4dGVuc2lvbnMgeyBwcmVmaXggb3ItdGVpdi15ZXh0OyB9CgogICAgaW1wb3J0IG8tcmFuLXNtby10ZWl2LW9hbSB7IHByZWZpeCBvci10ZWl2LW9hbTsgfQoKICAgIGltcG9ydCBvLXJhbi1zbW8tdGVpdi1yYW4geyBwcmVmaXggb3ItdGVpdi1yYW47IH0KCiAgICBvcmdhbml6YXRpb24gIk9SQU4iOwogICAgY29udGFjdCAiVGhlIEF1dGhvcnMiOwogICAgZGVzY3JpcHRpb24KICAgICJSQU4gTyZNIHRvIExvZ2ljYWwgdG9wb2xvZ3kgbW9kZWwuCgogICAgVGhpcyBtb2RlbCBjb250YWlucyB0aGUgUkFOIE8mTSB0byBMb2dpY2FsIHRvcG9sb2d5IHJlbGF0aW9ucwoKICAgIENvcHlyaWdodCAoQykgMjAyNCBFcmljc3NvbgogICAgTW9kaWZpY2F0aW9ucyBDb3B5cmlnaHQgKEMpIDIwMjQgT3BlbkluZnJhIEZvdW5kYXRpb24gRXVyb3BlCgogICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsKICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoKICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywKICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCgogICAgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAiOwoKICAgIHJldmlzaW9uICIyMDI0LTA1LTI0IiB7CiAgICAgICAgZGVzY3JpcHRpb24gIkluaXRpYWwgcmV2aXNpb24uIjsKICAgICAgICBvci10ZWl2LXlleHQ6bGFiZWwgMC4zLjA7CiAgICB9CgogICAgb3ItdGVpdi15ZXh0OmRvbWFpbiBSRUxfT0FNX1JBTjsKCiAgICBvci10ZWl2LXlleHQ6YmlEaXJlY3Rpb25hbFRvcG9sb2d5UmVsYXRpb25zaGlwIE1BTkFHRURFTEVNRU5UX01BTkFHRVNfRU5PREVCRlVOQ1RJT04geyAgIC8vIDEgdG8gMC4ubgoKICAgICAgICB1c2VzIG9yLXRlaXYtdHlwZXM6VG9wX0dycF9UeXBlOwogICAgICAgIGtleSBpZDsKCiAgICAgICAgbGVhZi1saXN0IG1hbmFnZWQtZW5vZGViRnVuY3Rpb24gewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiTWFuYWdlZCBFbGVtZW50IG1hbmFnZXMgZU5vZGVCIEZ1bmN0aW9uLiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDphU2lkZSBvci10ZWl2LW9hbTpNYW5hZ2VkRWxlbWVudDsKICAgICAgICAgICAgdHlwZSBpbnN0YW5jZS1pZGVudGlmaWVyOwogICAgICAgIH0KCiAgICAgICAgbGVhZiBtYW5hZ2VkLWJ5LW1hbmFnZWRFbGVtZW50IHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gImVOb2RlQiBGdW5jdGlvbiBtYW5hZ2VkIGJ5IE1hbmFnZWQgRWxlbWVudC4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YlNpZGUgb3ItdGVpdi1yYW46RU5vZGVCRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJEVUZVTkNUSU9OIHsgICAgLy8gMSB0byAwLi5uCgogICAgICAgIHVzZXMgb3ItdGVpdi10eXBlczpUb3BfR3JwX1R5cGU7CiAgICAgICAga2V5IGlkOwoKICAgICAgICBsZWFmLWxpc3QgbWFuYWdlZC1nbmJkdUZ1bmN0aW9uIHsKICAgICAgICAgICAgZGVzY3JpcHRpb24gIk1hbmFnZWQgRWxlbWVudCBtYW5hZ2VzIGdOb2RlQi1EVSBGdW5jdGlvbi4iOwogICAgICAgICAgICBvci10ZWl2LXlleHQ6YVNpZGUgb3ItdGVpdi1vYW06TWFuYWdlZEVsZW1lbnQ7CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICB9CgogICAgICAgIGxlYWYgbWFuYWdlZC1ieS1tYW5hZ2VkRWxlbWVudCB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJnTm9kZUItRFUgRnVuY3Rpb24gbWFuYWdlZCBieSBNYW5hZ2VkIEVsZW1lbnQuIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmJTaWRlIG9yLXRlaXYtcmFuOkdOQkRVRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJDVUNQRlVOQ1RJT04geyAgICAvLyAxIHRvIDAuLm4KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBtYW5hZ2VkLWduYmN1Y3BGdW5jdGlvbiB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJNYW5hZ2VkIEVsZW1lbnQgbWFuYWdlcyBnTm9kZUItQ1UtQ1AgRnVuY3Rpb24uIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtb2FtOk1hbmFnZWRFbGVtZW50OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmIG1hbmFnZWQtYnktbWFuYWdlZEVsZW1lbnQgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLUNVLUNQIEZ1bmN0aW9uIG1hbmFnZWQgYnkgTWFuYWdlZCBFbGVtZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LXJhbjpHTkJDVUNQRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQoKICAgIG9yLXRlaXYteWV4dDpiaURpcmVjdGlvbmFsVG9wb2xvZ3lSZWxhdGlvbnNoaXAgTUFOQUdFREVMRU1FTlRfTUFOQUdFU19HTkJDVVVQRlVOQ1RJT04geyAgICAvLyAxIHRvIDAuLm4KCiAgICAgICAgdXNlcyBvci10ZWl2LXR5cGVzOlRvcF9HcnBfVHlwZTsKICAgICAgICBrZXkgaWQ7CgogICAgICAgIGxlYWYtbGlzdCBtYW5hZ2VkLWduYmN1dXBGdW5jdGlvbiB7CiAgICAgICAgICAgIGRlc2NyaXB0aW9uICJNYW5hZ2VkIEVsZW1lbnQgbWFuYWdlcyBnTm9kZUItQ1UtVVAgRnVuY3Rpb24uIjsKICAgICAgICAgICAgb3ItdGVpdi15ZXh0OmFTaWRlIG9yLXRlaXYtb2FtOk1hbmFnZWRFbGVtZW50OwogICAgICAgICAgICB0eXBlIGluc3RhbmNlLWlkZW50aWZpZXI7CiAgICAgICAgfQoKICAgICAgICBsZWFmIG1hbmFnZWQtYnktbWFuYWdlZEVsZW1lbnQgewogICAgICAgICAgICBkZXNjcmlwdGlvbiAiZ05vZGVCLUNVLVVQIEZ1bmN0aW9uIG1hbmFnZWQgYnkgTWFuYWdlZCBFbGVtZW50LiI7CiAgICAgICAgICAgIG9yLXRlaXYteWV4dDpiU2lkZSBvci10ZWl2LXJhbjpHTkJDVVVQRnVuY3Rpb247CiAgICAgICAgICAgIHR5cGUgaW5zdGFuY2UtaWRlbnRpZmllcjsKICAgICAgICAgICAgbWFuZGF0b3J5IHRydWU7CiAgICAgICAgfQogICAgfQp9
\.


COPY ties_model.entity_info("storedAt", "name", "moduleReferenceName") FROM stdin;
o-ran-smo-teiv-ran-oam_ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	o-ran-smo-teiv-ran-oam
o-ran-smo-teiv-ran-oam_ManagedElement	ManagedElement	o-ran-smo-teiv-ran-oam
o-ran-smo-teiv-ran-cloud_NodeCluster	NodeCluster	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_CloudNativeSystem	CloudNativeSystem	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_CloudNativeApplication	CloudNativeApplication	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_CloudSite	CloudSite	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_Namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	Namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-cloud_Namespace	Namespace	o-ran-smo-teiv-ran-cloud
o-ran-smo-teiv-ran-logical-to-equipment_Sector	Sector	o-ran-smo-teiv-ran-logical-to-equipment
o-ran-smo-teiv-ran-logical_GNBCUUPFunction	GNBCUUPFunction	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_ENodeBFunction	ENodeBFunction	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU	NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_NRCellDU	NRCellDU	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_LTESectorCarrier	LTESectorCarrier	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_GNBDUFunction	GNBDUFunction	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_NRCellCU	NRCellCU	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-equipment_AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-equipment
o-ran-smo-teiv-ran-logical_EUtranCell	EUtranCell	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_GNBCUCPFunction	GNBCUCPFunction	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_NRSectorCarrier	NRSectorCarrier	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_AntennaCapability	AntennaCapability	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_TestEntityB	TestEntityB	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-logical_TestEntityA	TestEntityA	o-ran-smo-teiv-ran-logical
o-ran-smo-teiv-ran-equipment_Site	Site	o-ran-smo-teiv-ran-equipment
o-ran-smo-teiv-ran-equipment_AntennaModule	AntennaModule	o-ran-smo-teiv-ran-equipment
o-ran-smo-teiv-ran-equipment_PhysicalNetworkAppliance	PhysicalNetworkAppliance	o-ran-smo-teiv-ran-equipment
\.

COPY ties_model.relationship_info("name", "aSideAssociationName", "aSideMOType", "aSideModule", "aSideMinCardinality", "aSideMaxCardinality", "bSideAssociationName", "bSideMOType", "bSideModule", "bSideMinCardinality", "bSideMaxCardinality", "associationKind", "relationshipDataLocation", "storedAt", "connectSameEntity", "moduleReferenceName") FROM stdin;
MANAGEDELEMENTTTTTTTTTTTTTTT_MANAGES_GNBDUFUNCTIONNNNNNNNNNNNNNN	managed-gnbduFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	o-ran-smo-teiv-ran-oam	1	1	managed-by-managedElementttttttttttttttttttttttttttttttttttttttt	GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	false	o-ran-smo-teiv-ran-oam-to-logical
MANAGEDELEMENTTTTTTTTTTT_DEPLOYED_AS_CLOUDNATIVESYSTEMMMMMMMMMMM	deployed-as-cloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	o-ran-smo-teiv-ran-oam	1	1	deployed-managedElementttttttttttttttttttttttttttttttttttttttttt	CloudNativeSystemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm	o-ran-smo-teiv-ran-cloud	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-oam_ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	false	o-ran-smo-teiv-ran-oam-to-cloud
MANAGEDELEMENTTTTTTTTT_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNN	realised-by-cloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	ManagedElementtttttttttttttttttttttttttttttttttttttttttttttttttt	o-ran-smo-teiv-ran-oam	1	1	realised-managedElementttttttttttttttttttttttttttttttttttttttttt	CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-cloud	1	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-cloud_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	false	o-ran-smo-teiv-ran-oam-to-cloud
MANAGEDELEMENT_MANAGES_ENODEBFUNCTION	managed-enodebFunction	ManagedElement	o-ran-smo-teiv-ran-oam	1	1	managed-by-managedElement	ENodeBFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_ENodeBFunction	false	o-ran-smo-teiv-ran-oam-to-logical
MANAGEDELEMENT_MANAGES_GNBCUCPFUNCTION	managed-gnbcucpFunction	ManagedElement	o-ran-smo-teiv-ran-oam	1	1	managed-by-managedElement	GNBCUCPFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_GNBCUCPFunction	false	o-ran-smo-teiv-ran-oam-to-logical
MANAGEDELEMENT_MANAGES_GNBCUUPFUNCTION	managed-gnbcuupFunction	ManagedElement	o-ran-smo-teiv-ran-oam	1	1	managed-by-managedElement	GNBCUUPFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_GNBCUUPFunction	false	o-ran-smo-teiv-ran-oam-to-logical
MANAGEDELEMENT_REALISED_BY_CLOUDNATIVEAPPLICATION	realised-by-cloudNativeApplication	ManagedElement	o-ran-smo-teiv-ran-oam	1	1	realised-managedElement	CloudNativeApplication	o-ran-smo-teiv-ran-cloud	1	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-cloud_CloudNativeApplication	false	o-ran-smo-teiv-ran-oam-to-cloud
MANAGEDELEMENT_MANAGES_GNBDUFUNCTION	managed-gnbduFunction	ManagedElement	o-ran-smo-teiv-ran-oam	1	1	managed-by-managedElement	GNBDUFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_GNBDUFunction	false	o-ran-smo-teiv-ran-oam-to-logical
MANAGEDELEMENT_DEPLOYED_AS_CLOUDNATIVESYSTEM	deployed-as-cloudNativeSystem	ManagedElement	o-ran-smo-teiv-ran-oam	1	1	deployed-managedElement	CloudNativeSystem	o-ran-smo-teiv-ran-cloud	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-oam_ManagedElement	false	o-ran-smo-teiv-ran-oam-to-cloud
NODECLUSTER_LOCATED_AT_CLOUDSITE	located-at-cloudSite	NodeCluster	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	location-of-nodeCluster	CloudSite	o-ran-smo-teiv-ran-cloud	1	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-cloud_NodeCluster	false	o-ran-smo-teiv-ran-cloud
CLOUDNATIVESYSTEM_COMPRISES_CLOUDNATIVEAPPLICATION	comprised-cloudNativeApplication	CloudNativeSystem	o-ran-smo-teiv-ran-cloud	0	1	comprised-by-cloudNativeSystem	CloudNativeApplication	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-cloud_CloudNativeApplication	false	o-ran-smo-teiv-ran-cloud
CLOUDNATIVEAPPLICATION_DEPLOYED_ON_NAMESPACE	deployed-on-namespace	CloudNativeApplication	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	deployed-cloudNativeApplication	Namespace	o-ran-smo-teiv-ran-cloud	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-cloud_CloudNativeApplication	false	o-ran-smo-teiv-ran-cloud
CLOUDNATIVEAPPLICATIONNNNNNNNNNN_DEPLOYED_ON_NAMESPACEEEEEEEEEEE	deployed-on-namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	deployed-cloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	Namespaceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-cloud	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-cloud_CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	false	o-ran-smo-teiv-ran-cloud
NAMESPACE_DEPLOYED_ON_NODECLUSTER	deployed-on-nodeCluster	Namespace	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	deployed-namespace	NodeCluster	o-ran-smo-teiv-ran-cloud	1	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-cloud_Namespace	false	o-ran-smo-teiv-ran-cloud
SECTOR_GROUPS_EUTRANCELL	grouped-euTranCell	Sector	o-ran-smo-teiv-ran-logical-to-equipment	0	1	grouped-by-sector	EUtranCell	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_EUtranCell	false	o-ran-smo-teiv-ran-logical-to-equipment
SECTOR_GROUPS_ANTENNAMODULE	grouped-antennaModule	Sector	o-ran-smo-teiv-ran-logical-to-equipment	0	1	grouped-by-sector	AntennaModule	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-equipment_AntennaModule	false	o-ran-smo-teiv-ran-logical-to-equipment
SECTOR_GROUPS_NRCELLDU	grouped-nrCellDu	Sector	o-ran-smo-teiv-ran-logical-to-equipment	0	1	grouped-by-sector	NRCellDU	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_NRCellDU	false	o-ran-smo-teiv-ran-logical-to-equipment
GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	realised-by-cloudNativeApplication	GNBCUUPFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	realised-gnbcuupFunction	CloudNativeApplication	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical-to-cloud_GNBCUUPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	false	o-ran-smo-teiv-ran-logical-to-cloud
ENODEBFUNCTION_PROVIDES_EUTRANCELL	provided-euTranCell	ENodeBFunction	o-ran-smo-teiv-ran-logical	1	1	provided-by-enodebFunction	EUtranCell	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_EUtranCell	false	o-ran-smo-teiv-ran-logical
ENODEBFUNCTION_PROVIDES_LTESECTORCARRIER	provided-lteSectorCarrier	ENodeBFunction	o-ran-smo-teiv-ran-logical	1	1	provided-by-enodebFunction	LTESectorCarrier	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_LTESectorCarrier	false	o-ran-smo-teiv-ran-logical
ENODEBFUNCTION_REALISED_BY_PHYSICALNETWORKAPPLIANCE	realised-by-physicalNetworkAppliance	ENodeBFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	realised-enodebFunction	PhysicalNetworkAppliance	o-ran-smo-teiv-ran-equipment	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-logical_ENodeBFunction	false	o-ran-smo-teiv-ran-logical-to-equipment
NRCELLDU_USES_NRSECTORCARRIER	used-nrSectorCarrier	NRCellDU	o-ran-smo-teiv-ran-logical	0	1	used-by-nrCellDu	NRSectorCarrier	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_NRSectorCarrier	false	o-ran-smo-teiv-ran-logical
LTESECTORCARRIER_USES_ANTENNACAPABILITY	used-antennaCapability	LTESectorCarrier	o-ran-smo-teiv-ran-logical	0	1	used-by-lteSectorCarrier	AntennaCapability	o-ran-smo-teiv-ran-logical	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-logical_LTESectorCarrier	false	o-ran-smo-teiv-ran-logical
GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	realised-by-cloudNativeApplication	GNBDUFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	realised-gnbduFunction	CloudNativeApplication	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical-to-cloud_GNBDUFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	false	o-ran-smo-teiv-ran-logical-to-cloud
GNBDUFUNCTION_PROVIDES_NRSECTORCARRIER	provided-nrSectorCarrier	GNBDUFunction	o-ran-smo-teiv-ran-logical	1	1	provided-by-gnbduFunction	NRSectorCarrier	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_NRSectorCarrier	false	o-ran-smo-teiv-ran-logical
GNBDUFUNCTION_PROVIDES_NRCELLDU	provided-nrCellDu	GNBDUFunction	o-ran-smo-teiv-ran-logical	1	1	provided-by-gnbduFunction	NRCellDU	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_NRCellDU	false	o-ran-smo-teiv-ran-logical
GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN	realised-by-cloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-logical	0	9223372036854775807	realised-gnbduFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	CloudNativeApplicationnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical-to-cloud_GNBDUFUNCTIONNNNNNNNN_REALISED_BY_CLOUDNATIVEAPPLICATIONNNNNNNNN	false	o-ran-smo-teiv-ran-logical-to-cloud
GNBDUFUNCTIONNNNNNNNNNNNNNUUU_PROVIDES_NRCELLDUUUUUUUUUUUUUUUUUU	provided-nrCellDuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu	GNBDUFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	o-ran-smo-teiv-ran-logical	1	1	provided-by-gnbduFunctionnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn	NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_NRCellDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU	false	o-ran-smo-teiv-ran-logical
EUTRANCELL_USES_LTESECTORCARRIER	used-lteSectorCarrier	EUtranCell	o-ran-smo-teiv-ran-logical	0	1	used-by-euTranCell	LTESectorCarrier	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_LTESectorCarrier	false	o-ran-smo-teiv-ran-logical
GNBCUCPFUNCTION_PROVIDES_NRCELLCU	provided-nrCellCu	GNBCUCPFunction	o-ran-smo-teiv-ran-logical	1	1	provided-by-gnbcucpFunction	NRCellCU	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_NRCellCU	false	o-ran-smo-teiv-ran-logical
GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	realised-by-cloudNativeApplication	GNBCUCPFunction	o-ran-smo-teiv-ran-logical	0	9223372036854775807	realised-gnbcucpFunction	CloudNativeApplication	o-ran-smo-teiv-ran-cloud	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical-to-cloud_GNBCUCPFUNCTION_REALISED_BY_CLOUDNATIVEAPPLICATION	false	o-ran-smo-teiv-ran-logical-to-cloud
NRSECTORCARRIER_USES_ANTENNACAPABILITY	used-antennaCapability	NRSectorCarrier	o-ran-smo-teiv-ran-logical	0	9223372036854775807	used-by-nrSectorCarrier	AntennaCapability	o-ran-smo-teiv-ran-logical	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-logical_NRSectorCarrier	false	o-ran-smo-teiv-ran-logical
ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE	realised-by-antennaModule	AntennaCapability	o-ran-smo-teiv-ran-logical	0	9223372036854775807	realised-antennaCapability	AntennaModule	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical-to-equipment_ANTENNACAPABILITY_REALISED_BY_ANTENNAMODULE	false	o-ran-smo-teiv-ran-logical-to-equipment
TESTENTITYA_PROVIDES_TESTENTITYB	provided-testEntityB	TestEntityA	o-ran-smo-teiv-ran-logical	0	2	provided-by-testEntityA	TestEntityB	o-ran-smo-teiv-ran-logical	0	3	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical_TESTENTITYA_PROVIDES_TESTENTITYB	false	o-ran-smo-teiv-ran-logical
TESTENTITYA_USES_TESTENTITYB	used-TestEntityB	TestEntityA	o-ran-smo-teiv-ran-logical	0	1	used-by-testEntityA	TestEntityB	o-ran-smo-teiv-ran-logical	0	2	BI_DIRECTIONAL	B_SIDE	o-ran-smo-teiv-ran-logical_TestEntityB	false	o-ran-smo-teiv-ran-logical
TESTENTITYA_GROUPS_TESTENTITYB	grouped-testEntityB	TestEntityA	o-ran-smo-teiv-ran-logical	0	2	grouped-by-testEntityA	TestEntityB	o-ran-smo-teiv-ran-logical	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-logical_TESTENTITYA_GROUPS_TESTENTITYB	false	o-ran-smo-teiv-ran-logical
ANTENNAMODULE_INSTALLED_AT_SITE	installed-at-site	AntennaModule	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	installed-antennaModule	Site	o-ran-smo-teiv-ran-equipment	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-equipment_AntennaModule	false	o-ran-smo-teiv-ran-equipment
PHYSICALNETWORKAPPLIANCE_INSTALLED_AT_SITE	installed-at-site	PhysicalNetworkAppliance	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	installed-physicalNetworkAppliance	Site	o-ran-smo-teiv-ran-equipment	0	1	BI_DIRECTIONAL	A_SIDE	o-ran-smo-teiv-ran-equipment_PhysicalNetworkAppliance	false	o-ran-smo-teiv-ran-equipment
ANTENNAMODULE_REALISED_BY_ANTENNAMODULE	realised-by-antennaModule	AntennaModule	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	realised-antennaModule	AntennaModule	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-equipment_ANTENNAMODULE_REALISED_BY_ANTENNAMODULE	true	o-ran-smo-teiv-ran-equipment
ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE	realised-by-antennaModule	AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-equipment	0	1	realised-antennaModule	AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-equipment	0	9223372036854775807	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-equipment_ANTENNAMODULEEEEEEEEEEEE_REALISED_BY_ANTENNAMODULEEEEEEEEEEEEEEE	true	o-ran-smo-teiv-ran-equipment
ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE	deployed-on-antennaModule	AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-equipment	0	1	deployed-antennaModule	AntennaModuleeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee	o-ran-smo-teiv-ran-equipment	0	1	BI_DIRECTIONAL	RELATION	o-ran-smo-teiv-ran-equipment_ANTENNAMODULEEEEEEEEEEEE_DEPLOYED_ON_ANTENNAMODULEEEEEEEEEEEEEEE	true	o-ran-smo-teiv-ran-equipment
\.

;

COMMIT;
